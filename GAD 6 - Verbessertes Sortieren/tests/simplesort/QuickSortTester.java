package tests.simplesort;

import gad.simplesort.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;

class QuickSortTester {

    @BeforeEach
    void printLine() {
        System.out.println("-------------------------");
    }

    /**
     * Tests the quicksort using the last pivot
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortBasic() {
        Quicksort quicksort = new Quicksort(PivotFinder.getLastPivot(), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {44, -44, -33, -34, 8, -5, -47, -24, 49, 3, 34};
        sortedArray = new int[]{-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [44, -44, -33, -34, 8, -5, -47, -24, 49, 3, 34] in [0, 10]");
            expectedResult.add("\n\tLPA : [3, -44, -33, -34, 8, -5, -47, -24, 34, 44, 49] in [0, 7]");
            expectedResult.add("\n\tLPA : [3, -44, -33, -34, 8, -5, -47, -24, 34, 44, 49] in [9, 10]");
            expectedResult.add("\nQS : [3, -44, -33, -34, 8, -5, -47, -24, 34, 44, 49] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [0, 3]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [5, 7]");
            expectedResult.add("\nQS : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [0, 3]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [0, 1]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [3, 3]");
            expectedResult.add("\nQS : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [0, 1]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [0, 0]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [2, 1]");
            expectedResult.add("\nQS : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [5, 7]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [5, 6]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [8, 7]");
            expectedResult.add("\nQS : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [5, 6]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [5, 5]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [7, 6]");
            expectedResult.add("\nQS : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [9, 10]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [9, 9]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [11, 10]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {6, 37, 10, 5, -35, -25, -31, 4, -40, 27, 12, 43, -16, 30, -45, -18};
        sortedArray = new int[]{-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [6, 37, 10, 5, -35, -25, -31, 4, -40, 27, 12, 43, -16, 30, -45, -18] in [0, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -31, -25, -35, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [0, 4]");
            expectedResult.add("\n\tLPA : [-45, -40, -31, -25, -35, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [6, 15]");
            expectedResult.add("\nQS : [-45, -40, -31, -25, -35, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [0, 4]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [3, 4]");
            expectedResult.add("\nQS : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [0, 0]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [2, 1]");
            expectedResult.add("\nQS : [-45, -40, -35, -25, -31, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [3, 4]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [3, 2]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [4, 4]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, 10, 4, 37, 27, 12, 43, -16, 30, 6, 5] in [6, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [6, 7]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [9, 15]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [6, 7]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [6, 6]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [8, 7]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [9, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 13]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [15, 15]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 13]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 12]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [14, 13]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 12]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 12, 30, 37, 43] in [9, 9]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 12, 30, 37, 43] in [11, 12]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 12, 30, 37, 43] in [11, 12]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43] in [11, 10]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43] in [12, 12]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-33, 48, 39, -5, -45, -37, -11, 48, -28, -7, -48, -39, 27, 2, 11, 39, 22, 19, -27, -38, -43};
        sortedArray = new int[]{-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-33, 48, 39, -5, -45, -37, -11, 48, -28, -7, -48, -39, 27, 2, 11, 39, 22, 19, -27, -38, -43] in [0, 20]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [0, 1]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [3, 20]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [0, 1]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [0, 0]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [2, 1]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, 48, -37, -11, 48, -28, -7, -33, -39, 27, 2, 11, 39, 22, 19, -27, -38, 39] in [3, 20]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 27, 2, 11, 19, 22, 39, 48, 48, 39] in [3, 16]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 27, 2, 11, 19, 22, 39, 48, 48, 39] in [18, 20]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 27, 2, 11, 19, 22, 39, 48, 48, 39] in [3, 16]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 19, 2, 11, 22, 27, 39, 48, 48, 39] in [3, 14]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 19, 2, 11, 22, 27, 39, 48, 48, 39] in [16, 16]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 19, 2, 11, 22, 27, 39, 48, 48, 39] in [3, 14]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [3, 12]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [14, 14]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [3, 12]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [3, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [13, 12]");
            expectedResult.add("\nQS : [-48, -45, -43, -5, -38, -37, -11, -27, -28, -7, -33, -39, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [3, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [3, 2]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 11]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 10]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [12, 11]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -11, -27, -28, -7, -33, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 10]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 5]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [7, 10]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 5]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [4, 4]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [6, 5]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -7, -11, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [7, 10]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [7, 8]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [10, 10]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -27, -28, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [7, 8]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [7, 6]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [8, 8]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 48, 48, 39] in [18, 20]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [18, 17]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [19, 20]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [19, 20]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [19, 18]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [20, 20]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-5, -4, 5, 48, -20, -7, -45, 45, -10, -31, -24, 45, -3, 38, -33, -26, 32, 18, -15, -1, 3, 2, -4, 11, 33, -25};
        sortedArray = new int[]{-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-5, -4, 5, 48, -20, -7, -45, 45, -10, -31, -24, 45, -3, 38, -33, -26, 32, 18, -15, -1, 3, 2, -4, 11, 33, -25] in [0, 25]");
            expectedResult.add("\n\tLPA : [-26, -33, -31, -45, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [0, 3]");
            expectedResult.add("\n\tLPA : [-26, -33, -31, -45, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [5, 25]");
            expectedResult.add("\nQS : [-26, -33, -31, -45, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [0, -1]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [1, 3]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [1, 3]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [1, 2]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [4, 3]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [1, 2]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [1, 1]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [3, 2]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -7, 48, 45, -10, 5, -24, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, -20] in [5, 25]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [5, 5]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [7, 25]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [7, 25]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [7, 24]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [26, 25]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, 45, -10, 5, -7, 45, -3, 38, -4, -5, 32, 18, -15, -1, 3, 2, -4, 11, 33, 48] in [7, 24]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 11, -10, 5, -7, -4, -3, 2, -4, -5, 32, 18, -15, -1, 3, 33, 45, 45, 38, 48] in [7, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, 11, -10, 5, -7, -4, -3, 2, -4, -5, 32, 18, -15, -1, 3, 33, 45, 45, 38, 48] in [22, 24]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, 11, -10, 5, -7, -4, -3, 2, -4, -5, 32, 18, -15, -1, 3, 33, 45, 45, 38, 48] in [7, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -1, -10, -15, -7, -4, -3, 2, -4, -5, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [7, 15]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -1, -10, -15, -7, -4, -3, 2, -4, -5, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [17, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -1, -10, -15, -7, -4, -3, 2, -4, -5, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [7, 15]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -7, -10, -15, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [7, 9]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -7, -10, -15, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [11, 15]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -7, -10, -15, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [7, 9]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [7, 6]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [8, 9]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [8, 9]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [8, 8]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [10, 9]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, 2, -4, -1, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [11, 15]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [11, 13]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [15, 15]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [11, 13]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [11, 10]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [12, 13]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -3, -4, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [12, 13]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [12, 11]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [13, 13]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [17, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [17, 19]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [21, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 18, 5, 11, 32, 33, 45, 45, 38, 48] in [17, 19]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 38, 48] in [17, 17]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 38, 48] in [19, 19]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 38, 48] in [22, 24]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [22, 21]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [23, 24]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [23, 24]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [23, 22]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [24, 24]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the quicksort using the mid pivot
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortMidPivot() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMidPivot(), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11};
        sortedArray = new int[]{-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11] in [0, 10]");
            expectedResult.add("\n\tLPA : [-31, -38, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [0, 1]");
            expectedResult.add("\n\tLPA : [-31, -38, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [3, 10]");
            expectedResult.add("\nQS : [-31, -38, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [0, 1]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [0, 0]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [2, 1]");
            expectedResult.add("\nQS : [-38, -31, -28, 21, -23, 11, 17, -12, 14, 29, 36] in [3, 10]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, 14, -23, 11, -12, 17, 21, 29, 36] in [3, 6]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, 14, -23, 11, -12, 17, 21, 29, 36] in [8, 10]");
            expectedResult.add("\nQS : [-38, -31, -28, 14, -23, 11, -12, 17, 21, 29, 36] in [3, 6]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [3, 2]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [4, 6]");
            expectedResult.add("\nQS : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [4, 6]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [4, 4]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [6, 6]");
            expectedResult.add("\nQS : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [8, 10]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [8, 8]");
            expectedResult.add("\n\tLPA : [-38, -31, -28, -23, -12, 11, 14, 17, 21, 29, 36] in [10, 10]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-45, 22, 43, 29, -17, 29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41};
        sortedArray = new int[]{-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-45, 22, 43, 29, -17, 29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41] in [0, 15]");
            expectedResult.add("\n\tLPA : [-45, -33, -23, -42, -17, -41, -29, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [0, 6]");
            expectedResult.add("\n\tLPA : [-45, -33, -23, -42, -17, -41, -29, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [8, 15]");
            expectedResult.add("\nQS : [-45, -33, -23, -42, -17, -41, -29, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [0, 6]");
            expectedResult.add("\n\tLPA : [-45, -42, -23, -29, -17, -41, -33, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [0, 0]");
            expectedResult.add("\n\tLPA : [-45, -42, -23, -29, -17, -41, -33, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 6]");
            expectedResult.add("\nQS : [-45, -42, -23, -29, -17, -41, -33, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 6]");
            expectedResult.add("\n\tLPA : [-45, -42, -23, -29, -33, -41, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 5]");
            expectedResult.add("\n\tLPA : [-45, -42, -23, -29, -33, -41, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [7, 6]");
            expectedResult.add("\nQS : [-45, -42, -23, -29, -33, -41, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 5]");
            expectedResult.add("\n\tLPA : [-45, -42, -33, -41, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 3]");
            expectedResult.add("\n\tLPA : [-45, -42, -33, -41, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [5, 5]");
            expectedResult.add("\nQS : [-45, -42, -33, -41, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 3]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [2, 2]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [4, 3]");
            expectedResult.add("\nQS : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 43, 31, 22, 7, 0, 29] in [8, 15]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 0, 29, 22, 7, 31, 43] in [8, 13]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 0, 29, 22, 7, 31, 43] in [15, 15]");
            expectedResult.add("\nQS : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 29, 0, 29, 22, 7, 31, 43] in [8, 13]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 29, 22, 29, 31, 43] in [8, 8]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 29, 22, 29, 31, 43] in [10, 13]");
            expectedResult.add("\nQS : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 29, 22, 29, 31, 43] in [10, 13]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43] in [10, 11]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43] in [13, 13]");
            expectedResult.add("\nQS : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43] in [10, 11]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43] in [10, 9]");
            expectedResult.add("\n\tLPA : [-45, -42, -41, -33, -29, -23, -17, -14, -7, 0, 7, 22, 29, 29, 31, 43] in [11, 11]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {11, 9, 14, 47, 45, 30, 16, 0, -44, -35, -29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11};
        sortedArray = new int[]{-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [11, 9, 14, 47, 45, 30, 16, 0, -44, -35, -29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11] in [0, 20]");
            expectedResult.add("\n\tLPA : [-41, -50, -48, -35, -44, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [0, 4]");
            expectedResult.add("\n\tLPA : [-41, -50, -48, -35, -44, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [6, 20]");
            expectedResult.add("\nQS : [-41, -50, -48, -35, -44, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [0, 4]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -35, -41, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -35, -41, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [2, 4]");
            expectedResult.add("\nQS : [-50, -48, -44, -35, -41, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [2, 4]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [2, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [5, 4]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [2, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [2, 1]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [3, 3]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, 16, 0, 45, 47, -11, 36, 12, 14, 16, 4, -13, 1, 9, 11, 30] in [6, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 11, 0, 9, 1, -11, -13, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, 11, 0, 9, 1, -11, -13, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [15, 20]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, 11, 0, 9, 1, -11, -13, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, 0, -11, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 8]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, 0, -11, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [10, 13]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, 0, -11, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 8]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 7]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [9, 8]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 7]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [6, 5]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [7, 7]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 11, 12, 4, 14, 30, 36, 47, 45, 16, 16] in [10, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 4, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [10, 11]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 4, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [13, 13]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 9, 4, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [10, 11]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [10, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [12, 11]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 47, 45, 16, 16] in [15, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 16, 45, 16, 47] in [15, 19]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 16, 45, 16, 47] in [21, 20]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 30, 36, 16, 45, 16, 47] in [15, 19]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 45, 36, 47] in [15, 15]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 45, 36, 47] in [17, 19]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 45, 36, 47] in [17, 19]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47] in [17, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47] in [20, 19]");
            expectedResult.add("\nQS : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47] in [17, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47] in [17, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -44, -41, -35, -29, -13, -11, 0, 1, 4, 9, 11, 12, 14, 16, 16, 30, 36, 45, 47] in [18, 18]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19, 24, -31, -21, 1, 9, -46, 6, -34, -7, -17, 39};
        sortedArray = new int[]{-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19, 24, -31, -21, 1, 9, -46, 6, -34, -7, -17, 39] in [0, 25]");
            expectedResult.add("\n\tLPA : [-45, -34, -46, -21, -31, -20, -45, -39, -47, -32, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [0, 9]");
            expectedResult.add("\n\tLPA : [-45, -34, -46, -21, -31, -20, -45, -39, -47, -32, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [11, 25]");
            expectedResult.add("\nQS : [-45, -34, -46, -21, -31, -20, -45, -39, -47, -32, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [0, 9]");
            expectedResult.add("\n\tLPA : [-45, -34, -46, -47, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [0, 6]");
            expectedResult.add("\n\tLPA : [-45, -34, -46, -47, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [8, 9]");
            expectedResult.add("\nQS : [-45, -34, -46, -47, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [0, 6]");
            expectedResult.add("\n\tLPA : [-47, -34, -46, -45, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [0, -1]");
            expectedResult.add("\n\tLPA : [-47, -34, -46, -45, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [1, 6]");
            expectedResult.add("\nQS : [-47, -34, -46, -45, -32, -39, -45, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [1, 6]");
            expectedResult.add("\n\tLPA : [-47, -45, -46, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [1, 2]");
            expectedResult.add("\n\tLPA : [-47, -45, -46, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [4, 6]");
            expectedResult.add("\nQS : [-47, -45, -46, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [1, 2]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [1, 1]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [3, 2]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -32, -39, -34, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [4, 6]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [4, 3]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [5, 6]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [5, 6]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [5, 4]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [6, 6]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [8, 9]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [8, 7]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [9, 9]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, 8, 39, -11, 19, 24, 29, -9, 1, 9, -11, 6, -10, -7, -17, -6] in [11, 25]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -7, -11, -10, -11, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [11, 17]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -7, -11, -10, -11, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [19, 25]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -7, -11, -10, -11, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [11, 17]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [11, 13]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [15, 17]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [11, 13]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [11, 11]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [13, 13]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -6, -9, 1, 9, 24, 6, 19, 39, 8, 29] in [15, 17]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -9, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [15, 16]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -9, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [18, 17]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -7, -9, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [15, 16]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [15, 15]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [17, 16]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 24, 6, 19, 39, 8, 29] in [19, 25]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 8, 6, 19, 39, 24, 29] in [19, 21]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 8, 6, 19, 39, 24, 29] in [23, 25]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 9, 8, 6, 19, 39, 24, 29] in [19, 21]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 39, 24, 29] in [19, 19]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 39, 24, 29] in [21, 21]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 39, 24, 29] in [23, 25]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39] in [23, 22]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39] in [24, 25]");
            expectedResult.add("\nQS : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39] in [24, 25]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39] in [24, 23]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -45, -39, -34, -32, -31, -21, -20, -18, -17, -11, -11, -10, -9, -7, -6, 1, 6, 8, 9, 19, 24, 29, 39] in [25, 25]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using a random pivot (seed is provided)
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortRandomPivot() {
        Quicksort quicksort = new Quicksort(PivotFinder.getRandomPivot(42069), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {44, -44, -33, -34, 8, -5, -47, -24, 49, 3, 34};
        sortedArray = new int[]{-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [44, -44, -33, -34, 8, -5, -47, -24, 49, 3, 34] in [0, 10]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 8, -5, 34, -24, 49, 3, 44] in [0, -1]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 8, -5, 34, -24, 49, 3, 44] in [1, 10]");
            expectedResult.add("\nQS : [-47, -44, -33, -34, 8, -5, 34, -24, 49, 3, 44] in [1, 10]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 8, -5, 34, -24, 3, 44, 49] in [1, 8]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 8, -5, 34, -24, 3, 44, 49] in [10, 10]");
            expectedResult.add("\nQS : [-47, -44, -33, -34, 8, -5, 34, -24, 3, 44, 49] in [1, 8]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 3, -5, -24, 8, 34, 44, 49] in [1, 6]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, 3, -5, -24, 8, 34, 44, 49] in [8, 8]");
            expectedResult.add("\nQS : [-47, -44, -33, -34, 3, -5, -24, 8, 34, 44, 49] in [1, 6]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [1, 5]");
            expectedResult.add("\n\tLPA : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [7, 6]");
            expectedResult.add("\nQS : [-47, -44, -33, -34, -24, -5, 3, 8, 34, 44, 49] in [1, 5]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -5, -24, -33, 3, 8, 34, 44, 49] in [1, 1]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -5, -24, -33, 3, 8, 34, 44, 49] in [3, 5]");
            expectedResult.add("\nQS : [-47, -44, -34, -5, -24, -33, 3, 8, 34, 44, 49] in [3, 5]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [3, 3]");
            expectedResult.add("\n\tLPA : [-47, -44, -34, -33, -24, -5, 3, 8, 34, 44, 49] in [5, 5]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {6, 37, 10, 5, -35, -25, -31, 4, -40, 27, 12, 43, -16, 30, -45, -18};
        sortedArray = new int[]{-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [6, 37, 10, 5, -35, -25, -31, 4, -40, 27, 12, 43, -16, 30, -45, -18] in [0, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [3, 15]");
            expectedResult.add("\nQS : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [0, -1]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [1, 1]");
            expectedResult.add("\nQS : [-45, -40, -35, 5, -18, -25, -31, 4, 37, 27, 12, 43, -16, 30, 6, 10] in [3, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [3, 7]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [9, 15]");
            expectedResult.add("\nQS : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [3, 7]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [3, 6]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [8, 7]");
            expectedResult.add("\nQS : [-45, -40, -35, -16, -18, -25, -31, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [3, 6]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [3, 2]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [4, 6]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [4, 6]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [4, 5]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [7, 6]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -18, -25, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [4, 5]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [4, 4]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [6, 5]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 43, 10, 30, 6, 37] in [9, 15]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 13]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [15, 15]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 27, 12, 6, 10, 30, 37, 43] in [9, 13]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 30, 12, 37, 43] in [9, 9]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 30, 12, 37, 43] in [11, 13]");
            expectedResult.add("\nQS : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 27, 30, 12, 37, 43] in [11, 13]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43] in [11, 11]");
            expectedResult.add("\n\tLPA : [-45, -40, -35, -31, -25, -18, -16, 4, 5, 6, 10, 12, 27, 30, 37, 43] in [13, 13]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-33, 48, 39, -5, -45, -37, -11, 48, -28, -7, -48, -39, 27, 2, 11, 39, 22, 19, -27, -38, -43};
        sortedArray = new int[]{-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-33, 48, 39, -5, -45, -37, -11, 48, -28, -7, -48, -39, 27, 2, 11, 39, 22, 19, -27, -38, -43] in [0, 20]");
            expectedResult.add("\n\tLPA : [-33, -38, -27, -5, -45, -37, -11, 19, -28, -7, -48, -39, 27, 2, 11, -43, 22, 39, 39, 48, 48] in [0, 16]");
            expectedResult.add("\n\tLPA : [-33, -38, -27, -5, -45, -37, -11, 19, -28, -7, -48, -39, 27, 2, 11, -43, 22, 39, 39, 48, 48] in [18, 20]");
            expectedResult.add("\nQS : [-33, -38, -27, -5, -45, -37, -11, 19, -28, -7, -48, -39, 27, 2, 11, -43, 22, 39, 39, 48, 48] in [0, 16]");
            expectedResult.add("\n\tLPA : [-33, -38, -43, -39, -45, -37, -48, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [0, 6]");
            expectedResult.add("\n\tLPA : [-33, -38, -43, -39, -45, -37, -48, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [8, 16]");
            expectedResult.add("\nQS : [-33, -38, -43, -39, -45, -37, -48, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [0, 6]");
            expectedResult.add("\n\tLPA : [-45, -48, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -48, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [5, 6]");
            expectedResult.add("\nQS : [-45, -48, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [0, 3]");
            expectedResult.add("\n\tLPA : [-48, -39, -43, -45, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [0, -1]");
            expectedResult.add("\n\tLPA : [-48, -39, -43, -45, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [1, 3]");
            expectedResult.add("\nQS : [-48, -39, -43, -45, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [1, 3]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [1, 1]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [3, 3]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [5, 6]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [5, 5]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [7, 6]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, 22, -7, -11, -5, 27, 2, 11, -27, 19, 39, 39, 48, 48] in [8, 16]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 27, 2, 11, 19, 22, 39, 39, 48, 48] in [8, 7]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 27, 2, 11, 19, 22, 39, 39, 48, 48] in [9, 16]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 27, 2, 11, 19, 22, 39, 39, 48, 48] in [9, 16]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 19, 2, 11, 22, 27, 39, 39, 48, 48] in [9, 14]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 19, 2, 11, 22, 27, 39, 39, 48, 48] in [16, 16]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 19, 2, 11, 22, 27, 39, 39, 48, 48] in [9, 14]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [9, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [13, 14]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -7, -11, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [9, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -5, -7, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [9, 8]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -5, -7, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [10, 11]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -5, -7, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [10, 11]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [10, 10]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [12, 11]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [13, 14]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [13, 12]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [14, 14]");
            expectedResult.add("\nQS : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [18, 20]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [18, 18]");
            expectedResult.add("\n\tLPA : [-48, -45, -43, -39, -38, -37, -33, -28, -27, -11, -7, -5, 2, 11, 19, 22, 27, 39, 39, 48, 48] in [20, 20]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-5, -4, 5, 48, -20, -7, -45, 45, -10, -31, -24, 45, -3, 38, -33, -26, 32, 18, -15, -1, 3, 2, -4, 11, 33, -25};
        sortedArray = new int[]{-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-5, -4, 5, 48, -20, -7, -45, 45, -10, -31, -24, 45, -3, 38, -33, -26, 32, 18, -15, -1, 3, 2, -4, 11, 33, -25] in [0, 25]");
            expectedResult.add("\n\tLPA : [-5, -4, 5, -25, -20, -7, -45, 11, -10, -31, -24, -4, -3, 2, -33, -26, 32, 18, -15, -1, 3, 33, 45, 45, 48, 38] in [0, 20]");
            expectedResult.add("\n\tLPA : [-5, -4, 5, -25, -20, -7, -45, 11, -10, -31, -24, -4, -3, 2, -33, -26, 32, 18, -15, -1, 3, 33, 45, 45, 48, 38] in [22, 25]");
            expectedResult.add("\nQS : [-5, -4, 5, -25, -20, -7, -45, 11, -10, -31, -24, -4, -3, 2, -33, -26, 32, 18, -15, -1, 3, 33, 45, 45, 48, 38] in [0, 20]");
            expectedResult.add("\n\tLPA : [-26, -33, -24, -25, -20, -31, -45, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 6]");
            expectedResult.add("\n\tLPA : [-26, -33, -24, -25, -20, -31, -45, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [8, 20]");
            expectedResult.add("\nQS : [-26, -33, -24, -25, -20, -31, -45, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 6]");
            expectedResult.add("\n\tLPA : [-26, -33, -45, -25, -31, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 4]");
            expectedResult.add("\n\tLPA : [-26, -33, -45, -25, -31, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [6, 6]");
            expectedResult.add("\nQS : [-26, -33, -45, -25, -31, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 4]");
            expectedResult.add("\n\tLPA : [-26, -33, -45, -31, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 3]");
            expectedResult.add("\n\tLPA : [-26, -33, -45, -31, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [5, 4]");
            expectedResult.add("\nQS : [-26, -33, -45, -31, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [3, 3]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 1]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [0, 0]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [2, 1]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [8, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [8, 7]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [9, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, 5, -4, -3, 2, -4, -5, 32, 18, 3, -1, 11, 33, 45, 45, 48, 38] in [9, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [9, 11]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [13, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [9, 11]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [9, 8]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [10, 11]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [10, 11]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [10, 9]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [11, 11]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, 2, 11, 5, 32, 18, 3, -1, -3, 33, 45, 45, 48, 38] in [13, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [13, 14]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [16, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [13, 14]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [13, 13]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [15, 14]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 32, 18, 3, 11, 5, 33, 45, 45, 48, 38] in [16, 20]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 5, 18, 3, 11, 32, 33, 45, 45, 48, 38] in [16, 19]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 5, 18, 3, 11, 32, 33, 45, 45, 48, 38] in [21, 20]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 5, 18, 3, 11, 32, 33, 45, 45, 48, 38] in [16, 19]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [16, 16]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [18, 19]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [18, 19]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [18, 17]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [19, 19]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 45, 45, 48, 38] in [22, 25]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 48, 45] in [22, 22]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 48, 45] in [24, 25]");
            expectedResult.add("\nQS : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 48, 45] in [24, 25]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [24, 24]");
            expectedResult.add("\n\tLPA : [-45, -33, -31, -26, -25, -24, -20, -15, -10, -7, -5, -4, -4, -3, -1, 2, 3, 5, 11, 18, 32, 33, 38, 45, 45, 48] in [26, 25]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF MEDIAN FRONT (Elements to be considered = 3)
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortMedianPivotFront3() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotFront(3), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11, -45, 22, 43, 29, -17};
        sortedArray = new int[]{-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11, -45, 22, 43, 29, -17] in [0, 15]");
            expectedResult.add("\n\tLPA : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [5, 15]");
            expectedResult.add("\nQS : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 0]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 3]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 3]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 1]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [3, 3]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [5, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [5, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [10, 15]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [5, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [5, 5]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [7, 8]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [7, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [7, 6]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [8, 8]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [10, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 43, 29, 36] in [10, 10]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 43, 29, 36] in [12, 15]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 43, 29, 36] in [12, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [12, 12]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [14, 15]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [14, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [14, 13]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [15, 15]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41, 11, 9, 14, 47, 45, 30, 16, 0, -44, -35};
        sortedArray = new int[]{-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41, 11, 9, 14, 47, 45, 30, 16, 0, -44, -35] in [0, 20]");
            expectedResult.add("\n\tLPA : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 6]");
            expectedResult.add("\n\tLPA : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [8, 20]");
            expectedResult.add("\nQS : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 6]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 2]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [4, 6]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 2]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 0]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [2, 2]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -29, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [4, 6]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [4, 4]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [6, 6]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [8, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 0, -7, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [8, 9]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 0, -7, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [11, 20]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, 0, -7, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [8, 9]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [8, 7]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [9, 9]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 11, 9, 14, 47, 45, 30, 16, 7, 29, 31] in [11, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [11, 12]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [14, 20]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [11, 12]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [11, 10]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [12, 12]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 47, 45, 30, 16, 31, 29, 14] in [14, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 29, 14, 30, 16, 31, 45, 47] in [14, 18]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 29, 14, 30, 16, 31, 45, 47] in [20, 20]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 29, 14, 30, 16, 31, 45, 47] in [14, 18]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 16, 14, 29, 31, 30, 45, 47] in [14, 15]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 16, 14, 29, 31, 30, 45, 47] in [17, 18]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 16, 14, 29, 31, 30, 45, 47] in [14, 15]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 31, 30, 45, 47] in [14, 13]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 31, 30, 45, 47] in [15, 15]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 31, 30, 45, 47] in [17, 18]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47] in [17, 16]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47] in [18, 18]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19};
        sortedArray = new int[]{-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19] in [0, 25]");
            expectedResult.add("\n\tLPA : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [0, 20]");
            expectedResult.add("\n\tLPA : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [22, 25]");
            expectedResult.add("\nQS : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [0, 20]");
            expectedResult.add("\n\tLPA : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [9, 20]");
            expectedResult.add("\nQS : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -41, -50, -48, -45, -45, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 5]");
            expectedResult.add("\n\tLPA : [-47, -41, -50, -48, -45, -45, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [7, 7]");
            expectedResult.add("\nQS : [-47, -41, -50, -48, -45, -45, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 5]");
            expectedResult.add("\n\tLPA : [-48, -50, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 1]");
            expectedResult.add("\n\tLPA : [-48, -50, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [3, 5]");
            expectedResult.add("\nQS : [-48, -50, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 1]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, -1]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [1, 1]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [3, 5]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [3, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [5, 5]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [9, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [14, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [12, 12]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 8]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [10, 10]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [14, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [14, 15]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [17, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [14, 15]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [14, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [15, 15]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 8, 4, 1, -6, 12, 16, 19, 36, 29] in [17, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 1, -6, 4, 8, 12, 16, 19, 36, 29] in [17, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 1, -6, 4, 8, 12, 16, 19, 36, 29] in [20, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, 1, -6, 4, 8, 12, 16, 19, 36, 29] in [17, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [17, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [18, 18]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [22, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [22, 22]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [24, 25]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [24, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36] in [24, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36] in [25, 25]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF MEDIAN FRONT (Elements to be considered = 5)
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortMedianPivotFront5() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotFront(5), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11, -45, 22, 43, 29, -17};
        sortedArray = new int[]{-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-23, 36, -38, 21, -31, -28, 17, -12, 14, 29, 11, -45, 22, 43, 29, -17] in [0, 15]");
            expectedResult.add("\n\tLPA : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [5, 15]");
            expectedResult.add("\nQS : [-45, -28, -38, -31, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 3]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [0, 0]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 3]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 3]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [2, 1]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [3, 3]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, 36, 17, -12, 14, 29, 11, -17, 22, 43, 29, 21] in [5, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [5, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [10, 15]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, 11, -12, 14, 17, 21, 36, 22, 43, 29, 29] in [5, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [5, 5]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [7, 8]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 14, 11, 17, 21, 36, 22, 43, 29, 29] in [7, 8]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [7, 6]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [8, 8]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 36, 22, 43, 29, 29] in [10, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 29, 22, 29, 36, 43] in [10, 12]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 29, 22, 29, 36, 43] in [14, 15]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 29, 22, 29, 36, 43] in [10, 12]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [10, 10]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [12, 12]");
            expectedResult.add("\nQS : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [14, 15]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [14, 13]");
            expectedResult.add("\n\tLPA : [-45, -38, -31, -28, -23, -17, -12, 11, 14, 17, 21, 22, 29, 29, 36, 43] in [15, 15]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41, 11, 9, 14, 47, 45, 30, 16, 0, -44, -35};
        sortedArray = new int[]{-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [29, -29, -14, -7, -42, -23, 31, -33, 7, 0, -41, 11, 9, 14, 47, 45, 30, 16, 0, -44, -35] in [0, 20]");
            expectedResult.add("\n\tLPA : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 6]");
            expectedResult.add("\n\tLPA : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [8, 20]");
            expectedResult.add("\nQS : [-44, -29, -35, -41, -42, -23, -33, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 6]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 1]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [3, 6]");
            expectedResult.add("\nQS : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, 1]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [0, -1]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [1, 1]");
            expectedResult.add("\nQS : [-44, -42, -41, -33, -29, -23, -35, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [3, 6]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -23, -29, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [3, 3]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -23, -29, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [5, 6]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -23, -29, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [5, 6]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [5, 4]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [6, 6]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, 7, 0, -7, 11, 9, 14, 47, 45, 30, 16, 0, 29, 31] in [8, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 0, 0, -7, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [8, 10]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, 0, 0, -7, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [12, 20]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, 0, 0, -7, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [8, 10]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [8, 8]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [10, 10]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 47, 45, 30, 16, 31, 29, 11] in [12, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 29, 16, 11, 30, 31, 47, 45] in [12, 16]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 29, 16, 11, 30, 31, 47, 45] in [18, 20]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 14, 29, 16, 11, 30, 31, 47, 45] in [12, 16]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [12, 13]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [15, 16]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [12, 13]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [12, 11]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [13, 13]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [15, 16]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [15, 14]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [16, 16]");
            expectedResult.add("\nQS : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 47, 45] in [18, 20]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47] in [18, 18]");
            expectedResult.add("\n\tLPA : [-44, -42, -41, -35, -33, -29, -23, -14, -7, 0, 0, 7, 9, 11, 14, 16, 29, 30, 31, 45, 47] in [20, 20]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19};
        sortedArray = new int[]{-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-29, 36, 12, -48, 16, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, 29, -20, -45, -39, -47, -11, -6, 8, -18, -32, 19] in [0, 25]");
            expectedResult.add("\n\tLPA : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [0, 20]");
            expectedResult.add("\n\tLPA : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [22, 25]");
            expectedResult.add("\nQS : [-29, -32, -18, -48, 8, 4, -13, 1, -50, -41, -11, -45, -10, -11, -9, -6, -20, -45, -39, -47, -11, 12, 16, 19, 36, 29] in [0, 20]");
            expectedResult.add("\n\tLPA : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [9, 20]");
            expectedResult.add("\nQS : [-47, -32, -39, -48, -45, -45, -41, -50, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -45, -50, -48, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 3]");
            expectedResult.add("\n\tLPA : [-47, -45, -50, -48, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [5, 7]");
            expectedResult.add("\nQS : [-47, -45, -50, -48, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [2, 3]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [2, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [2, 1]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [3, 3]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -32, -41, -39, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [5, 7]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [5, 5]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [7, 7]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, 4, -10, -11, -9, -6, -20, 8, -18, -11, 1, 12, 16, 19, 36, 29] in [9, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [14, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -13, -11, -18, -20, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [9, 9]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [11, 12]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [11, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [11, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [12, 12]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -6, -10, 8, 4, 1, -11, 12, 16, 19, 36, 29] in [14, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -11, -10, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [14, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -11, -10, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [18, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -9, -11, -10, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [14, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [14, 14]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [16, 16]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 4, 1, 8, 12, 16, 19, 36, 29] in [18, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [18, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [20, 20]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [22, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [22, 22]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [24, 25]");
            expectedResult.add("\nQS : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 36, 29] in [24, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36] in [24, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -47, -45, -45, -41, -39, -32, -29, -20, -18, -13, -11, -11, -11, -10, -9, -6, 1, 4, 8, 12, 16, 19, 29, 36] in [25, 25]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {24, -31, -21, 1, 9, -46, 6, -34, -7, -17, 39, -35, 14, -33, 31, -18, 6, 8, -47, 45, 37, 35, 17, -32, -26, -44, -33, -45, -1, 22, 13};
        sortedArray = new int[]{-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 39, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [24, -31, -21, 1, 9, -46, 6, -34, -7, -17, 39, -35, 14, -33, 31, -18, 6, 8, -47, 45, 37, 35, 17, -32, -26, -44, -33, -45, -1, 22, 13] in [0, 30]");
            expectedResult.add("\n\tLPA : [-1, -31, -21, -45, -33, -46, -44, -34, -7, -17, -26, -35, -32, -33, -47, -18, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 15]");
            expectedResult.add("\n\tLPA : [-1, -31, -21, -45, -33, -46, -44, -34, -7, -17, -26, -35, -32, -33, -47, -18, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [17, 30]");
            expectedResult.add("\nQS : [-1, -31, -21, -45, -33, -46, -44, -34, -7, -17, -26, -35, -32, -33, -47, -18, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 15]");
            expectedResult.add("\n\tLPA : [-47, -33, -32, -45, -33, -46, -44, -34, -35, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 8]");
            expectedResult.add("\n\tLPA : [-47, -33, -32, -45, -33, -46, -44, -34, -35, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [10, 15]");
            expectedResult.add("\nQS : [-47, -33, -32, -45, -33, -46, -44, -34, -35, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 8]");
            expectedResult.add("\n\tLPA : [-47, -35, -34, -45, -44, -46, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 5]");
            expectedResult.add("\n\tLPA : [-47, -35, -34, -45, -44, -46, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [7, 8]");
            expectedResult.add("\nQS : [-47, -35, -34, -45, -44, -46, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 5]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 2]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [4, 5]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 2]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [0, 0]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [2, 2]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [4, 5]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [4, 3]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [5, 5]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -32, -33, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [7, 8]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [7, 6]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [8, 8]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -7, -21, -18, -1, -17, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [10, 15]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [10, 11]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [13, 15]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [10, 11]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [10, 9]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [11, 11]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -1, -7, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [13, 15]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [13, 13]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [15, 15]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 45, 37, 35, 17, 14, 39, 6, 9, 13, 24, 22, 6] in [17, 30]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 22, 24, 6, 17, 14, 13, 6, 9, 35, 37, 45, 39] in [17, 26]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 22, 24, 6, 17, 14, 13, 6, 9, 35, 37, 45, 39] in [28, 30]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 31, 22, 24, 6, 17, 14, 13, 6, 9, 35, 37, 45, 39] in [17, 26]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 6, 9, 13, 6, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [17, 23]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 6, 9, 13, 6, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [25, 26]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 8, 6, 9, 13, 6, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [17, 23]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [17, 18]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [20, 23]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [17, 18]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [17, 16]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [18, 18]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 13, 14, 17, 9, 22, 31, 24, 35, 37, 45, 39] in [20, 23]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [20, 20]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [22, 23]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 17, 14, 22, 31, 24, 35, 37, 45, 39] in [22, 23]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 31, 24, 35, 37, 45, 39] in [22, 21]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 31, 24, 35, 37, 45, 39] in [23, 23]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 31, 24, 35, 37, 45, 39] in [25, 26]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 45, 39] in [25, 24]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 45, 39] in [26, 26]");
            expectedResult.add("\nQS : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 45, 39] in [28, 30]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 39, 45] in [28, 28]");
            expectedResult.add("\n\tLPA : [-47, -46, -45, -44, -35, -34, -33, -33, -32, -31, -26, -21, -18, -17, -7, -1, 1, 6, 6, 8, 9, 13, 14, 17, 22, 24, 31, 35, 37, 39, 45] in [30, 30]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF DISTRIBUTED MEDIAN (Elements to be considered = 3)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortMedianPivotDistributed3() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(3), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11};
        sortedArray = new int[]{-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11] in [0, 15]");
            expectedResult.add("\n\tLPA : [-35, -48, -37, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [0, 2]");
            expectedResult.add("\n\tLPA : [-35, -48, -37, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [4, 15]");
            expectedResult.add("\nQS : [-35, -48, -37, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [0, 2]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [0, 0]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [2, 2]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, 5, 29, 40, 11, -19, -12, 12, 10, 36, 40, -16, -1] in [4, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -16, -19, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [4, 5]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -16, -19, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [7, 15]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -16, -19, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [4, 5]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [4, 3]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [5, 5]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, 11, 29, -1, 12, 10, 36, 40, 5, 40] in [7, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, 10, -1, 11, 29, 36, 40, 40, 12] in [7, 9]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, 10, -1, 11, 29, 36, 40, 40, 12] in [11, 15]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, 5, 10, -1, 11, 29, 36, 40, 40, 12] in [7, 9]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [7, 7]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [9, 9]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [11, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 40, 40, 36] in [11, 11]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 40, 40, 36] in [13, 15]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 40, 40, 36] in [13, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [13, 13]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [15, 15]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36};
        sortedArray = new int[]{-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36] in [0, 20]");
            expectedResult.add("\n\tLPA : [-36, -35, -49, -32, -50, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [0, 4]");
            expectedResult.add("\n\tLPA : [-36, -35, -49, -32, -50, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [6, 20]");
            expectedResult.add("\nQS : [-36, -35, -49, -32, -50, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [0, 4]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -32, -35, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -32, -35, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [2, 4]");
            expectedResult.add("\nQS : [-50, -49, -36, -32, -35, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [2, 4]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [2, 2]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [4, 4]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 44, -25, 41, 45, 15, 6, 6, 42] in [6, 20]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [6, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [19, 20]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, 23, -29, 31, 39, -31, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [6, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 15, -29, 6, -25, -31, 6, 13, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 12]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 15, -29, 6, -25, -31, 6, 13, 23, 39, 41, 31, 28, 42, 44, 45] in [14, 17]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, 15, -29, 6, -25, -31, 6, 13, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 12]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 6, -29, 6, -25, -31, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 10]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, 6, -29, 6, -25, -31, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [12, 12]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, 6, -29, 6, -25, -31, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 10]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 8]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [10, 10]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 8]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [6, 6]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [8, 8]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 39, 41, 31, 28, 42, 44, 45] in [14, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [14, 15]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [17, 17]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [14, 15]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [14, 13]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [15, 15]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [19, 20]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [19, 18]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [20, 20]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8, 26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5};
        sortedArray = new int[]{-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8, 26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5] in [0, 25]");
            expectedResult.add("\n\tLPA : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 17]");
            expectedResult.add("\n\tLPA : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [19, 25]");
            expectedResult.add("\nQS : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 17]");
            expectedResult.add("\n\tLPA : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 9]");
            expectedResult.add("\n\tLPA : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 17]");
            expectedResult.add("\nQS : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 9]");
            expectedResult.add("\n\tLPA : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 4]");
            expectedResult.add("\n\tLPA : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 9]");
            expectedResult.add("\nQS : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 4]");
            expectedResult.add("\n\tLPA : [-40, -48, -46, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 2]");
            expectedResult.add("\n\tLPA : [-40, -48, -46, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [4, 4]");
            expectedResult.add("\nQS : [-40, -48, -46, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 2]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 0]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [2, 2]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 9]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -25, -31, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 7]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -25, -31, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [9, 9]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -25, -31, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 7]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 5]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [7, 7]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 17]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 13]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 17]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 13]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 11]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [13, 13]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 17]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 15]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [17, 17]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [19, 25]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [19, 20]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [22, 25]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [19, 20]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [19, 18]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [20, 20]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [22, 25]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [22, 23]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [25, 25]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [22, 23]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [22, 21]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [23, 23]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19};
        sortedArray = new int[]{-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19] in [0, 30]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -43, -50, -34, -41, -21, -42, -33, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 10]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -43, -50, -34, -41, -21, -42, -33, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [12, 30]");
            expectedResult.add("\nQS : [-43, -42, -48, -43, -50, -34, -41, -21, -42, -33, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 10]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -43, -50, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 6]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -43, -50, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [8, 10]");
            expectedResult.add("\nQS : [-43, -42, -48, -43, -50, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 6]");
            expectedResult.add("\n\tLPA : [-50, -43, -48, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 2]");
            expectedResult.add("\n\tLPA : [-50, -43, -48, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [4, 6]");
            expectedResult.add("\nQS : [-50, -43, -48, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 2]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [2, 2]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -41, -42, -42, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [4, 6]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [4, 4]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [6, 6]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -19, -33, -21, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [8, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [8, 8]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [10, 10]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 9, 6, -15, 34, -5, -5, 6, 45, 3, 45, 16, 39, 12, 9, -18, 36, 27, 28, 2] in [12, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 2, 6, -15, -18, -5, -5, 6, 9, 3, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 2, 6, -15, -18, -5, -5, 6, 9, 3, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [22, 30]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, 2, 6, -15, -18, -5, -5, 6, 9, 3, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -5, -5, -15, -18, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 15]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -5, -5, -15, -18, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [17, 20]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -5, -5, -15, -18, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 15]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [15, 15]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 13]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [12, 11]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [13, 13]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [17, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [17, 17]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [19, 20]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [19, 20]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [19, 18]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [20, 20]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 39, 12, 45, 34, 36, 27, 28, 45] in [22, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 28, 12, 27, 34, 36, 45, 39, 45] in [22, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 28, 12, 27, 34, 36, 45, 39, 45] in [27, 30]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 16, 28, 12, 27, 34, 36, 45, 39, 45] in [22, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [22, 22]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [24, 25]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [24, 25]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [24, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [25, 25]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 45, 39, 45] in [27, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [27, 27]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [29, 30]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [29, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [29, 28]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [30, 30]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());



    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF DISTRIBUTED MEDIAN (Elements to be considered = 5)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * Tests WITHOUT SELECTION SORT OPTIMISATION
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortMedianPivotDistributed5() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(5), 0);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[] {-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11};
        sortedArray = new int[]{-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11] in [0, 15]");
            expectedResult.add("\n\tLPA : [-35, -48, -16, -19, -30, -37, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [0, 5]");
            expectedResult.add("\n\tLPA : [-35, -48, -16, -19, -30, -37, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [7, 15]");
            expectedResult.add("\nQS : [-35, -48, -16, -19, -30, -37, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [0, 5]");
            expectedResult.add("\n\tLPA : [-35, -48, -37, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [0, 2]");
            expectedResult.add("\n\tLPA : [-35, -48, -37, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [4, 5]");
            expectedResult.add("\nQS : [-35, -48, -37, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [0, 2]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [0, 0]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [2, 2]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -16, -19, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [4, 5]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [4, 3]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [5, 5]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 11, 12, 10, 36, 40, 40, 29] in [7, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 10, 11, 29, 36, 40, 40, 12] in [7, 9]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 10, 11, 29, 36, 40, 40, 12] in [11, 15]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, 5, -1, 10, 11, 29, 36, 40, 40, 12] in [7, 9]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [7, 7]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [9, 9]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 36, 40, 40, 12] in [11, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 12, 36, 40, 40] in [11, 12]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 12, 36, 40, 40] in [14, 15]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 29, 12, 36, 40, 40] in [11, 12]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [11, 10]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [12, 12]");
            expectedResult.add("\nQS : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [14, 15]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [14, 13]");
            expectedResult.add("\n\tLPA : [-48, -37, -35, -30, -19, -16, -12, -1, 5, 10, 11, 12, 29, 36, 40, 40] in [15, 15]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {-32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36};
        sortedArray = new int[]{-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36] in [0, 20]");
            expectedResult.add("\n\tLPA : [-32, -35, -49, -32, -50, -36, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [0, 5]");
            expectedResult.add("\n\tLPA : [-32, -35, -49, -32, -50, -36, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [7, 20]");
            expectedResult.add("\nQS : [-32, -35, -49, -32, -50, -36, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [0, 5]");
            expectedResult.add("\n\tLPA : [-50, -36, -49, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [0, 2]");
            expectedResult.add("\n\tLPA : [-50, -36, -49, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [4, 5]");
            expectedResult.add("\nQS : [-50, -36, -49, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [0, 2]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [2, 2]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [4, 5]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [4, 3]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [5, 5]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 42, 28, 13, 44, -25, 41, 45, 15, 6, 6, 23] in [7, 20]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 23, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [7, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 23, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [19, 20]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, 31, 39, 23, 28, 13, 6, -25, 41, 6, 15, 42, 44, 45] in [7, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 6, -25, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [7, 13]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, 6, -25, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [15, 17]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, 6, -25, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [7, 13]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [7, 8]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [10, 13]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [7, 8]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [7, 6]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [8, 8]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 23, 15, 13, 6, 28, 41, 31, 39, 42, 44, 45] in [10, 13]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 23, 15, 28, 41, 31, 39, 42, 44, 45] in [10, 10]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 23, 15, 28, 41, 31, 39, 42, 44, 45] in [12, 13]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 23, 15, 28, 41, 31, 39, 42, 44, 45] in [12, 13]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 41, 31, 39, 42, 44, 45] in [12, 11]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 41, 31, 39, 42, 44, 45] in [13, 13]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 41, 31, 39, 42, 44, 45] in [15, 17]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [15, 15]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [17, 17]");
            expectedResult.add("\nQS : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [19, 20]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [19, 18]");
            expectedResult.add("\n\tLPA : [-50, -49, -36, -35, -32, -32, -31, -29, -25, 6, 6, 13, 15, 23, 28, 31, 39, 41, 42, 44, 45] in [20, 20]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8, 26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5};
        sortedArray = new int[]{-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8, 26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5] in [0, 25]");
            expectedResult.add("\n\tLPA : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 17]");
            expectedResult.add("\n\tLPA : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [19, 25]");
            expectedResult.add("\nQS : [2, 5, 1, -40, -3, -25, -37, 10, -13, -24, -46, -32, -31, 8, 2, -48, -14, -36, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 17]");
            expectedResult.add("\n\tLPA : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 9]");
            expectedResult.add("\n\tLPA : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 17]");
            expectedResult.add("\nQS : [-14, -48, -31, -40, -32, -25, -37, -46, -36, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 9]");
            expectedResult.add("\n\tLPA : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 4]");
            expectedResult.add("\n\tLPA : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 9]");
            expectedResult.add("\nQS : [-36, -48, -46, -40, -37, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 4]");
            expectedResult.add("\n\tLPA : [-46, -48, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 1]");
            expectedResult.add("\n\tLPA : [-46, -48, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [3, 4]");
            expectedResult.add("\nQS : [-46, -48, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, 1]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [0, -1]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [1, 1]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [3, 4]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [3, 2]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [4, 4]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -24, -31, -14, -25, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 9]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -14, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [6, 6]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -14, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [8, 9]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -14, -24, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [8, 9]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [8, 7]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [9, 9]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 8, 2, 5, 2, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 17]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 13]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 17]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 13]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [11, 11]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [13, 13]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 17]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [15, 15]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [17, 17]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 34, 39, 31, 23, 34, 28] in [19, 25]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [19, 21]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [23, 25]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 26, 23, 28, 31, 34, 34, 39] in [19, 21]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [19, 19]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [21, 21]");
            expectedResult.add("\nQS : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [23, 25]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [23, 23]");
            expectedResult.add("\n\tLPA : [-48, -46, -40, -37, -36, -32, -31, -25, -24, -14, -13, -3, 1, 2, 2, 5, 8, 10, 20, 23, 26, 28, 31, 34, 34, 39] in [25, 25]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[] {27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19};
        sortedArray = new int[]{-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19] in [0, 30]");
            expectedResult.add("\n\tLPA : [-19, -42, -48, -43, -50, 6, -5, -18, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 9, 3, 12, 16, -43, 27, 45, 34, 36, 39, 28, 45] in [0, 23]");
            expectedResult.add("\n\tLPA : [-19, -42, -48, -43, -50, 6, -5, -18, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 9, 3, 12, 16, -43, 27, 45, 34, 36, 39, 28, 45] in [25, 30]");
            expectedResult.add("\nQS : [-19, -42, -48, -43, -50, 6, -5, -18, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 9, 3, 12, 16, -43, 27, 45, 34, 36, 39, 28, 45] in [0, 23]");
            expectedResult.add("\n\tLPA : [-19, -42, -48, -43, -50, -43, -5, -18, -15, -33, -34, 2, -41, -19, -42, -21, -5, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 16]");
            expectedResult.add("\n\tLPA : [-19, -42, -48, -43, -50, -43, -5, -18, -15, -33, -34, 2, -41, -19, -42, -21, -5, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [18, 23]");
            expectedResult.add("\nQS : [-19, -42, -48, -43, -50, -43, -5, -18, -15, -33, -34, 2, -41, -19, -42, -21, -5, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 16]");
            expectedResult.add("\n\tLPA : [-21, -42, -48, -43, -50, -43, -42, -19, -41, -33, -34, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 10]");
            expectedResult.add("\n\tLPA : [-21, -42, -48, -43, -50, -43, -42, -19, -41, -33, -34, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [12, 16]");
            expectedResult.add("\nQS : [-21, -42, -48, -43, -50, -43, -42, -19, -41, -33, -34, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 10]");
            expectedResult.add("\n\tLPA : [-43, -50, -48, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 3]");
            expectedResult.add("\n\tLPA : [-43, -50, -48, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [5, 10]");
            expectedResult.add("\nQS : [-43, -50, -48, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [0, 0]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [2, 3]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [2, 3]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [2, 1]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [3, 3]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -21, -34, -19, -41, -33, -42, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [5, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -34, -41, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [5, 7]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -34, -41, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [9, 10]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -34, -41, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [5, 7]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [5, 5]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [7, 7]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [9, 10]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [9, 8]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [10, 10]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [12, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [12, 14]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [16, 16]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -15, -18, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [12, 14]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [12, 12]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [14, 14]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 9, 6, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [18, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [18, 19]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [21, 23]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [18, 19]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [18, 17]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [19, 19]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 12, 16, 9, 27, 45, 34, 36, 39, 28, 45] in [21, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 45, 34, 36, 39, 28, 45] in [21, 21]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 45, 34, 36, 39, 28, 45] in [23, 23]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 45, 34, 36, 39, 28, 45] in [25, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [25, 26]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [28, 30]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [25, 26]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [25, 24]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [26, 26]");
            expectedResult.add("\nQS : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [28, 30]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [28, 28]");
            expectedResult.add("\n\tLPA : [-50, -48, -43, -43, -42, -42, -41, -34, -33, -21, -19, -19, -18, -15, -5, -5, 2, 3, 6, 6, 9, 9, 12, 16, 27, 28, 34, 36, 39, 45, 45] in [30, 30]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the quicksort using the last pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimised() {
        Quicksort quicksort = new Quicksort(PivotFinder.getLastPivot(), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11, -32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36, 2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8};
        sortedArray = new int[]{-50, -49, -48, -46, -37, -37, -36, -35, -35, -32, -32, -32, -31, -30, -29, -25, -25, -24, -19, -16, -12, -3, -1, 1, 2, 5, 6, 6, 8, 10, 10, 11, 12, 13, 15, 23, 23, 28, 29, 31, 34, 34, 36, 39, 39, 40, 40, 41, 42, 44, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-35, -48, 40, -1, 5, 29, -37, -30, -19, -12, 12, 10, 36, 40, -16, 11, -32, 6, 45, -25, 44, 42, 23, -29, 31, 39, -31, 28, 13, -50, -32, 41, -49, 15, 6, -35, -36, 2, 34, 1, 23, -3, -25, -37, 10, 39, -24, -46, -32, 34, 8] in [0, 50]");
            expectedResult.add("\n\tLPA : [-35, -48, -32, -1, 5, -46, -37, -30, -19, -12, -24, -37, -25, -3, -16, 1, -32, 6, 2, -25, -36, -35, 6, -29, -49, -32, -31, -50, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [0, 27]");
            expectedResult.add("\n\tLPA : [-35, -48, -32, -1, 5, -46, -37, -30, -19, -12, -24, -37, -25, -3, -16, 1, -32, 6, 2, -25, -36, -35, 6, -29, -49, -32, -31, -50, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [29, 50]");
            expectedResult.add("\nQS : [-35, -48, -32, -1, 5, -46, -37, -30, -19, -12, -24, -37, -25, -3, -16, 1, -32, 6, 2, -25, -36, -35, 6, -29, -49, -32, -31, -50, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [0, 27]");
            expectedResult.add("\nSS : [-35, -48, -32, -1, 5, -46, -37, -30, -19, -12, -24, -37, -25, -3, -16, 1, -32, 6, 2, -25, -36, -35, 6, -29, -49, -32, -31, -50, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [0, 27]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -37, -37, -36, -35, -35, -32, -32, -32, -31, -30, -29, -25, -25, -24, -19, -16, -12, -3, -1, 1, 2, 5, 6, 6, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [29, 50]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -37, -37, -36, -35, -35, -32, -32, -32, -31, -30, -29, -25, -25, -24, -19, -16, -12, -3, -1, 1, 2, 5, 6, 6, 8, 28, 39, 41, 31, 15, 23, 42, 44, 45, 34, 11, 23, 40, 36, 10, 10, 39, 12, 29, 40, 34, 13] in [29, 50]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5, 27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, -48, 24, -37, 3, 36, -38, -42, 34, -46};
        sortedArray = new int[]{-50, -48, -48, -48, -46, -43, -43, -42, -42, -42, -41, -40, -38, -37, -36, -34, -33, -32, -31, -27, -21, -19, -19, -18, -15, -14, -13, -5, -5, 2, 2, 3, 3, 5, 6, 6, 9, 9, 12, 16, 20, 21, 24, 26, 27, 28, 28, 31, 34, 34, 36, 36, 38, 39, 45, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [26, -48, -14, -36, 28, 2, -31, -13, 31, -40, 20, 5, 27, -42, -48, 39, -50, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, -48, 24, -37, 3, 36, -38, -42, 34, -46] in [0, 55]");
            expectedResult.add("\n\tLPA : [-48, -48, -50, -48, -46, 2, -31, -13, 31, -40, 20, 5, 27, -42, -36, 39, -14, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, 26, 24, -37, 3, 36, -38, -42, 34, 28] in [0, 3]");
            expectedResult.add("\n\tLPA : [-48, -48, -50, -48, -46, 2, -31, -13, 31, -40, 20, 5, 27, -42, -36, 39, -14, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, 26, 24, -37, 3, 36, -38, -42, 34, 28] in [5, 55]");
            expectedResult.add("\nQS : [-48, -48, -50, -48, -46, 2, -31, -13, 31, -40, 20, 5, 27, -42, -36, 39, -14, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, 26, 24, -37, 3, 36, -38, -42, 34, 28] in [0, 3]");
            expectedResult.add("\nSS : [-48, -48, -50, -48, -46, 2, -31, -13, 31, -40, 20, 5, 27, -42, -36, 39, -14, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, 26, 24, -37, 3, 36, -38, -42, 34, 28] in [0, 3]");
            expectedResult.add("\nQS : [-50, -48, -48, -48, -46, 2, -31, -13, 31, -40, 20, 5, 27, -42, -36, 39, -14, 6, -5, 34, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, 45, 3, 45, 16, -43, 12, 9, -18, 36, -43, 28, -19, 38, -32, -27, 21, 26, 24, -37, 3, 36, -38, -42, 34, 28] in [5, 55]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -48, -46, 2, -31, -13, -42, -40, 20, 5, 27, -42, -36, -38, -14, 6, -5, 3, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, -37, 3, 24, 16, -43, 12, 9, -18, 26, -43, 21, -19, -27, -32, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [5, 44]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -48, -46, 2, -31, -13, -42, -40, 20, 5, 27, -42, -36, -38, -14, 6, -5, 3, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, -37, 3, 24, 16, -43, 12, 9, -18, 26, -43, 21, -19, -27, -32, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [46, 55]");
            expectedResult.add("\nQS : [-50, -48, -48, -48, -46, 2, -31, -13, -42, -40, 20, 5, 27, -42, -36, -38, -14, 6, -5, 3, -15, -33, 6, 2, 9, -19, -42, -21, -5, -41, -34, -37, 3, 24, 16, -43, 12, 9, -18, 26, -43, 21, -19, -27, -32, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [5, 44]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -48, -46, -43, -43, -37, -42, -40, -34, -41, -42, -42, -36, -38, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [5, 16]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -48, -46, -43, -43, -37, -42, -40, -34, -41, -42, -42, -36, -38, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [18, 44]");
            expectedResult.add("\nQS : [-50, -48, -48, -48, -46, -43, -43, -37, -42, -40, -34, -41, -42, -42, -36, -38, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [5, 16]");
            expectedResult.add("\nSS : [-50, -48, -48, -48, -46, -43, -43, -37, -42, -40, -34, -41, -42, -42, -36, -38, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [5, 16]");
            expectedResult.add("\nQS : [-50, -48, -48, -48, -46, -43, -43, -42, -42, -42, -41, -40, -38, -37, -36, -34, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [18, 44]");
            expectedResult.add("\nSS : [-50, -48, -48, -48, -46, -43, -43, -42, -42, -42, -41, -40, -38, -37, -36, -34, -33, -32, -5, 3, -15, -14, 6, 2, 9, -19, 27, -21, -5, 5, 20, -13, 3, 24, 16, -31, 12, 9, -18, 26, 2, 21, -19, -27, 6, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [18, 44]");
            expectedResult.add("\nQS : [-50, -48, -48, -48, -46, -43, -43, -42, -42, -42, -41, -40, -38, -37, -36, -34, -33, -32, -31, -27, -21, -19, -19, -18, -15, -14, -13, -5, -5, 2, 2, 3, 3, 5, 6, 6, 9, 9, 12, 16, 20, 21, 24, 26, 27, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [46, 55]");
            expectedResult.add("\nSS : [-50, -48, -48, -48, -46, -43, -43, -42, -42, -42, -41, -40, -38, -37, -36, -34, -33, -32, -31, -27, -21, -19, -19, -18, -15, -14, -13, -5, -5, 2, 2, 3, 3, 5, 6, 6, 9, 9, 12, 16, 20, 21, 24, 26, 27, 28, 28, 36, 45, 45, 34, 36, 39, 31, 34, 38] in [46, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{20, -32, -31, 28, 49, -8, -48, -14, -30, -13, -49, 49, -10, 20, -40, -37, -50, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -41, 3, 14, 11, 33, -32, -44, -7, 49, -27, -39, 10, -7, 27, 15, 11, 1, -41, -42, -33, -48, 30, 1, 17, -21, 48, -40, -6, -38, -37, 28, 44, 41, -36};
        sortedArray = new int[]{-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -33, -32, -32, -31, -30, -27, -22, -21, -20, -14, -13, -10, -8, -7, -7, -6, 1, 1, 3, 3, 10, 11, 11, 14, 15, 17, 17, 20, 20, 27, 28, 28, 30, 32, 33, 34, 36, 39, 41, 44, 44, 48, 48, 49, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [20, -32, -31, 28, 49, -8, -48, -14, -30, -13, -49, 49, -10, 20, -40, -37, -50, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -41, 3, 14, 11, 33, -32, -44, -7, 49, -27, -39, 10, -7, 27, 15, 11, 1, -41, -42, -33, -48, 30, 1, 17, -21, 48, -40, -6, -38, -37, 28, 44, 41, -36] in [0, 60]");
            expectedResult.add("\n\tLPA : [-37, -38, -40, -48, -42, -41, -48, -39, -44, -41, -49, -50, -37, -40, -36, -10, 49, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -13, 3, 14, 11, 33, -32, -30, -7, 49, -27, -14, 10, -7, 27, 15, 11, 1, -8, 49, -33, 28, 30, 1, 17, -21, 48, -31, -6, -32, 20, 28, 44, 41, 20] in [0, 13]");
            expectedResult.add("\n\tLPA : [-37, -38, -40, -48, -42, -41, -48, -39, -44, -41, -49, -50, -37, -40, -36, -10, 49, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -13, 3, 14, 11, 33, -32, -30, -7, 49, -27, -14, 10, -7, 27, 15, 11, 1, -8, 49, -33, 28, 30, 1, 17, -21, 48, -31, -6, -32, 20, 28, 44, 41, 20] in [15, 60]");
            expectedResult.add("\nQS : [-37, -38, -40, -48, -42, -41, -48, -39, -44, -41, -49, -50, -37, -40, -36, -10, 49, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -13, 3, 14, 11, 33, -32, -30, -7, 49, -27, -14, 10, -7, 27, 15, 11, 1, -8, 49, -33, 28, 30, 1, 17, -21, 48, -31, -6, -32, 20, 28, 44, 41, 20] in [0, 13]");
            expectedResult.add("\nSS : [-37, -38, -40, -48, -42, -41, -48, -39, -44, -41, -49, -50, -37, -40, -36, -10, 49, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -13, 3, 14, 11, 33, -32, -30, -7, 49, -27, -14, 10, -7, 27, 15, 11, 1, -8, 49, -33, 28, 30, 1, 17, -21, 48, -31, -6, -32, 20, 28, 44, 41, 20] in [0, 13]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -10, 49, 3, 44, 32, -20, -22, 48, 39, 17, 36, 34, -13, 3, 14, 11, 33, -32, -30, -7, 49, -27, -14, 10, -7, 27, 15, 11, 1, -8, 49, -33, 28, 30, 1, 17, -21, 48, -31, -6, -32, 20, 28, 44, 41, 20] in [15, 60]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -10, 20, 3, -32, -6, -20, -22, -31, -21, 17, 17, 1, -13, 3, 14, 11, -33, -32, -30, -7, -8, -27, -14, 10, -7, 1, 15, 11, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [15, 42]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -10, 20, 3, -32, -6, -20, -22, -31, -21, 17, 17, 1, -13, 3, 14, 11, -33, -32, -30, -7, -8, -27, -14, 10, -7, 1, 15, 11, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [44, 60]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -10, 20, 3, -32, -6, -20, -22, -31, -21, 17, 17, 1, -13, 3, 14, 11, -33, -32, -30, -7, -8, -27, -14, 10, -7, 1, 15, 11, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [15, 42]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -10, 20, 3, -32, -6, -20, -22, -31, -21, 17, 17, 1, -13, 3, 14, 11, -33, -32, -30, -7, -8, -27, -14, 10, -7, 1, 15, 11, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [15, 42]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -33, -32, -32, -31, -30, -27, -22, -21, -20, -14, -13, -10, -8, -7, -7, -6, 1, 1, 3, 3, 10, 11, 11, 14, 15, 17, 17, 20, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [44, 60]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -44, -42, -41, -41, -40, -40, -39, -38, -37, -37, -36, -33, -32, -32, -31, -30, -27, -22, -21, -20, -14, -13, -10, -8, -7, -7, -6, 1, 1, 3, 3, 10, 11, 11, 14, 15, 17, 17, 20, 20, 49, 49, 33, 28, 30, 34, 36, 39, 48, 48, 32, 44, 49, 28, 44, 41, 27] in [44, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-32, -1, 5, 21, -20, -39, -13, 18, 25, 12, -20, -18, -35, 33, -23, 2, 49, -31, -17, -43, -40, -11, -21, 36, -42, -30, -1, -20, 0, -22, -25, 30, 7, -37, -40, -33, -47, 33, -47, 25, -25, -24, 25, -9, -17, -36, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -34};
        sortedArray = new int[]{-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -18, -17, -17, -16, -14, -13, -11, -9, -1, -1, 0, 2, 3, 4, 5, 7, 12, 14, 15, 18, 21, 24, 25, 25, 25, 27, 29, 30, 30, 33, 33, 36, 37, 44, 47, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-32, -1, 5, 21, -20, -39, -13, 18, 25, 12, -20, -18, -35, 33, -23, 2, 49, -31, -17, -43, -40, -11, -21, 36, -42, -30, -1, -20, 0, -22, -25, 30, 7, -37, -40, -33, -47, 33, -47, 25, -25, -24, 25, -9, -17, -36, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -34] in [0, 65]");
            expectedResult.add("\n\tLPA : [-36, -47, -47, -40, -37, -39, -42, -40, -43, -35, -34, -18, 12, 33, -23, 2, 49, -31, -17, 25, 18, -11, -21, 36, -13, -30, -1, -20, 0, -22, -25, 30, 7, -20, 21, -33, 5, 33, -1, 25, -25, -24, 25, -9, -17, -32, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -20] in [0, 9]");
            expectedResult.add("\n\tLPA : [-36, -47, -47, -40, -37, -39, -42, -40, -43, -35, -34, -18, 12, 33, -23, 2, 49, -31, -17, 25, 18, -11, -21, 36, -13, -30, -1, -20, 0, -22, -25, 30, 7, -20, 21, -33, 5, 33, -1, 25, -25, -24, 25, -9, -17, -32, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -20] in [11, 65]");
            expectedResult.add("\nQS : [-36, -47, -47, -40, -37, -39, -42, -40, -43, -35, -34, -18, 12, 33, -23, 2, 49, -31, -17, 25, 18, -11, -21, 36, -13, -30, -1, -20, 0, -22, -25, 30, 7, -20, 21, -33, 5, 33, -1, 25, -25, -24, 25, -9, -17, -32, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -20] in [0, 9]");
            expectedResult.add("\nSS : [-36, -47, -47, -40, -37, -39, -42, -40, -43, -35, -34, -18, 12, 33, -23, 2, 49, -31, -17, 25, 18, -11, -21, 36, -13, -30, -1, -20, 0, -22, -25, 30, 7, -20, 21, -33, 5, 33, -1, 25, -25, -24, 25, -9, -17, -32, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -20] in [0, 9]");
            expectedResult.add("\nQS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -18, 12, 33, -23, 2, 49, -31, -17, 25, 18, -11, -21, 36, -13, -30, -1, -20, 0, -22, -25, 30, 7, -20, 21, -33, 5, 33, -1, 25, -25, -24, 25, -9, -17, -32, 4, 44, 27, -16, 24, 47, -33, -33, 3, 15, -14, 30, -20, 14, -21, -25, -32, 29, 37, -20] in [11, 65]");
            expectedResult.add("\n\tLPA : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -32, -25, -21, -23, -20, -33, -31, -33, -32, -24, -25, -21, -33, -20, -30, -25, -22, -20, -20, -1, 30, 7, -13, 21, 36, 5, 33, -1, 25, -11, 18, 25, -9, -17, 25, 4, 44, 27, -16, 24, 47, -17, 49, 3, 15, -14, 30, 2, 14, 33, 12, -18, 29, 37, 0] in [11, 27]");
            expectedResult.add("\n\tLPA : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -32, -25, -21, -23, -20, -33, -31, -33, -32, -24, -25, -21, -33, -20, -30, -25, -22, -20, -20, -1, 30, 7, -13, 21, 36, 5, 33, -1, 25, -11, 18, 25, -9, -17, 25, 4, 44, 27, -16, 24, 47, -17, 49, 3, 15, -14, 30, 2, 14, 33, 12, -18, 29, 37, 0] in [29, 65]");
            expectedResult.add("\nQS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -32, -25, -21, -23, -20, -33, -31, -33, -32, -24, -25, -21, -33, -20, -30, -25, -22, -20, -20, -1, 30, 7, -13, 21, 36, 5, 33, -1, 25, -11, 18, 25, -9, -17, 25, 4, 44, 27, -16, 24, 47, -17, 49, 3, 15, -14, 30, 2, 14, 33, 12, -18, 29, 37, 0] in [11, 27]");
            expectedResult.add("\nSS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -32, -25, -21, -23, -20, -33, -31, -33, -32, -24, -25, -21, -33, -20, -30, -25, -22, -20, -20, -1, 30, 7, -13, 21, 36, 5, 33, -1, 25, -11, 18, 25, -9, -17, 25, 4, 44, 27, -16, 24, 47, -17, 49, 3, 15, -14, 30, 2, 14, 33, 12, -18, 29, 37, 0] in [11, 27]");
            expectedResult.add("\nQS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -1, 30, 7, -13, 21, 36, 5, 33, -1, 25, -11, 18, 25, -9, -17, 25, 4, 44, 27, -16, 24, 47, -17, 49, 3, 15, -14, 30, 2, 14, 33, 12, -18, 29, 37, 0] in [29, 65]");
            expectedResult.add("\n\tLPA : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -1, -18, -14, -13, -17, -16, -17, -9, -1, -11, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [29, 39]");
            expectedResult.add("\n\tLPA : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -1, -18, -14, -13, -17, -16, -17, -9, -1, -11, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [41, 65]");
            expectedResult.add("\nQS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -1, -18, -14, -13, -17, -16, -17, -9, -1, -11, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [29, 39]");
            expectedResult.add("\nSS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -1, -18, -14, -13, -17, -16, -17, -9, -1, -11, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [29, 39]");
            expectedResult.add("\nQS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -18, -17, -17, -16, -14, -13, -11, -9, -1, -1, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [41, 65]");
            expectedResult.add("\nSS : [-47, -47, -43, -42, -40, -40, -39, -37, -36, -35, -34, -33, -33, -33, -32, -32, -31, -30, -25, -25, -25, -24, -23, -22, -21, -21, -20, -20, -20, -20, -18, -17, -17, -16, -14, -13, -11, -9, -1, -1, 0, 18, 25, 33, 5, 25, 4, 44, 27, 36, 24, 47, 21, 49, 3, 15, 7, 30, 2, 14, 33, 12, 30, 29, 37, 25] in [41, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-16, 22, 9, -2, 1, 1, -43, 12, 19, -38, -24, -28, -25, -4, 29, -42, 31, 5, 7, -41, -48, -31, -42, 48, -7, 15, 45, -8, -26, 20, -31, 14, -4, 19, -37, -38, -29, -1, 1, -19, -1, -21, 17, -22, -35, -1, 43, 4, 37, 41, 14, 21, 30, 7, -21, 17, 24, 49, -17, -41, 30, -20, -33, 29, -16, -20, 9, -8, 17, -46, 20};
        sortedArray = new int[]{-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, -20, -20, -19, -17, -16, -16, -8, -8, -7, -4, -4, -2, -1, -1, -1, 1, 1, 1, 4, 5, 7, 7, 9, 9, 12, 14, 14, 15, 17, 17, 17, 19, 19, 20, 20, 21, 22, 24, 29, 29, 30, 30, 31, 37, 41, 43, 45, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-16, 22, 9, -2, 1, 1, -43, 12, 19, -38, -24, -28, -25, -4, 29, -42, 31, 5, 7, -41, -48, -31, -42, 48, -7, 15, 45, -8, -26, 20, -31, 14, -4, 19, -37, -38, -29, -1, 1, -19, -1, -21, 17, -22, -35, -1, 43, 4, 37, 41, 14, 21, 30, 7, -21, 17, 24, 49, -17, -41, 30, -20, -33, 29, -16, -20, 9, -8, 17, -46, 20] in [0, 70]");
            expectedResult.add("\n\tLPA : [-16, -46, 9, -2, 1, 1, -43, 12, 19, -38, -24, -28, -25, -4, 17, -42, -8, 5, 7, -41, -48, -31, -42, 9, -7, 15, -20, -8, -26, -16, -31, 14, -4, 19, -37, -38, -29, -1, 1, -19, -1, -21, 17, -22, -35, -1, -33, 4, -20, -41, 14, -17, 17, 7, -21, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [0, 54]");
            expectedResult.add("\n\tLPA : [-16, -46, 9, -2, 1, 1, -43, 12, 19, -38, -24, -28, -25, -4, 17, -42, -8, 5, 7, -41, -48, -31, -42, 9, -7, 15, -20, -8, -26, -16, -31, 14, -4, 19, -37, -38, -29, -1, 1, -19, -1, -21, 17, -22, -35, -1, -33, 4, -20, -41, 14, -17, 17, 7, -21, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [56, 70]");
            expectedResult.add("\nQS : [-16, -46, 9, -2, 1, 1, -43, 12, 19, -38, -24, -28, -25, -4, 17, -42, -8, 5, 7, -41, -48, -31, -42, 9, -7, 15, -20, -8, -26, -16, -31, 14, -4, 19, -37, -38, -29, -1, 1, -19, -1, -21, 17, -22, -35, -1, -33, 4, -20, -41, 14, -17, 17, 7, -21, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [0, 54]");
            expectedResult.add("\n\tLPA : [-41, -46, -33, -35, -22, -21, -43, -29, -38, -38, -24, -28, -25, -37, -31, -42, -26, -42, -31, -41, -48, -21, 5, 9, -7, 15, -20, -8, -8, -16, 17, 14, -4, 19, -4, 19, 12, -1, 1, -19, -1, 1, 17, 1, -2, -1, 9, 4, -20, -16, 14, -17, 17, 7, 7, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [0, 20]");
            expectedResult.add("\n\tLPA : [-41, -46, -33, -35, -22, -21, -43, -29, -38, -38, -24, -28, -25, -37, -31, -42, -26, -42, -31, -41, -48, -21, 5, 9, -7, 15, -20, -8, -8, -16, 17, 14, -4, 19, -4, 19, 12, -1, 1, -19, -1, 1, 17, 1, -2, -1, 9, 4, -20, -16, 14, -17, 17, 7, 7, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [22, 54]");
            expectedResult.add("\nQS : [-41, -46, -33, -35, -22, -21, -43, -29, -38, -38, -24, -28, -25, -37, -31, -42, -26, -42, -31, -41, -48, -21, 5, 9, -7, 15, -20, -8, -8, -16, 17, 14, -4, 19, -4, 19, 12, -1, 1, -19, -1, 1, 17, 1, -2, -1, 9, 4, -20, -16, 14, -17, 17, 7, 7, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [0, 20]");
            expectedResult.add("\nSS : [-41, -46, -33, -35, -22, -21, -43, -29, -38, -38, -24, -28, -25, -37, -31, -42, -26, -42, -31, -41, -48, -21, 5, 9, -7, 15, -20, -8, -8, -16, 17, 14, -4, 19, -4, 19, 12, -1, 1, -19, -1, 1, 17, 1, -2, -1, 9, 4, -20, -16, 14, -17, 17, 7, 7, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [0, 20]");
            expectedResult.add("\nQS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, 5, 9, -7, 15, -20, -8, -8, -16, 17, 14, -4, 19, -4, 19, 12, -1, 1, -19, -1, 1, 17, 1, -2, -1, 9, 4, -20, -16, 14, -17, 17, 7, 7, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [22, 54]");
            expectedResult.add("\n\tLPA : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, 5, 7, -7, -17, -20, -8, -8, -16, -16, -20, -4, 4, -4, -1, -2, -1, 1, -19, -1, 1, 1, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [22, 42]");
            expectedResult.add("\n\tLPA : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, 5, 7, -7, -17, -20, -8, -8, -16, -16, -20, -4, 4, -4, -1, -2, -1, 1, -19, -1, 1, 1, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [44, 54]");
            expectedResult.add("\nQS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, 5, 7, -7, -17, -20, -8, -8, -16, -16, -20, -4, 4, -4, -1, -2, -1, 1, -19, -1, 1, 1, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [22, 42]");
            expectedResult.add("\nSS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, 5, 7, -7, -17, -20, -8, -8, -16, -16, -20, -4, 4, -4, -1, -2, -1, 1, -19, -1, 1, 1, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [22, 42]");
            expectedResult.add("\nQS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, -20, -20, -19, -17, -16, -16, -8, -8, -7, -4, -4, -2, -1, -1, -1, 1, 1, 1, 4, 5, 7, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [44, 54]");
            expectedResult.add("\nSS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, -20, -20, -19, -17, -16, -16, -8, -8, -7, -4, -4, -2, -1, -1, -1, 1, 1, 1, 4, 5, 7, 7, 12, 19, 9, 19, 14, 17, 14, 15, 17, 9, 17, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [44, 54]");
            expectedResult.add("\nQS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, -20, -20, -19, -17, -16, -16, -8, -8, -7, -4, -4, -2, -1, -1, -1, 1, 1, 1, 4, 5, 7, 7, 9, 9, 12, 14, 14, 15, 17, 17, 17, 19, 19, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [56, 70]");
            expectedResult.add("\nSS : [-48, -46, -43, -42, -42, -41, -41, -38, -38, -37, -35, -33, -31, -31, -29, -28, -26, -25, -24, -22, -21, -21, -20, -20, -19, -17, -16, -16, -8, -8, -7, -4, -4, -2, -1, -1, -1, 1, 1, 1, 4, 5, 7, 7, 9, 9, 12, 14, 14, 15, 17, 17, 17, 19, 19, 20, 24, 49, 21, 41, 30, 37, 43, 29, 20, 45, 48, 31, 29, 22, 30] in [56, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-33, -21, -30, 4, 16, -1, -43, -15, -11, -15, 0, 44, 46, 40, 33, 21, -7, -30, -30, 0, -14, -21, 4, 42, 12, 13, -18, -25, 21, 45, -13, -22, 10, -20, -25, 36, -36, -19, 1, -13, -24, 11, -34, -4, 9, 19, 46, -43, 7, 36, 32, 0, 32, -9, -8, -45, -49, -19, 37, 13, 34, 44, 18, -1, 41, -21, 38, 14, 38, 18, -33, -35, 44, -17, -20, 2};
        sortedArray = new int[]{-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 4, 7, 9, 10, 11, 12, 13, 13, 14, 16, 18, 18, 19, 21, 21, 32, 32, 33, 34, 36, 36, 37, 38, 38, 40, 41, 42, 44, 44, 44, 45, 46, 46};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-33, -21, -30, 4, 16, -1, -43, -15, -11, -15, 0, 44, 46, 40, 33, 21, -7, -30, -30, 0, -14, -21, 4, 42, 12, 13, -18, -25, 21, 45, -13, -22, 10, -20, -25, 36, -36, -19, 1, -13, -24, 11, -34, -4, 9, 19, 46, -43, 7, 36, 32, 0, 32, -9, -8, -45, -49, -19, 37, 13, 34, 44, 18, -1, 41, -21, 38, 14, 38, 18, -33, -35, 44, -17, -20, 2] in [0, 75]");
            expectedResult.add("\n\tLPA : [-33, -21, -30, -20, -17, -1, -43, -15, -11, -15, 0, -35, -33, -21, -1, -19, -7, -30, -30, 0, -14, -21, -49, -45, -8, -9, -18, -25, 0, -43, -13, -22, -4, -20, -25, -34, -36, -19, 1, -13, -24, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [0, 40]");
            expectedResult.add("\n\tLPA : [-33, -21, -30, -20, -17, -1, -43, -15, -11, -15, 0, -35, -33, -21, -1, -19, -7, -30, -30, 0, -14, -21, -49, -45, -8, -9, -18, -25, 0, -43, -13, -22, -4, -20, -25, -34, -36, -19, 1, -13, -24, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [42, 75]");
            expectedResult.add("\nQS : [-33, -21, -30, -20, -17, -1, -43, -15, -11, -15, 0, -35, -33, -21, -1, -19, -7, -30, -30, 0, -14, -21, -49, -45, -8, -9, -18, -25, 0, -43, -13, -22, -4, -20, -25, -34, -36, -19, 1, -13, -24, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [0, 40]");
            expectedResult.add("\n\tLPA : [-33, -36, -30, -34, -25, -43, -43, -25, -45, -49, -30, -35, -33, -30, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [0, 13]");
            expectedResult.add("\n\tLPA : [-33, -36, -30, -34, -25, -43, -43, -25, -45, -49, -30, -35, -33, -30, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [15, 40]");
            expectedResult.add("\nQS : [-33, -36, -30, -34, -25, -43, -43, -25, -45, -49, -30, -35, -33, -30, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [0, 13]");
            expectedResult.add("\nSS : [-33, -36, -30, -34, -25, -43, -43, -25, -45, -49, -30, -35, -33, -30, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [0, 13]");
            expectedResult.add("\nQS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [15, 40]");
            expectedResult.add("\nSS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -19, -7, -21, 0, 0, -14, -21, -15, -11, -8, -9, -18, -15, 0, -1, -13, -22, -4, -20, -17, -20, -21, -19, 1, -13, -1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [15, 40]");
            expectedResult.add("\nQS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 36, 10, 9, 19, 46, 45, 7, 36, 32, 21, 32, 13, 12, 42, 4, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 4, 11] in [42, 75]");
            expectedResult.add("\n\tLPA : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 10, 9, 4, 7, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [42, 46]");
            expectedResult.add("\n\tLPA : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 10, 9, 4, 7, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [48, 75]");
            expectedResult.add("\nQS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 10, 9, 4, 7, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [42, 46]");
            expectedResult.add("\nSS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 10, 9, 4, 7, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [42, 46]");
            expectedResult.add("\nQS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 4, 7, 9, 10, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [48, 75]");
            expectedResult.add("\nSS : [-49, -45, -43, -43, -36, -35, -34, -33, -33, -30, -30, -30, -25, -25, -24, -22, -21, -21, -21, -20, -20, -19, -19, -18, -17, -15, -15, -14, -13, -13, -11, -9, -8, -7, -4, -1, -1, 0, 0, 0, 1, 2, 4, 4, 7, 9, 10, 11, 46, 36, 32, 21, 32, 13, 12, 42, 19, 21, 37, 13, 34, 44, 18, 33, 41, 40, 38, 14, 38, 18, 46, 44, 44, 16, 36, 45] in [48, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


    }

    /**
     * Tests the quicksort using the middle index as pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedMidPivot() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMidPivot(), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{-4, -8, -7, 8, 31, -36, 25, 13, -25, -29, -33, -16, -24, -27, -19, 17, 39, 30, 34, 42, -12, 16, -42, -25, -6, -12, 33, -6, -32, -28, -32, 40, -23, -19, 47, -30, -23, -2, 32, -13, -9, 45, -15, 47, -32, 1, 28, 22, 15, 46, -4, 31, -9, -35, 0, -4};
        sortedArray = new int[]{-42, -36, -35, -33, -32, -32, -32, -30, -29, -28, -27, -25, -25, -24, -23, -23, -19, -19, -16, -15, -13, -12, -12, -9, -9, -8, -7, -6, -6, -4, -4, -4, -2, 0, 1, 8, 13, 15, 16, 17, 22, 25, 28, 30, 31, 31, 32, 33, 34, 39, 40, 42, 45, 46, 47, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-4, -8, -7, 8, 31, -36, 25, 13, -25, -29, -33, -16, -24, -27, -19, 17, 39, 30, 34, 42, -12, 16, -42, -25, -6, -12, 33, -6, -32, -28, -32, 40, -23, -19, 47, -30, -23, -2, 32, -13, -9, 45, -15, 47, -32, 1, 28, 22, 15, 46, -4, 31, -9, -35, 0, -4] in [0, 55]");
            expectedResult.add("\n\tLPA : [-35, -8, -7, -9, -32, -36, -15, -9, -25, -29, -33, -16, -24, -27, -19, -13, -23, -30, -19, -23, -12, -32, -42, -25, -28, -12, -32, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [0, 26]");
            expectedResult.add("\n\tLPA : [-35, -8, -7, -9, -32, -36, -15, -9, -25, -29, -33, -16, -24, -27, -19, -13, -23, -30, -19, -23, -12, -32, -42, -25, -28, -12, -32, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [28, 55]");
            expectedResult.add("\nQS : [-35, -8, -7, -9, -32, -36, -15, -9, -25, -29, -33, -16, -24, -27, -19, -13, -23, -30, -19, -23, -12, -32, -42, -25, -28, -12, -32, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [0, 26]");
            expectedResult.add("\nSS : [-35, -8, -7, -9, -32, -36, -15, -9, -25, -29, -33, -16, -24, -27, -19, -13, -23, -30, -19, -23, -12, -32, -42, -25, -28, -12, -32, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [0, 26]");
            expectedResult.add("\nQS : [-42, -36, -35, -33, -32, -32, -32, -30, -29, -28, -27, -25, -25, -24, -23, -23, -19, -19, -16, -15, -13, -12, -12, -9, -9, -8, -7, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [28, 55]");
            expectedResult.add("\nSS : [-42, -36, -35, -33, -32, -32, -32, -30, -29, -28, -27, -25, -25, -24, -23, -23, -19, -19, -16, -15, -13, -12, -12, -9, -9, -8, -7, -6, 33, -6, 16, 40, 42, 34, 47, 30, 39, -2, 32, 17, 13, 45, 25, 47, 31, 1, 28, 22, 15, 46, -4, 31, 8, -4, 0, -4] in [28, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{29, 0, -32, 23, 18, -6, -8, -18, 17, -24, 41, -17, -17, -19, -33, -16, 0, -44, 37, -17, 1, -25, 9, 30, -1, -14, 47, 46, -4, 47, 17, 25, 47, -18, -15, -46, -45, -34, 31, -44, 31, -1, -9, 12, 36, 18, -9, 46, -28, -38, -18, 47, 27, -7, -49, 0, -15, 4, -7, 42, 2};
        sortedArray = new int[]{-49, -46, -45, -44, -44, -38, -34, -33, -32, -28, -25, -24, -19, -18, -18, -18, -17, -17, -17, -16, -15, -15, -14, -9, -9, -8, -7, -7, -6, -4, -1, -1, 0, 0, 0, 1, 2, 4, 9, 12, 17, 17, 18, 18, 23, 25, 27, 29, 30, 31, 31, 36, 37, 41, 42, 46, 46, 47, 47, 47, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [29, 0, -32, 23, 18, -6, -8, -18, 17, -24, 41, -17, -17, -19, -33, -16, 0, -44, 37, -17, 1, -25, 9, 30, -1, -14, 47, 46, -4, 47, 17, 25, 47, -18, -15, -46, -45, -34, 31, -44, 31, -1, -9, 12, 36, 18, -9, 46, -28, -38, -18, 47, 27, -7, -49, 0, -15, 4, -7, 42, 2] in [0, 60]");
            expectedResult.add("\n\tLPA : [-7, 0, -32, 4, -15, -6, -8, -18, 0, -24, -49, -17, -17, -19, -33, -16, 0, -44, -7, -17, 1, -25, 9, -18, -1, -14, -38, -28, -4, -9, 2, 12, -9, -18, -15, -46, -45, -34, -1, -44, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [0, 39]");
            expectedResult.add("\n\tLPA : [-7, 0, -32, 4, -15, -6, -8, -18, 0, -24, -49, -17, -17, -19, -33, -16, 0, -44, -7, -17, 1, -25, 9, -18, -1, -14, -38, -28, -4, -9, 2, 12, -9, -18, -15, -46, -45, -34, -1, -44, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [41, 60]");
            expectedResult.add("\nQS : [-7, 0, -32, 4, -15, -6, -8, -18, 0, -24, -49, -17, -17, -19, -33, -16, 0, -44, -7, -17, 1, -25, 9, -18, -1, -14, -38, -28, -4, -9, 2, 12, -9, -18, -15, -46, -45, -34, -1, -44, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [0, 39]");
            expectedResult.add("\n\tLPA : [-34, -45, -32, -46, -18, -28, -38, -18, -18, -24, -49, -25, -44, -19, -33, -44, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [0, 15]");
            expectedResult.add("\n\tLPA : [-34, -45, -32, -46, -18, -28, -38, -18, -18, -24, -49, -25, -44, -19, -33, -44, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [17, 39]");
            expectedResult.add("\nQS : [-34, -45, -32, -46, -18, -28, -38, -18, -18, -24, -49, -25, -44, -19, -33, -44, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [0, 15]");
            expectedResult.add("\nSS : [-34, -45, -32, -46, -18, -28, -38, -18, -18, -24, -49, -25, -44, -19, -33, -44, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [0, 15]");
            expectedResult.add("\nQS : [-49, -46, -45, -44, -44, -38, -34, -33, -32, -28, -25, -24, -19, -18, -18, -18, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [17, 39]");
            expectedResult.add("\nSS : [-49, -46, -45, -44, -44, -38, -34, -33, -32, -28, -25, -24, -19, -18, -18, -18, -17, -16, -7, -17, 1, -17, 9, 0, -1, -14, -8, -6, -4, -9, 2, 12, -9, -15, -15, 4, 0, -7, -1, 0, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [17, 39]");
            expectedResult.add("\nQS : [-49, -46, -45, -44, -44, -38, -34, -33, -32, -28, -25, -24, -19, -18, -18, -18, -17, -17, -17, -16, -15, -15, -14, -9, -9, -8, -7, -7, -6, -4, -1, -1, 0, 0, 0, 1, 2, 4, 9, 12, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [41, 60]");
            expectedResult.add("\nSS : [-49, -46, -45, -44, -44, -38, -34, -33, -32, -28, -25, -24, -19, -18, -18, -18, -17, -17, -17, -16, -15, -15, -14, -9, -9, -8, -7, -7, -6, -4, -1, -1, 0, 0, 0, 1, 2, 4, 9, 12, 17, 31, 47, 25, 36, 18, 47, 46, 46, 47, 30, 47, 27, 37, 41, 17, 18, 23, 29, 42, 31] in [41, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{40, 44, 41, -26, -14, 38, 7, -26, 42, -6, -4, 5, 48, 21, 36, -40, -20, 23, -18, 16, -39, -33, -29, 36, 8, -17, 34, 7, -9, 4, -37, 17, -24, -26, 2, -28, 28, -10, -17, 39, -25, 40, -7, 13, -27, -5, -24, 39, -28, 47, -28, -33, -20, -6, 19, -26, 35, -28, -49, 7, -41, 38, 2, 18, 45, 35};
        sortedArray = new int[]{-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, -6, -6, -5, -4, 2, 2, 4, 5, 7, 7, 7, 8, 13, 16, 17, 18, 19, 21, 23, 28, 34, 35, 35, 36, 36, 38, 38, 39, 39, 40, 40, 41, 42, 44, 45, 47, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [40, 44, 41, -26, -14, 38, 7, -26, 42, -6, -4, 5, 48, 21, 36, -40, -20, 23, -18, 16, -39, -33, -29, 36, 8, -17, 34, 7, -9, 4, -37, 17, -24, -26, 2, -28, 28, -10, -17, 39, -25, 40, -7, 13, -27, -5, -24, 39, -28, 47, -28, -33, -20, -6, 19, -26, 35, -28, -49, 7, -41, 38, 2, 18, 45, 35] in [0, 65]");
            expectedResult.add("\n\tLPA : [-41, -49, -28, -26, -26, -33, -28, -26, -28, -24, -27, -25, -28, -26, -37, -40, -29, -33, -39, -24, -18, 23, -20, 36, 8, -17, 34, 7, -9, 4, 36, 17, 35, 21, 2, 48, 28, -10, -17, 39, 5, 40, -7, 13, -4, -5, -6, 39, 42, 47, 7, 38, -20, -6, 19, -14, 35, 41, 44, 7, 40, 38, 2, 18, 45, 16] in [0, 18]");
            expectedResult.add("\n\tLPA : [-41, -49, -28, -26, -26, -33, -28, -26, -28, -24, -27, -25, -28, -26, -37, -40, -29, -33, -39, -24, -18, 23, -20, 36, 8, -17, 34, 7, -9, 4, 36, 17, 35, 21, 2, 48, 28, -10, -17, 39, 5, 40, -7, 13, -4, -5, -6, 39, 42, 47, 7, 38, -20, -6, 19, -14, 35, 41, 44, 7, 40, 38, 2, 18, 45, 16] in [20, 65]");
            expectedResult.add("\nQS : [-41, -49, -28, -26, -26, -33, -28, -26, -28, -24, -27, -25, -28, -26, -37, -40, -29, -33, -39, -24, -18, 23, -20, 36, 8, -17, 34, 7, -9, 4, 36, 17, 35, 21, 2, 48, 28, -10, -17, 39, 5, 40, -7, 13, -4, -5, -6, 39, 42, 47, 7, 38, -20, -6, 19, -14, 35, 41, 44, 7, 40, 38, 2, 18, 45, 16] in [0, 18]");
            expectedResult.add("\nSS : [-41, -49, -28, -26, -26, -33, -28, -26, -28, -24, -27, -25, -28, -26, -37, -40, -29, -33, -39, -24, -18, 23, -20, 36, 8, -17, 34, 7, -9, 4, 36, 17, 35, 21, 2, 48, 28, -10, -17, 39, 5, 40, -7, 13, -4, -5, -6, 39, 42, 47, 7, 38, -20, -6, 19, -14, 35, 41, 44, 7, 40, 38, 2, 18, 45, 16] in [0, 18]");
            expectedResult.add("\nQS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -18, 23, -20, 36, 8, -17, 34, 7, -9, 4, 36, 17, 35, 21, 2, 48, 28, -10, -17, 39, 5, 40, -7, 13, -4, -5, -6, 39, 42, 47, 7, 38, -20, -6, 19, -14, 35, 41, 44, 7, 40, 38, 2, 18, 45, 16] in [20, 65]");
            expectedResult.add("\n\tLPA : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -18, -14, -20, -20, -17, -17, -10, -9, -7, 4, 36, 17, 35, 21, 2, 48, 28, 34, 8, 39, 5, 40, 16, 13, -4, -5, -6, 39, 42, 47, 7, 38, 36, -6, 19, 23, 35, 41, 44, 7, 40, 38, 2, 18, 45, 7] in [20, 27]");
            expectedResult.add("\n\tLPA : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -18, -14, -20, -20, -17, -17, -10, -9, -7, 4, 36, 17, 35, 21, 2, 48, 28, 34, 8, 39, 5, 40, 16, 13, -4, -5, -6, 39, 42, 47, 7, 38, 36, -6, 19, 23, 35, 41, 44, 7, 40, 38, 2, 18, 45, 7] in [29, 65]");
            expectedResult.add("\nQS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -18, -14, -20, -20, -17, -17, -10, -9, -7, 4, 36, 17, 35, 21, 2, 48, 28, 34, 8, 39, 5, 40, 16, 13, -4, -5, -6, 39, 42, 47, 7, 38, 36, -6, 19, 23, 35, 41, 44, 7, 40, 38, 2, 18, 45, 7] in [20, 27]");
            expectedResult.add("\nSS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -18, -14, -20, -20, -17, -17, -10, -9, -7, 4, 36, 17, 35, 21, 2, 48, 28, 34, 8, 39, 5, 40, 16, 13, -4, -5, -6, 39, 42, 47, 7, 38, 36, -6, 19, 23, 35, 41, 44, 7, 40, 38, 2, 18, 45, 7] in [20, 27]");
            expectedResult.add("\nQS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, 4, 36, 17, 35, 21, 2, 48, 28, 34, 8, 39, 5, 40, 16, 13, -4, -5, -6, 39, 42, 47, 7, 38, 36, -6, 19, 23, 35, 41, 44, 7, 40, 38, 2, 18, 45, 7] in [29, 65]");
            expectedResult.add("\n\tLPA : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, 4, 36, 17, 35, 21, 2, 18, 28, 34, 8, 2, 5, 38, 16, 13, -4, -5, -6, 7, 7, 35, 7, 38, 36, -6, 19, 23, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [29, 55]");
            expectedResult.add("\n\tLPA : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, 4, 36, 17, 35, 21, 2, 18, 28, 34, 8, 2, 5, 38, 16, 13, -4, -5, -6, 7, 7, 35, 7, 38, 36, -6, 19, 23, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [57, 65]");
            expectedResult.add("\nQS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, 4, 36, 17, 35, 21, 2, 18, 28, 34, 8, 2, 5, 38, 16, 13, -4, -5, -6, 7, 7, 35, 7, 38, 36, -6, 19, 23, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [29, 55]");
            expectedResult.add("\nSS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, 4, 36, 17, 35, 21, 2, 18, 28, 34, 8, 2, 5, 38, 16, 13, -4, -5, -6, 7, 7, 35, 7, 38, 36, -6, 19, 23, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [29, 55]");
            expectedResult.add("\nQS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, -6, -6, -5, -4, 2, 2, 4, 5, 7, 7, 7, 8, 13, 16, 17, 18, 19, 21, 23, 28, 34, 35, 35, 36, 36, 38, 38, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [57, 65]");
            expectedResult.add("\nSS : [-49, -41, -40, -39, -37, -33, -33, -29, -28, -28, -28, -28, -27, -26, -26, -26, -26, -25, -24, -24, -20, -20, -18, -17, -17, -14, -10, -9, -7, -6, -6, -5, -4, 2, 2, 4, 5, 7, 7, 7, 8, 13, 16, 17, 18, 19, 21, 23, 28, 34, 35, 35, 36, 36, 38, 38, 39, 41, 44, 42, 40, 40, 39, 48, 45, 47] in [57, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 37, -19, -1, 26, 49, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, 35, -45, -21, 42, -18, 44, -26, 39, 9, -14, -3, 36, -30, 32, 1, -22, 46, 14, -2, 7, -46, -33, 48, -40, -35, 7, -46, 11, -16, -5, 40, -33, 15, -6, 24, -41, -2, -4, -7};
        sortedArray = new int[]{-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 11, 14, 15, 18, 20, 21, 24, 24, 26, 32, 34, 35, 36, 37, 39, 40, 42, 44, 46, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 37, -19, -1, 26, 49, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, 35, -45, -21, 42, -18, 44, -26, 39, 9, -14, -3, 36, -30, 32, 1, -22, 46, 14, -2, 7, -46, -33, 48, -40, -35, 7, -46, 11, -16, -5, 40, -33, 15, -6, 24, -41, -2, -4, -7] in [0, 70]");
            expectedResult.add("\n\tLPA : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 37, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, 35, -45, -21, -7, -18, -2, -26, 39, 9, -14, -3, 36, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, -5, 40, -33, 15, -6, 42, 46, 44, 49, 48] in [0, 65]");
            expectedResult.add("\n\tLPA : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 37, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, 35, -45, -21, -7, -18, -2, -26, 39, 9, -14, -3, 36, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, -5, 40, -33, 15, -6, 42, 46, 44, 49, 48] in [67, 70]");
            expectedResult.add("\nQS : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 37, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, 35, -45, -21, -7, -18, -2, -26, 39, 9, -14, -3, 36, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, -5, 40, -33, 15, -6, 42, 46, 44, 49, 48] in [0, 65]");
            expectedResult.add("\n\tLPA : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 15, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, -6, -45, -21, -7, -18, -2, -26, -33, 9, -14, -3, -5, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [0, 60]");
            expectedResult.add("\n\tLPA : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 15, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, -6, -45, -21, -7, -18, -2, -26, -33, 9, -14, -3, -5, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [62, 65]");
            expectedResult.add("\nQS : [-38, 7, 9, 21, -42, 2, -28, -11, 18, -36, 15, -19, -1, 26, -4, -39, -8, -26, -25, -46, 20, -32, -8, -41, -18, -26, 24, 34, -34, -28, -27, 2, -6, -45, -21, -7, -18, -2, -26, -33, 9, -14, -3, -5, -30, 32, 1, -22, -41, 14, -2, 7, -46, -33, 24, -40, -35, 7, -46, 11, -16, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [0, 60]");
            expectedResult.add("\n\tLPA : [-38, -46, -35, -40, -42, -33, -28, -46, -41, -36, -30, -33, -45, -28, -34, -39, -41, -32, -46, -27, 20, -26, -8, -8, -18, -26, 24, 34, -4, 26, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, 9, -14, -3, -5, 15, 32, 1, -22, 18, 14, -2, 7, -11, 2, 24, 21, 9, 7, 7, 11, -25, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [0, 18]");
            expectedResult.add("\n\tLPA : [-38, -46, -35, -40, -42, -33, -28, -46, -41, -36, -30, -33, -45, -28, -34, -39, -41, -32, -46, -27, 20, -26, -8, -8, -18, -26, 24, 34, -4, 26, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, 9, -14, -3, -5, 15, 32, 1, -22, 18, 14, -2, 7, -11, 2, 24, 21, 9, 7, 7, 11, -25, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [20, 60]");
            expectedResult.add("\nQS : [-38, -46, -35, -40, -42, -33, -28, -46, -41, -36, -30, -33, -45, -28, -34, -39, -41, -32, -46, -27, 20, -26, -8, -8, -18, -26, 24, 34, -4, 26, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, 9, -14, -3, -5, 15, 32, 1, -22, 18, 14, -2, 7, -11, 2, 24, 21, 9, 7, 7, 11, -25, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [0, 18]");
            expectedResult.add("\nSS : [-38, -46, -35, -40, -42, -33, -28, -46, -41, -36, -30, -33, -45, -28, -34, -39, -41, -32, -46, -27, 20, -26, -8, -8, -18, -26, 24, 34, -4, 26, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, 9, -14, -3, -5, 15, 32, 1, -22, 18, 14, -2, 7, -11, 2, 24, 21, 9, 7, 7, 11, -25, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [0, 18]");
            expectedResult.add("\nQS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, 20, -26, -8, -8, -18, -26, 24, 34, -4, 26, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, 9, -14, -3, -5, 15, 32, 1, -22, 18, 14, -2, 7, -11, 2, 24, 21, 9, 7, 7, 11, -25, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [20, 60]");
            expectedResult.add("\n\tLPA : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, 7, -26, -8, -8, -18, -26, 7, 9, -4, 2, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, -25, -14, -3, -5, -11, 7, 1, -22, -2, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [20, 48]");
            expectedResult.add("\n\tLPA : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, 7, -26, -8, -8, -18, -26, 7, 9, -4, 2, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, -25, -14, -3, -5, -11, 7, 1, -22, -2, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [50, 60]");
            expectedResult.add("\nQS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, 7, -26, -8, -8, -18, -26, 7, 9, -4, 2, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, -25, -14, -3, -5, -11, 7, 1, -22, -2, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [20, 48]");
            expectedResult.add("\nSS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, 7, -26, -8, -8, -18, -26, 7, 9, -4, 2, -16, 2, -6, -1, -21, -7, -18, -2, -26, -19, -25, -14, -3, -5, -11, 7, 1, -22, -2, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [20, 48]");
            expectedResult.add("\nQS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [50, 60]");
            expectedResult.add("\nSS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 18, 32, 15, 26, 24, 21, 34, 24, 20, 11, 14, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [50, 60]");
            expectedResult.add("\nQS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 11, 14, 15, 18, 20, 21, 24, 24, 26, 32, 34, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [62, 65]");
            expectedResult.add("\nSS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 11, 14, 15, 18, 20, 21, 24, 24, 26, 32, 34, 35, 40, 39, 37, 36, 42, 46, 44, 49, 48] in [62, 65]");
            expectedResult.add("\nQS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 11, 14, 15, 18, 20, 21, 24, 24, 26, 32, 34, 35, 36, 37, 39, 40, 42, 46, 44, 49, 48] in [67, 70]");
            expectedResult.add("\nSS : [-46, -46, -46, -45, -42, -41, -41, -40, -39, -38, -36, -35, -34, -33, -33, -32, -30, -28, -28, -27, -26, -26, -26, -25, -22, -21, -19, -18, -18, -16, -14, -11, -8, -8, -7, -6, -5, -4, -3, -2, -2, -1, 1, 2, 2, 7, 7, 7, 9, 9, 11, 14, 15, 18, 20, 21, 24, 24, 26, 32, 34, 35, 36, 37, 39, 40, 42, 46, 44, 49, 48] in [67, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{19, 28, -29, 19, -30, 3, -39, -34, -11, -3, 45, 1, -11, 32, 21, -22, 34, 22, 45, 46, -49, -25, -29, 28, 39, -29, -26, -49, 23, 11, -21, -40, 8, -40, 34, 25, -16, -3, -34, -40, 35, -33, 3, 25, -41, 34, -12, 4, 5, 30, -1, 46, -47, 31, 49, 38, -6, -45, -20, -28, 18, 23, 43, 48, 31, 22, 20, 49, -6, -47, -3, -35, 23, -17, 38, 24};
        sortedArray = new int[]{-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, -3, -1, 1, 3, 3, 4, 5, 8, 11, 18, 19, 19, 20, 21, 22, 22, 23, 23, 23, 24, 25, 25, 28, 28, 30, 31, 31, 32, 34, 34, 34, 35, 38, 38, 39, 43, 45, 45, 46, 46, 48, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [19, 28, -29, 19, -30, 3, -39, -34, -11, -3, 45, 1, -11, 32, 21, -22, 34, 22, 45, 46, -49, -25, -29, 28, 39, -29, -26, -49, 23, 11, -21, -40, 8, -40, 34, 25, -16, -3, -34, -40, 35, -33, 3, 25, -41, 34, -12, 4, 5, 30, -1, 46, -47, 31, 49, 38, -6, -45, -20, -28, 18, 23, 43, 48, 31, 22, 20, 49, -6, -47, -3, -35, 23, -17, 38, 24] in [0, 75]");
            expectedResult.add("\n\tLPA : [-17, -35, -29, -3, -30, -47, -39, -34, -11, -6, -28, -20, -11, -45, -6, -22, -47, -12, -41, -33, -49, -25, -29, -40, -34, -29, -26, -49, -16, -40, -21, -40, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [0, 31]");
            expectedResult.add("\n\tLPA : [-17, -35, -29, -3, -30, -47, -39, -34, -11, -6, -28, -20, -11, -45, -6, -22, -47, -12, -41, -33, -49, -25, -29, -40, -34, -29, -26, -49, -16, -40, -21, -40, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [33, 75]");
            expectedResult.add("\nQS : [-17, -35, -29, -3, -30, -47, -39, -34, -11, -6, -28, -20, -11, -45, -6, -22, -47, -12, -41, -33, -49, -25, -29, -40, -34, -29, -26, -49, -16, -40, -21, -40, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [0, 31]");
            expectedResult.add("\n\tLPA : [-40, -35, -29, -49, -30, -47, -39, -34, -26, -29, -28, -34, -40, -45, -29, -40, -47, -25, -41, -33, -49, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [0, 20]");
            expectedResult.add("\n\tLPA : [-40, -35, -29, -49, -30, -47, -39, -34, -26, -29, -28, -34, -40, -45, -29, -40, -47, -25, -41, -33, -49, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [22, 31]");
            expectedResult.add("\nQS : [-40, -35, -29, -49, -30, -47, -39, -34, -26, -29, -28, -34, -40, -45, -29, -40, -47, -25, -41, -33, -49, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [0, 20]");
            expectedResult.add("\nSS : [-40, -35, -29, -49, -30, -47, -39, -34, -26, -29, -28, -34, -40, -45, -29, -40, -47, -25, -41, -33, -49, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [0, 20]");
            expectedResult.add("\nQS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [22, 31]");
            expectedResult.add("\nSS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -6, -11, -20, -6, -11, -3, -16, -17, -21, -12, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [22, 31]");
            expectedResult.add("\nQS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 49, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 49, -3, 3, 19, 28, 23, 19, 38, 8] in [33, 75]");
            expectedResult.add("\n\tLPA : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 8, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 38, -3, 3, 19, 28, 23, 19, 49, 49] in [33, 73]");
            expectedResult.add("\n\tLPA : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 8, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 38, -3, 3, 19, 28, 23, 19, 49, 49] in [75, 75]");
            expectedResult.add("\nQS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 34, 25, 23, 24, 39, 28, 35, 46, 3, 25, 45, 34, 22, 4, 5, 30, -1, 46, 34, 31, 8, 38, 21, 32, 1, 45, 18, 23, 43, 48, 31, 22, 20, 38, -3, 3, 19, 28, 23, 19, 49, 49] in [33, 73]");
            expectedResult.add("\n\tLPA : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 23, 25, 23, 24, 28, 28, 19, 3, 3, 25, -3, 20, 22, 4, 5, 30, -1, 22, 31, 19, 8, 23, 21, 18, 1, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [33, 58]");
            expectedResult.add("\n\tLPA : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 23, 25, 23, 24, 28, 28, 19, 3, 3, 25, -3, 20, 22, 4, 5, 30, -1, 22, 31, 19, 8, 23, 21, 18, 1, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [60, 73]");
            expectedResult.add("\nQS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 23, 25, 23, 24, 28, 28, 19, 3, 3, 25, -3, 20, 22, 4, 5, 30, -1, 22, 31, 19, 8, 23, 21, 18, 1, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [33, 58]");
            expectedResult.add("\nSS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, 11, 23, 25, 23, 24, 28, 28, 19, 3, 3, 25, -3, 20, 22, 4, 5, 30, -1, 22, 31, 19, 8, 23, 21, 18, 1, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [33, 58]");
            expectedResult.add("\nQS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, -3, -1, 1, 3, 3, 4, 5, 8, 11, 18, 19, 19, 20, 21, 22, 22, 23, 23, 23, 24, 25, 25, 28, 28, 30, 31, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [60, 73]");
            expectedResult.add("\nSS : [-49, -49, -47, -47, -45, -41, -40, -40, -40, -39, -35, -34, -34, -33, -30, -29, -29, -29, -28, -26, -25, -22, -21, -20, -17, -16, -12, -11, -11, -6, -6, -3, -3, -3, -1, 1, 3, 3, 4, 5, 8, 11, 18, 19, 19, 20, 21, 22, 22, 23, 23, 23, 24, 25, 25, 28, 28, 30, 31, 31, 32, 38, 43, 48, 34, 46, 34, 38, 45, 46, 35, 39, 34, 45, 49, 49] in [60, 73]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-37, 37, 0, 47, 42, -19, 46, -40, -43, -23, -44, 13, 11, 43, -36, -9, 28, -27, -38, 37, -17, -44, -27, -7, -27, 6, -12, -6, 47, -16, -32, -24, 8, 36, -1, 18, 21, -33, 38, -41, -9, 21, -4, -45, -49, 27, 26, -31, 5, -46, 27, -2, -38, 47, 1, 48, -41, 25, -33, -26, 31, 47, -50, -36, -14, 27, -13, -37, 9, 20, 23, 3, -2, -39, 49, 9, -11, -1, 21, 8, -27};
        sortedArray = new int[]{-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -7, -6, -4, -2, -2, -1, -1, 0, 1, 3, 5, 6, 8, 8, 9, 9, 11, 13, 18, 20, 21, 21, 21, 23, 25, 26, 27, 27, 27, 28, 31, 36, 37, 37, 38, 42, 43, 46, 47, 47, 47, 47, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-37, 37, 0, 47, 42, -19, 46, -40, -43, -23, -44, 13, 11, 43, -36, -9, 28, -27, -38, 37, -17, -44, -27, -7, -27, 6, -12, -6, 47, -16, -32, -24, 8, 36, -1, 18, 21, -33, 38, -41, -9, 21, -4, -45, -49, 27, 26, -31, 5, -46, 27, -2, -38, 47, 1, 48, -41, 25, -33, -26, 31, 47, -50, -36, -14, 27, -13, -37, 9, 20, 23, 3, -2, -39, 49, 9, -11, -1, 21, 8, -27] in [0, 80]");
            expectedResult.add("\n\tLPA : [-37, -11, -39, -37, -13, -19, -14, -40, -43, -23, -44, -36, -50, -26, -36, -33, -41, -27, -38, -38, -17, -44, -27, -46, -27, -31, -12, -49, -45, -16, -32, -24, -27, -41, -33, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [0, 34]");
            expectedResult.add("\n\tLPA : [-37, -11, -39, -37, -13, -19, -14, -40, -43, -23, -44, -36, -50, -26, -36, -33, -41, -27, -38, -38, -17, -44, -27, -46, -27, -31, -12, -49, -45, -16, -32, -24, -27, -41, -33, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [36, 80]");
            expectedResult.add("\nQS : [-37, -11, -39, -37, -13, -19, -14, -40, -43, -23, -44, -36, -50, -26, -36, -33, -41, -27, -38, -38, -17, -44, -27, -46, -27, -31, -12, -49, -45, -16, -32, -24, -27, -41, -33, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [0, 34]");
            expectedResult.add("\n\tLPA : [-37, -41, -39, -37, -27, -32, -45, -40, -43, -49, -44, -36, -50, -31, -36, -33, -41, -33, -38, -38, -27, -44, -46, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [0, 22]");
            expectedResult.add("\n\tLPA : [-37, -41, -39, -37, -27, -32, -45, -40, -43, -49, -44, -36, -50, -31, -36, -33, -41, -33, -38, -38, -27, -44, -46, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [24, 34]");
            expectedResult.add("\nQS : [-37, -41, -39, -37, -27, -32, -45, -40, -43, -49, -44, -36, -50, -31, -36, -33, -41, -33, -38, -38, -27, -44, -46, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [0, 22]");
            expectedResult.add("\nSS : [-37, -41, -39, -37, -27, -32, -45, -40, -43, -49, -44, -36, -50, -31, -36, -33, -41, -33, -38, -38, -27, -44, -46, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [0, 22]");
            expectedResult.add("\nQS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [24, 34]");
            expectedResult.add("\nSS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -17, -26, -12, -23, -14, -16, -19, -24, -13, -11, -27, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [24, 34]");
            expectedResult.add("\nQS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, 21, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, -9, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 18] in [36, 80]");
            expectedResult.add("\n\tLPA : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, 18, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 21] in [36, 35]");
            expectedResult.add("\n\tLPA : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, 18, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 21] in [37, 80]");
            expectedResult.add("\nQS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 38, 36, 8, 21, -4, 47, -6, 27, 26, 6, 5, -7, 27, -2, 37, 47, 1, 48, 28, 25, 18, 43, 31, 47, 11, 13, 46, 27, 42, 47, 9, 20, 23, 3, -2, 0, 49, 9, 37, -1, 21, 8, 21] in [37, 80]");
            expectedResult.add("\n\tLPA : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 8, -1, 8, 9, -4, 0, -6, -2, 3, 6, 5, -7, 9, -2, 13, 11, 1, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [37, 54]");
            expectedResult.add("\n\tLPA : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 8, -1, 8, 9, -4, 0, -6, -2, 3, 6, 5, -7, 9, -2, 13, 11, 1, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [56, 80]");
            expectedResult.add("\nQS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 8, -1, 8, 9, -4, 0, -6, -2, 3, 6, 5, -7, 9, -2, 13, 11, 1, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [37, 54]");
            expectedResult.add("\nSS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -1, 8, -1, 8, 9, -4, 0, -6, -2, 3, 6, 5, -7, 9, -2, 13, 11, 1, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [37, 54]");
            expectedResult.add("\nQS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -7, -6, -4, -2, -2, -1, -1, 0, 1, 3, 5, 6, 8, 8, 9, 9, 11, 13, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [56, 80]");
            expectedResult.add("\nSS : [-50, -49, -46, -45, -44, -44, -43, -41, -41, -40, -39, -38, -38, -37, -37, -36, -36, -33, -33, -32, -31, -27, -27, -27, -27, -26, -24, -23, -19, -17, -16, -14, -13, -12, -11, -9, -9, -7, -6, -4, -2, -2, -1, -1, 0, 1, 3, 5, 6, 8, 8, 9, 9, 11, 13, 18, 28, 25, 21, 43, 31, 47, 47, 37, 46, 27, 42, 47, 27, 20, 23, 26, 27, 47, 49, 21, 37, 36, 21, 38, 48] in [56, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using a PSEUDO random index as a pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedRandomPivot() {
        Quicksort quicksort = new Quicksort(PivotFinder.getRandomPivot(69696969), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{-20, 10, 21, -1, -39, -37, -42, -21, 5, 23, -24, -41, 12, -32, 29, 6, -2, -9, -32, -21, 31, 0, -49, -8, 7, 47, -21, -7, -38, 34, -29, 14, 9, -37, -6, -33, -14, 34, -31, 24, -14, -36, -19, 38, -21, -37, 22, -39, -14, -42, 12, 15, -13, 47, -29, 34};
        sortedArray = new int[]{-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -21, -20, -19, -14, -14, -14, -13, -9, -8, -7, -6, -2, -1, 0, 5, 6, 7, 9, 10, 12, 12, 14, 15, 21, 22, 23, 24, 29, 31, 34, 34, 34, 38, 47, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-20, 10, 21, -1, -39, -37, -42, -21, 5, 23, -24, -41, 12, -32, 29, 6, -2, -9, -32, -21, 31, 0, -49, -8, 7, 47, -21, -7, -38, 34, -29, 14, 9, -37, -6, -33, -14, 34, -31, 24, -14, -36, -19, 38, -21, -37, 22, -39, -14, -42, 12, 15, -13, 47, -29, 34] in [0, 55]");
            expectedResult.add("\n\tLPA : [-29, -42, -39, -37, -39, -37, -42, -21, -36, -31, -24, -41, -33, -32, -37, -29, -38, -21, -32, -49, -21, 0, 34, -8, 7, 47, -9, -7, -2, 34, 6, 14, 9, 29, -6, 12, -14, 34, 23, 24, -14, 5, -19, 38, -21, -1, 22, 21, -14, 10, 12, 15, -13, 47, -20, 31] in [0, 19]");
            expectedResult.add("\n\tLPA : [-29, -42, -39, -37, -39, -37, -42, -21, -36, -31, -24, -41, -33, -32, -37, -29, -38, -21, -32, -49, -21, 0, 34, -8, 7, 47, -9, -7, -2, 34, 6, 14, 9, 29, -6, 12, -14, 34, 23, 24, -14, 5, -19, 38, -21, -1, 22, 21, -14, 10, 12, 15, -13, 47, -20, 31] in [21, 55]");
            expectedResult.add("\nQS : [-29, -42, -39, -37, -39, -37, -42, -21, -36, -31, -24, -41, -33, -32, -37, -29, -38, -21, -32, -49, -21, 0, 34, -8, 7, 47, -9, -7, -2, 34, 6, 14, 9, 29, -6, 12, -14, 34, 23, 24, -14, 5, -19, 38, -21, -1, 22, 21, -14, 10, 12, 15, -13, 47, -20, 31] in [0, 19]");
            expectedResult.add("\nSS : [-29, -42, -39, -37, -39, -37, -42, -21, -36, -31, -24, -41, -33, -32, -37, -29, -38, -21, -32, -49, -21, 0, 34, -8, 7, 47, -9, -7, -2, 34, 6, 14, 9, 29, -6, 12, -14, 34, 23, 24, -14, 5, -19, 38, -21, -1, 22, 21, -14, 10, 12, 15, -13, 47, -20, 31] in [0, 19]");
            expectedResult.add("\nQS : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, 0, 34, -8, 7, 47, -9, -7, -2, 34, 6, 14, 9, 29, -6, 12, -14, 34, 23, 24, -14, 5, -19, 38, -21, -1, 22, 21, -14, 10, 12, 15, -13, 47, -20, 31] in [21, 55]");
            expectedResult.add("\n\tLPA : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -20, -13, -14, -21, -19, -9, -14, -14, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [21, 28]");
            expectedResult.add("\n\tLPA : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -20, -13, -14, -21, -19, -9, -14, -14, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [30, 55]");
            expectedResult.add("\nQS : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -20, -13, -14, -21, -19, -9, -14, -14, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [21, 28]");
            expectedResult.add("\nSS : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -20, -13, -14, -21, -19, -9, -14, -14, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [21, 28]");
            expectedResult.add("\nQS : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -21, -20, -19, -14, -14, -14, -13, -9, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [30, 55]");
            expectedResult.add("\nSS : [-49, -42, -42, -41, -39, -39, -38, -37, -37, -37, -36, -33, -32, -32, -31, -29, -29, -24, -21, -21, -21, -21, -20, -19, -14, -14, -14, -13, -9, -8, 6, 14, 9, 29, -6, 12, -2, 34, 23, 24, -7, 5, 47, 38, 7, -1, 22, 21, 31, 10, 12, 15, 34, 47, 0, 34] in [30, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-4, -40, -18, 2, 9, -20, -42, 42, -3, -32, -46, -11, 18, -29, 35, -47, -25, -30, -16, 44, -21, 20, -13, 39, -14, 30, -45, 16, 44, -33, 3, 35, -46, -40, -42, -11, 14, 35, -18, -34, -9, -3, 42, -27, -39, -6, -2, 34, 23, 5, 42, 13, -18, -15, -1, -15, 27, -39, -13, -19, 22};
        sortedArray = new int[]{-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -4, -3, -3, -2, -1, 2, 3, 5, 9, 13, 14, 16, 18, 20, 22, 23, 27, 30, 34, 35, 35, 35, 39, 42, 42, 42, 44, 44};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-4, -40, -18, 2, 9, -20, -42, 42, -3, -32, -46, -11, 18, -29, 35, -47, -25, -30, -16, 44, -21, 20, -13, 39, -14, 30, -45, 16, 44, -33, 3, 35, -46, -40, -42, -11, 14, 35, -18, -34, -9, -3, 42, -27, -39, -6, -2, 34, 23, 5, 42, 13, -18, -15, -1, -15, 27, -39, -13, -19, 22] in [0, 60]");
            expectedResult.add("\n\tLPA : [-4, -40, -18, -19, -13, -20, -42, -39, -3, -32, -46, -11, -15, -29, -1, -47, -25, -30, -16, -15, -21, -18, -13, -2, -14, -6, -45, -39, -27, -33, -3, -9, -46, -40, -42, -11, -34, -18, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [0, 37]");
            expectedResult.add("\n\tLPA : [-4, -40, -18, -19, -13, -20, -42, -39, -3, -32, -46, -11, -15, -29, -1, -47, -25, -30, -16, -15, -21, -18, -13, -2, -14, -6, -45, -39, -27, -33, -3, -9, -46, -40, -42, -11, -34, -18, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [39, 60]");
            expectedResult.add("\nQS : [-4, -40, -18, -19, -13, -20, -42, -39, -3, -32, -46, -11, -15, -29, -1, -47, -25, -30, -16, -15, -21, -18, -13, -2, -14, -6, -45, -39, -27, -33, -3, -9, -46, -40, -42, -11, -34, -18, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [0, 37]");
            expectedResult.add("\n\tLPA : [-34, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -47, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [0, 31]");
            expectedResult.add("\n\tLPA : [-34, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -47, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [33, 37]");
            expectedResult.add("\nQS : [-34, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -47, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [0, 31]");
            expectedResult.add("\n\tLPA : [-47, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -9, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -34, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [0, -1]");
            expectedResult.add("\n\tLPA : [-47, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -9, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -34, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [1, 31]");
            expectedResult.add("\nQS : [-47, -40, -18, -19, -13, -20, -42, -39, -11, -32, -46, -11, -15, -29, -42, -9, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -33, -46, -34, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [1, 31]");
            expectedResult.add("\n\tLPA : [-47, -40, -18, -19, -13, -20, -42, -39, -34, -32, -46, -46, -15, -29, -42, -33, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [1, 28]");
            expectedResult.add("\n\tLPA : [-47, -40, -18, -19, -13, -20, -42, -39, -34, -32, -46, -46, -15, -29, -42, -33, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [30, 31]");
            expectedResult.add("\nQS : [-47, -40, -18, -19, -13, -20, -42, -39, -34, -32, -46, -46, -15, -29, -42, -33, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [1, 28]");
            expectedResult.add("\nSS : [-47, -40, -18, -19, -13, -20, -42, -39, -34, -32, -46, -46, -15, -29, -42, -33, -25, -30, -16, -15, -21, -18, -13, -40, -14, -18, -45, -39, -27, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [1, 28]");
            expectedResult.add("\nQS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [30, 31]");
            expectedResult.add("\nSS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [30, 31]");
            expectedResult.add("\nQS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [33, 37]");
            expectedResult.add("\nSS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -2, -1, -3, -4, -3, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [33, 37]");
            expectedResult.add("\nQS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -4, -3, -3, -2, -1, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [39, 60]");
            expectedResult.add("\nSS : [-47, -46, -46, -45, -42, -42, -40, -40, -39, -39, -34, -33, -32, -30, -29, -27, -25, -21, -20, -19, -18, -18, -18, -16, -15, -15, -14, -13, -13, -11, -11, -9, -6, -4, -3, -3, -2, -1, 2, 14, 35, 3, 42, 44, 16, 30, 39, 34, 23, 5, 42, 13, 20, 44, 35, 18, 27, 42, 9, 22, 35] in [39, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-1, -36, -14, -2, 3, 43, -43, 28, -33, -49, -31, -37, -6, 37, 12, 19, 48, -35, 37, -25, 37, -50, 13, 29, -46, -50, 18, 32, 41, 14, -23, -7, -41, 13, 16, 3, -43, -47, -10, 5, -35, 22, -36, -1, 27, -6, 4, 4, 28, 5, 11, 34, -46, -6, 32, -7, -14, 5, 44, 14, -37, 1, 19, 13, -40, -2};
        sortedArray = new int[]{-50, -50, -49, -47, -46, -46, -43, -43, -41, -40, -37, -37, -36, -36, -35, -35, -33, -31, -25, -23, -14, -14, -10, -7, -7, -6, -6, -6, -2, -2, -1, -1, 1, 3, 3, 4, 4, 5, 5, 5, 11, 12, 13, 13, 13, 14, 14, 16, 18, 19, 19, 22, 27, 28, 28, 29, 32, 32, 34, 37, 37, 37, 41, 43, 44, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-1, -36, -14, -2, 3, 43, -43, 28, -33, -49, -31, -37, -6, 37, 12, 19, 48, -35, 37, -25, 37, -50, 13, 29, -46, -50, 18, 32, 41, 14, -23, -7, -41, 13, 16, 3, -43, -47, -10, 5, -35, 22, -36, -1, 27, -6, 4, 4, 28, 5, 11, 34, -46, -6, 32, -7, -14, 5, 44, 14, -37, 1, 19, 13, -40, -2] in [0, 65]");
            expectedResult.add("\n\tLPA : [-1, -36, -14, -2, 3, -40, -43, 1, -33, -49, -31, -37, -6, -37, -2, -14, -7, -35, -6, -25, -46, -50, 5, 4, -46, -50, 4, -6, -1, -36, -23, -7, -41, -35, 5, 3, -43, -47, -10, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [0, 38]");
            expectedResult.add("\n\tLPA : [-1, -36, -14, -2, 3, -40, -43, 1, -33, -49, -31, -37, -6, -37, -2, -14, -7, -35, -6, -25, -46, -50, 5, 4, -46, -50, 4, -6, -1, -36, -23, -7, -41, -35, 5, 3, -43, -47, -10, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [40, 65]");
            expectedResult.add("\nQS : [-1, -36, -14, -2, 3, -40, -43, 1, -33, -49, -31, -37, -6, -37, -2, -14, -7, -35, -6, -25, -46, -50, 5, 4, -46, -50, 4, -6, -1, -36, -23, -7, -41, -35, 5, 3, -43, -47, -10, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [0, 38]");
            expectedResult.add("\n\tLPA : [-47, -36, -43, -35, -41, -40, -43, -23, -33, -49, -31, -37, -36, -37, -50, -46, -50, -35, -46, -25, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [0, 19]");
            expectedResult.add("\n\tLPA : [-47, -36, -43, -35, -41, -40, -43, -23, -33, -49, -31, -37, -36, -37, -50, -46, -50, -35, -46, -25, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [21, 38]");
            expectedResult.add("\nQS : [-47, -36, -43, -35, -41, -40, -43, -23, -33, -49, -31, -37, -36, -37, -50, -46, -50, -35, -46, -25, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [0, 19]");
            expectedResult.add("\nSS : [-47, -36, -43, -35, -41, -40, -43, -23, -33, -49, -31, -37, -36, -37, -50, -46, -50, -35, -46, -25, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [0, 19]");
            expectedResult.add("\nQS : [-50, -50, -49, -47, -46, -46, -43, -43, -41, -40, -37, -37, -36, -36, -35, -35, -33, -31, -25, -23, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [21, 38]");
            expectedResult.add("\nSS : [-50, -50, -49, -47, -46, -46, -43, -43, -41, -40, -37, -37, -36, -36, -35, -35, -33, -31, -25, -23, -14, -7, 5, 4, -14, -2, 4, -6, -1, -6, 1, -7, 3, -2, 5, 3, -10, -1, -6, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [21, 38]");
            expectedResult.add("\nQS : [-50, -50, -49, -47, -46, -46, -43, -43, -41, -40, -37, -37, -36, -36, -35, -35, -33, -31, -25, -23, -14, -14, -10, -7, -7, -6, -6, -6, -2, -2, -1, -1, 1, 3, 3, 4, 4, 5, 5, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [40, 65]");
            expectedResult.add("\nSS : [-50, -50, -49, -47, -46, -46, -43, -43, -41, -40, -37, -37, -36, -36, -35, -35, -33, -31, -25, -23, -14, -14, -10, -7, -7, -6, -6, -6, -2, -2, -1, -1, 1, 3, 3, 4, 4, 5, 5, 5, 13, 22, 14, 41, 27, 32, 18, 29, 28, 13, 11, 34, 37, 37, 32, 48, 19, 12, 44, 14, 37, 28, 19, 13, 43, 16] in [40, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{9, 42, 2, -9, 32, -32, 20, -47, -22, -40, 8, -8, 31, 12, -41, 16, 31, 21, -28, 20, -14, 44, -43, 43, 16, 17, 35, -37, -20, 30, -2, -17, 40, 10, 30, 14, -28, 49, 36, -46, -48, -39, 44, -12, -24, 15, 40, 29, 3, 32, -42, 5, 0, 28, 4, 32, -6, 24, -19, 38, 37, 40, -33, 49, 42, 27, -40, 38, -4, 40, 26};
        sortedArray = new int[]{-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 16, 17, 20, 20, 21, 24, 26, 27, 28, 29, 30, 30, 31, 31, 32, 32, 32, 35, 36, 37, 38, 38, 40, 40, 40, 40, 42, 42, 43, 44, 44, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [9, 42, 2, -9, 32, -32, 20, -47, -22, -40, 8, -8, 31, 12, -41, 16, 31, 21, -28, 20, -14, 44, -43, 43, 16, 17, 35, -37, -20, 30, -2, -17, 40, 10, 30, 14, -28, 49, 36, -46, -48, -39, 44, -12, -24, 15, 40, 29, 3, 32, -42, 5, 0, 28, 4, 32, -6, 24, -19, 38, 37, 40, -33, 49, 42, 27, -40, 38, -4, 40, 26] in [0, 70]");
            expectedResult.add("\n\tLPA : [-4, -40, 2, -9, -33, -32, -19, -47, -22, -40, -6, -8, 4, 0, -41, -42, 3, -24, -28, -12, -14, -39, -43, -48, -46, -28, -17, -37, -20, -2, 5, 35, 40, 10, 30, 14, 17, 49, 36, 16, 43, 44, 44, 20, 21, 15, 40, 29, 31, 32, 16, 26, 12, 28, 31, 32, 8, 24, 20, 38, 37, 40, 32, 49, 42, 27, 42, 38, 9, 40, 30] in [0, 29]");
            expectedResult.add("\n\tLPA : [-4, -40, 2, -9, -33, -32, -19, -47, -22, -40, -6, -8, 4, 0, -41, -42, 3, -24, -28, -12, -14, -39, -43, -48, -46, -28, -17, -37, -20, -2, 5, 35, 40, 10, 30, 14, 17, 49, 36, 16, 43, 44, 44, 20, 21, 15, 40, 29, 31, 32, 16, 26, 12, 28, 31, 32, 8, 24, 20, 38, 37, 40, 32, 49, 42, 27, 42, 38, 9, 40, 30] in [31, 70]");
            expectedResult.add("\nQS : [-4, -40, 2, -9, -33, -32, -19, -47, -22, -40, -6, -8, 4, 0, -41, -42, 3, -24, -28, -12, -14, -39, -43, -48, -46, -28, -17, -37, -20, -2, 5, 35, 40, 10, 30, 14, 17, 49, 36, 16, 43, 44, 44, 20, 21, 15, 40, 29, 31, 32, 16, 26, 12, 28, 31, 32, 8, 24, 20, 38, 37, 40, 32, 49, 42, 27, 42, 38, 9, 40, 30] in [0, 29]");
            expectedResult.add("\nSS : [-4, -40, 2, -9, -33, -32, -19, -47, -22, -40, -6, -8, 4, 0, -41, -42, 3, -24, -28, -12, -14, -39, -43, -48, -46, -28, -17, -37, -20, -2, 5, 35, 40, 10, 30, 14, 17, 49, 36, 16, 43, 44, 44, 20, 21, 15, 40, 29, 31, 32, 16, 26, 12, 28, 31, 32, 8, 24, 20, 38, 37, 40, 32, 49, 42, 27, 42, 38, 9, 40, 30] in [0, 29]");
            expectedResult.add("\nQS : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 35, 40, 10, 30, 14, 17, 49, 36, 16, 43, 44, 44, 20, 21, 15, 40, 29, 31, 32, 16, 26, 12, 28, 31, 32, 8, 24, 20, 38, 37, 40, 32, 49, 42, 27, 42, 38, 9, 40, 30] in [31, 70]");
            expectedResult.add("\n\tLPA : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 9, 27, 10, 30, 14, 17, 32, 20, 16, 24, 8, 32, 20, 21, 15, 31, 29, 31, 30, 16, 26, 12, 28, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [31, 53]");
            expectedResult.add("\n\tLPA : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 9, 27, 10, 30, 14, 17, 32, 20, 16, 24, 8, 32, 20, 21, 15, 31, 29, 31, 30, 16, 26, 12, 28, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [55, 70]");
            expectedResult.add("\nQS : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 9, 27, 10, 30, 14, 17, 32, 20, 16, 24, 8, 32, 20, 21, 15, 31, 29, 31, 30, 16, 26, 12, 28, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [31, 53]");
            expectedResult.add("\nSS : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 9, 27, 10, 30, 14, 17, 32, 20, 16, 24, 8, 32, 20, 21, 15, 31, 29, 31, 30, 16, 26, 12, 28, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [31, 53]");
            expectedResult.add("\nQS : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 16, 17, 20, 20, 21, 24, 26, 27, 28, 29, 30, 30, 31, 31, 32, 32, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [55, 70]");
            expectedResult.add("\nSS : [-48, -47, -46, -43, -42, -41, -40, -40, -39, -37, -33, -32, -28, -28, -24, -22, -20, -19, -17, -14, -12, -9, -8, -6, -4, -2, 0, 2, 3, 4, 5, 8, 9, 10, 12, 14, 15, 16, 16, 17, 20, 20, 21, 24, 26, 27, 28, 29, 30, 30, 31, 31, 32, 32, 32, 44, 44, 43, 36, 38, 37, 40, 49, 49, 42, 40, 42, 38, 35, 40, 40] in [55, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{29, -6, -37, -7, 2, -49, 29, -5, 24, 16, 38, 34, 49, 32, -21, 46, -11, -23, -49, 41, -44, 15, -41, 45, -25, -13, 47, 34, 31, -38, 45, -22, 28, 44, 37, -7, -23, -4, -46, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, -30, 31, 35, 34, -16, 35, 48, -39, -49, -24, 38, 12, -23, -24, 2, 29, -27, -4, -22, -26, -41, 22, 25, 25, -12, -28, -44};
        sortedArray = new int[]{-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -23, -23, -23, -22, -22, -21, -20, -16, -15, -13, -12, -12, -11, -7, -7, -6, -5, -4, -4, -2, 2, 2, 3, 3, 10, 12, 12, 15, 16, 22, 24, 24, 25, 25, 28, 29, 29, 29, 31, 31, 32, 34, 34, 34, 35, 35, 37, 38, 38, 38, 41, 44, 45, 45, 46, 47, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [29, -6, -37, -7, 2, -49, 29, -5, 24, 16, 38, 34, 49, 32, -21, 46, -11, -23, -49, 41, -44, 15, -41, 45, -25, -13, 47, 34, 31, -38, 45, -22, 28, 44, 37, -7, -23, -4, -46, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, -30, 31, 35, 34, -16, 35, 48, -39, -49, -24, 38, 12, -23, -24, 2, 29, -27, -4, -22, -26, -41, 22, 25, 25, -12, -28, -44] in [0, 75]");
            expectedResult.add("\n\tLPA : [-28, -41, -37, -26, -27, -49, -44, -24, -49, -39, -30, -46, -38, -25, -41, -44, -49, -24, -11, 41, 46, 15, -21, 45, 32, -13, 47, 34, 31, 49, 45, -22, 28, 44, 37, -7, -23, -4, 34, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, 38, 31, 35, 34, -16, 35, 48, 16, 24, -5, 38, 12, -23, 29, 2, 29, 2, -4, -22, -7, -6, 22, 25, 25, -12, 29, -23] in [0, 16]");
            expectedResult.add("\n\tLPA : [-28, -41, -37, -26, -27, -49, -44, -24, -49, -39, -30, -46, -38, -25, -41, -44, -49, -24, -11, 41, 46, 15, -21, 45, 32, -13, 47, 34, 31, 49, 45, -22, 28, 44, 37, -7, -23, -4, 34, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, 38, 31, 35, 34, -16, 35, 48, 16, 24, -5, 38, 12, -23, 29, 2, 29, 2, -4, -22, -7, -6, 22, 25, 25, -12, 29, -23] in [18, 75]");
            expectedResult.add("\nQS : [-28, -41, -37, -26, -27, -49, -44, -24, -49, -39, -30, -46, -38, -25, -41, -44, -49, -24, -11, 41, 46, 15, -21, 45, 32, -13, 47, 34, 31, 49, 45, -22, 28, 44, 37, -7, -23, -4, 34, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, 38, 31, 35, 34, -16, 35, 48, 16, 24, -5, 38, 12, -23, 29, 2, 29, 2, -4, -22, -7, -6, 22, 25, 25, -12, 29, -23] in [0, 16]");
            expectedResult.add("\nSS : [-28, -41, -37, -26, -27, -49, -44, -24, -49, -39, -30, -46, -38, -25, -41, -44, -49, -24, -11, 41, 46, 15, -21, 45, 32, -13, 47, 34, 31, 49, 45, -22, 28, 44, 37, -7, -23, -4, 34, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, 38, 31, 35, 34, -16, 35, 48, 16, 24, -5, 38, 12, -23, 29, 2, 29, 2, -4, -22, -7, -6, 22, 25, 25, -12, 29, -23] in [0, 16]");
            expectedResult.add("\nQS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, 41, 46, 15, -21, 45, 32, -13, 47, 34, 31, 49, 45, -22, 28, 44, 37, -7, -23, -4, 34, -15, 10, 38, 3, 3, -12, 12, -2, 24, -20, 38, 31, 35, 34, -16, 35, 48, 16, 24, -5, 38, 12, -23, 29, 2, 29, 2, -4, -22, -7, -6, 22, 25, 25, -12, 29, -23] in [18, 75]");
            expectedResult.add("\n\tLPA : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, 29, -12, 15, -21, 25, 25, -13, 22, -6, -7, -22, -4, -22, 28, 2, -23, -7, -23, -4, 2, -15, 10, 29, 3, 3, -12, 12, -2, 24, -20, -23, 12, -5, 24, -16, 16, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [18, 54]");
            expectedResult.add("\n\tLPA : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, 29, -12, 15, -21, 25, 25, -13, 22, -6, -7, -22, -4, -22, 28, 2, -23, -7, -23, -4, 2, -15, 10, 29, 3, 3, -12, 12, -2, 24, -20, -23, 12, -5, 24, -16, 16, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [56, 75]");
            expectedResult.add("\nQS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, 29, -12, 15, -21, 25, 25, -13, 22, -6, -7, -22, -4, -22, 28, 2, -23, -7, -23, -4, 2, -15, 10, 29, 3, 3, -12, 12, -2, 24, -20, -23, 12, -5, 24, -16, 16, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [18, 54]");
            expectedResult.add("\n\tLPA : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, -16, -12, -5, -21, -23, -20, -13, -12, -6, -7, -22, -15, -22, -23, -7, -23, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [18, 34]");
            expectedResult.add("\n\tLPA : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, -16, -12, -5, -21, -23, -20, -13, -12, -6, -7, -22, -15, -22, -23, -7, -23, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [36, 54]");
            expectedResult.add("\nQS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, -16, -12, -5, -21, -23, -20, -13, -12, -6, -7, -22, -15, -22, -23, -7, -23, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [18, 34]");
            expectedResult.add("\nSS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -11, -16, -12, -5, -21, -23, -20, -13, -12, -6, -7, -22, -15, -22, -23, -7, -23, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [18, 34]");
            expectedResult.add("\nQS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -23, -23, -23, -22, -22, -21, -20, -16, -15, -13, -12, -12, -11, -7, -7, -6, -5, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [36, 54]");
            expectedResult.add("\nSS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -23, -23, -23, -22, -22, -21, -20, -16, -15, -13, -12, -12, -11, -7, -7, -6, -5, -4, 28, 16, 2, -4, 10, 29, 3, 3, 22, 12, -2, 24, 25, 25, 12, 15, 24, 29, 2, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [36, 54]");
            expectedResult.add("\nQS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -23, -23, -23, -22, -22, -21, -20, -16, -15, -13, -12, -12, -11, -7, -7, -6, -5, -4, -4, -2, 2, 2, 3, 3, 10, 12, 12, 15, 16, 22, 24, 24, 25, 25, 28, 29, 29, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [56, 75]");
            expectedResult.add("\nSS : [-49, -49, -49, -46, -44, -44, -41, -41, -39, -38, -37, -30, -28, -27, -26, -25, -24, -24, -23, -23, -23, -22, -22, -21, -20, -16, -15, -13, -12, -12, -11, -7, -7, -6, -5, -4, -4, -2, 2, 2, 3, 3, 10, 12, 12, 15, 16, 22, 24, 24, 25, 25, 28, 29, 29, 29, 35, 34, 35, 38, 31, 38, 38, 34, 37, 44, 45, 49, 31, 34, 47, 32, 45, 46, 41, 48] in [56, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-39, -41, -18, 5, -5, 36, -44, -41, -32, -22, 48, 15, -9, 49, 2, 34, -13, 1, -27, 13, 27, 26, -17, 30, 22, 29, -18, -16, -12, -49, -11, -50, -7, -23, -10, -47, -38, 0, -39, -15, 9, 8, 35, -38, 42, 45, 42, 12, -30, -42, 28, 36, 23, 30, -4, -10, 2, -36, 40, 5, 4, 30, -23, 26, 12, -14, -19, -35, -49, -50, -49, 12, -22, -1, 2, 6, -27, -11, 35, -11, 26};
        sortedArray = new int[]{-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -22, -22, -19, -18, -18, -17, -16, -15, -14, -13, -12, -11, -11, -11, -10, -10, -9, -7, -5, -4, -1, 0, 1, 2, 2, 2, 4, 5, 5, 6, 8, 9, 12, 12, 12, 13, 15, 22, 23, 26, 26, 26, 27, 28, 29, 30, 30, 30, 34, 35, 35, 36, 36, 40, 42, 42, 45, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-39, -41, -18, 5, -5, 36, -44, -41, -32, -22, 48, 15, -9, 49, 2, 34, -13, 1, -27, 13, 27, 26, -17, 30, 22, 29, -18, -16, -12, -49, -11, -50, -7, -23, -10, -47, -38, 0, -39, -15, 9, 8, 35, -38, 42, 45, 42, 12, -30, -42, 28, 36, 23, 30, -4, -10, 2, -36, 40, 5, 4, 30, -23, 26, 12, -14, -19, -35, -49, -50, -49, 12, -22, -1, 2, 6, -27, -11, 35, -11, 26] in [0, 80]");
            expectedResult.add("\n\tLPA : [-39, -41, -27, -49, -50, -49, -44, -41, -32, -35, -36, -42, -30, -38, -39, -38, -47, -23, -27, -50, -49, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 35, 49, 42, 45, 42, 12, -9, 15, 28, 36, 23, 30, -4, -10, 2, 48, 40, 5, 4, 30, 26, 26, 12, -14, -19, -22, 36, -5, 5, 12, -22, -1, 2, 6, -18, -11, 35, -11, 26] in [0, 20]");
            expectedResult.add("\n\tLPA : [-39, -41, -27, -49, -50, -49, -44, -41, -32, -35, -36, -42, -30, -38, -39, -38, -47, -23, -27, -50, -49, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 35, 49, 42, 45, 42, 12, -9, 15, 28, 36, 23, 30, -4, -10, 2, 48, 40, 5, 4, 30, 26, 26, 12, -14, -19, -22, 36, -5, 5, 12, -22, -1, 2, 6, -18, -11, 35, -11, 26] in [22, 80]");
            expectedResult.add("\nQS : [-39, -41, -27, -49, -50, -49, -44, -41, -32, -35, -36, -42, -30, -38, -39, -38, -47, -23, -27, -50, -49, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 35, 49, 42, 45, 42, 12, -9, 15, 28, 36, 23, 30, -4, -10, 2, 48, 40, 5, 4, 30, 26, 26, 12, -14, -19, -22, 36, -5, 5, 12, -22, -1, 2, 6, -18, -11, 35, -11, 26] in [0, 20]");
            expectedResult.add("\nSS : [-39, -41, -27, -49, -50, -49, -44, -41, -32, -35, -36, -42, -30, -38, -39, -38, -47, -23, -27, -50, -49, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 35, 49, 42, 45, 42, 12, -9, 15, 28, 36, 23, 30, -4, -10, 2, 48, 40, 5, 4, 30, 26, 26, 12, -14, -19, -22, 36, -5, 5, 12, -22, -1, 2, 6, -18, -11, 35, -11, 26] in [0, 20]");
            expectedResult.add("\nQS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 35, 49, 42, 45, 42, 12, -9, 15, 28, 36, 23, 30, -4, -10, 2, 48, 40, 5, 4, 30, 26, 26, 12, -14, -19, -22, 36, -5, 5, 12, -22, -1, 2, 6, -18, -11, 35, -11, 26] in [22, 80]");
            expectedResult.add("\n\tLPA : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 26, -11, 35, -11, -18, 12, -9, 15, 28, 6, 23, 30, -4, -10, 2, 2, -1, 5, 4, 30, 26, 26, 12, -14, -19, -22, -22, -5, 5, 12, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [22, 71]");
            expectedResult.add("\n\tLPA : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 26, -11, 35, -11, -18, 12, -9, 15, 28, 6, 23, 30, -4, -10, 2, 2, -1, 5, 4, 30, 26, 26, 12, -14, -19, -22, -22, -5, 5, 12, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [73, 80]");
            expectedResult.add("\nQS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, 30, 22, 29, -18, -16, -12, 27, -11, 13, -7, 1, -10, -13, 34, 0, 2, -15, 9, 8, 26, -11, 35, -11, -18, 12, -9, 15, 28, 6, 23, 30, -4, -10, 2, 2, -1, 5, 4, 30, 26, 26, 12, -14, -19, -22, -22, -5, 5, 12, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [22, 71]");
            expectedResult.add("\n\tLPA : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, -5, -22, -22, -18, -16, -12, -19, -11, -14, -7, -1, -10, -13, -10, 0, -4, -15, -9, -18, -11, -11, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [22, 43]");
            expectedResult.add("\n\tLPA : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, -5, -22, -22, -18, -16, -12, -19, -11, -14, -7, -1, -10, -13, -10, 0, -4, -15, -9, -18, -11, -11, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [45, 71]");
            expectedResult.add("\nQS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, -5, -22, -22, -18, -16, -12, -19, -11, -14, -7, -1, -10, -13, -10, 0, -4, -15, -9, -18, -11, -11, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [22, 43]");
            expectedResult.add("\nSS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -17, -5, -22, -22, -18, -16, -12, -19, -11, -14, -7, -1, -10, -13, -10, 0, -4, -15, -9, -18, -11, -11, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [22, 43]");
            expectedResult.add("\nQS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -22, -22, -19, -18, -18, -17, -16, -15, -14, -13, -12, -11, -11, -11, -10, -10, -9, -7, -5, -4, -1, 0, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [45, 71]");
            expectedResult.add("\nSS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -22, -22, -19, -18, -18, -17, -16, -15, -14, -13, -12, -11, -11, -11, -10, -10, -9, -7, -5, -4, -1, 0, 1, 26, 8, 12, 9, 15, 28, 6, 23, 30, 2, 34, 2, 2, 12, 5, 4, 30, 26, 26, 12, 13, 27, 29, 22, 30, 5, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [45, 71]");
            expectedResult.add("\nQS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -22, -22, -19, -18, -18, -17, -16, -15, -14, -13, -12, -11, -11, -11, -10, -10, -9, -7, -5, -4, -1, 0, 1, 2, 2, 2, 4, 5, 5, 6, 8, 9, 12, 12, 12, 13, 15, 22, 23, 26, 26, 26, 27, 28, 29, 30, 30, 30, 34, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [73, 80]");
            expectedResult.add("\nSS : [-50, -50, -49, -49, -49, -47, -44, -42, -41, -41, -39, -39, -38, -38, -36, -35, -32, -30, -27, -27, -23, -23, -22, -22, -19, -18, -18, -17, -16, -15, -14, -13, -12, -11, -11, -11, -10, -10, -9, -7, -5, -4, -1, 0, 1, 2, 2, 2, 4, 5, 5, 6, 8, 9, 12, 12, 12, 13, 15, 22, 23, 26, 26, 26, 27, 28, 29, 30, 30, 30, 34, 35, 35, 40, 48, 36, 42, 45, 42, 49, 36] in [73, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF MEDIAN FRONT (Elements to be considered = 3)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedMedianPivotFront3() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotFront(3), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{46, -32, 12, 21, 21, -26, 22, -11, 6, 22, -37, -39, -41, -26, 23, -49, -20, -4, 8, 10, 30, 6, -23, -44, 44, 44, -8, -37, 49, 7, 26, 21, -16, 7, 33, -44, -19, -16, 9, -28, -32, 3, -4, -46, 18, 24, -17, -35, 40, 0, -23, -1, -23, -4, 34, -27};
        sortedArray = new int[]{-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 18, 21, 21, 21, 22, 22, 23, 24, 26, 30, 33, 34, 40, 44, 44, 46, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [46, -32, 12, 21, 21, -26, 22, -11, 6, 22, -37, -39, -41, -26, 23, -49, -20, -4, 8, 10, 30, 6, -23, -44, 44, 44, -8, -37, 49, 7, 26, 21, -16, 7, 33, -44, -19, -16, 9, -28, -32, 3, -4, -46, 18, 24, -17, -35, 40, 0, -23, -1, -23, -4, 34, -27] in [0, 55]");
            expectedResult.add("\n\tLPA : [-4, -32, -27, -23, -1, -26, -23, -11, 6, 0, -37, -39, -41, -26, -35, -49, -20, -4, 8, 10, -17, 6, -23, -44, -46, -4, -8, -37, 3, 7, -32, -28, -16, 7, 9, -44, -19, -16, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [0, 37]");
            expectedResult.add("\n\tLPA : [-4, -32, -27, -23, -1, -26, -23, -11, 6, 0, -37, -39, -41, -26, -35, -49, -20, -4, 8, 10, -17, 6, -23, -44, -46, -4, -8, -37, 3, 7, -32, -28, -16, 7, 9, -44, -19, -16, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [39, 55]");
            expectedResult.add("\nQS : [-4, -32, -27, -23, -1, -26, -23, -11, 6, 0, -37, -39, -41, -26, -35, -49, -20, -4, 8, 10, -17, 6, -23, -44, -46, -4, -8, -37, 3, 7, -32, -28, -16, 7, 9, -44, -19, -16, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [0, 37]");
            expectedResult.add("\n\tLPA : [-44, -32, -28, -32, -37, -46, -44, -49, -35, -41, -37, -39, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [0, 11]");
            expectedResult.add("\n\tLPA : [-44, -32, -28, -32, -37, -46, -44, -49, -35, -41, -37, -39, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [13, 37]");
            expectedResult.add("\nQS : [-44, -32, -28, -32, -37, -46, -44, -49, -35, -41, -37, -39, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [0, 11]");
            expectedResult.add("\nSS : [-44, -32, -28, -32, -37, -46, -44, -49, -35, -41, -37, -39, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [0, 11]");
            expectedResult.add("\nQS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [13, 37]");
            expectedResult.add("\nSS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, 6, -11, -20, -4, 8, 10, -17, 6, -23, -23, -26, -4, -8, -1, 3, 7, -23, -16, -16, 7, 9, -4, -19, 0, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [13, 37]");
            expectedResult.add("\nQS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [39, 55]");
            expectedResult.add("\nSS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 21, 26, 49, 44, 44, 18, 24, 30, 23, 40, 22, 22, 21, 21, 46, 34, 33] in [39, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-47, 9, -34, -12, -40, -17, -34, -38, 17, -28, 44, -32, 19, -12, -26, -22, -38, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -43, 12, 33, 34, -22, 33, 22, -12, 23, -12, -44, 40, -47, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, -42, 27, 49, -12, 36, 5, 26};
        sortedArray = new int[]{-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 17, 17, 19, 22, 23, 25, 26, 27, 31, 32, 33, 33, 34, 36, 36, 37, 39, 40, 42, 44, 44, 44, 47, 47, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-47, 9, -34, -12, -40, -17, -34, -38, 17, -28, 44, -32, 19, -12, -26, -22, -38, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -43, 12, 33, 34, -22, 33, 22, -12, 23, -12, -44, 40, -47, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, -42, 27, 49, -12, 36, 5, 26] in [0, 60]");
            expectedResult.add("\n\tLPA : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [9, 60]");
            expectedResult.add("\nQS : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\nSS : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [9, 60]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, 19, -12, -26, -22, 17, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 44] in [9, 10]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, 19, -12, -26, -22, 17, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 44] in [12, 60]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, 19, -12, -26, -22, 17, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 44] in [9, 10]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, 19, -12, -26, -22, 17, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 44] in [9, 10]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, 19, -12, -26, -22, 17, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 44] in [12, 60]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -12, -27, -26, -22, -12, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 44, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 19, 36, 5, 4] in [12, 23]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -12, -27, -26, -22, -12, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 44, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 19, 36, 5, 4] in [25, 60]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -12, -27, -26, -22, -12, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 44, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 19, 36, 5, 4] in [12, 23]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -12, -27, -26, -22, -12, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 44, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 19, 36, 5, 4] in [12, 23]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 44, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 19, 36, 5, 4] in [25, 60]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [25, 34]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [36, 60]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [25, 34]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [25, 34]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [36, 60]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 22, 36, 23, 44, 17, 40, 26, 44, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 19, 36, 39, 33] in [36, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-21, 8, -20, 19, 25, 2, 33, -22, -4, -34, 24, 3, -37, 9, -18, -13, -42, 41, 19, -14, 14, -2, -42, -28, -46, -10, -6, -23, -43, -34, 47, 17, -34, 0, -15, 18, 5, -28, 13, -11, 9, 47, 43, -23, 19, -26, -28, 24, 37, 47, 10, 12, 33, -20, 33, -38, -8, -47, -27, 33, -13, -39, 22, 5, 37, -20};
        sortedArray = new int[]{-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 9, 10, 12, 13, 14, 17, 18, 19, 19, 19, 22, 24, 24, 25, 33, 33, 33, 33, 37, 37, 41, 43, 47, 47, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-21, 8, -20, 19, 25, 2, 33, -22, -4, -34, 24, 3, -37, 9, -18, -13, -42, 41, 19, -14, 14, -2, -42, -28, -46, -10, -6, -23, -43, -34, 47, 17, -34, 0, -15, 18, 5, -28, 13, -11, 9, 47, 43, -23, 19, -26, -28, 24, 37, 47, 10, 12, 33, -20, 33, -38, -8, -47, -27, 33, -13, -39, 22, 5, 37, -20] in [0, 65]");
            expectedResult.add("\n\tLPA : [-21, -39, -27, -47, -38, -20, -28, -22, -26, -34, -23, -28, -37, -34, -34, -43, -42, -23, -46, -28, -42, -20, 14, -14, 19, -10, -6, 41, -13, -18, 47, 17, 9, 0, -15, 18, 5, 3, 13, -11, 9, 47, 43, 24, 19, -4, 33, 24, 37, 47, 10, 12, 33, 2, 33, 25, -8, 19, -20, 33, -13, 8, 22, 5, 37, -2] in [0, 20]");
            expectedResult.add("\n\tLPA : [-21, -39, -27, -47, -38, -20, -28, -22, -26, -34, -23, -28, -37, -34, -34, -43, -42, -23, -46, -28, -42, -20, 14, -14, 19, -10, -6, 41, -13, -18, 47, 17, 9, 0, -15, 18, 5, 3, 13, -11, 9, 47, 43, 24, 19, -4, 33, 24, 37, 47, 10, 12, 33, 2, 33, 25, -8, 19, -20, 33, -13, 8, 22, 5, 37, -2] in [22, 65]");
            expectedResult.add("\nQS : [-21, -39, -27, -47, -38, -20, -28, -22, -26, -34, -23, -28, -37, -34, -34, -43, -42, -23, -46, -28, -42, -20, 14, -14, 19, -10, -6, 41, -13, -18, 47, 17, 9, 0, -15, 18, 5, 3, 13, -11, 9, 47, 43, 24, 19, -4, 33, 24, 37, 47, 10, 12, 33, 2, 33, 25, -8, 19, -20, 33, -13, 8, 22, 5, 37, -2] in [0, 20]");
            expectedResult.add("\nSS : [-21, -39, -27, -47, -38, -20, -28, -22, -26, -34, -23, -28, -37, -34, -34, -43, -42, -23, -46, -28, -42, -20, 14, -14, 19, -10, -6, 41, -13, -18, 47, 17, 9, 0, -15, 18, 5, 3, 13, -11, 9, 47, 43, 24, 19, -4, 33, 24, 37, 47, 10, 12, 33, 2, 33, 25, -8, 19, -20, 33, -13, 8, 22, 5, 37, -2] in [0, 20]");
            expectedResult.add("\nQS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, 14, -14, 19, -10, -6, 41, -13, -18, 47, 17, 9, 0, -15, 18, 5, 3, 13, -11, 9, 47, 43, 24, 19, -4, 33, 24, 37, 47, 10, 12, 33, 2, 33, 25, -8, 19, -20, 33, -13, 8, 22, 5, 37, -2] in [22, 65]");
            expectedResult.add("\n\tLPA : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -2, -14, 5, -10, -6, 8, -13, -18, -13, -20, 9, 0, -15, -8, 5, 3, 13, -11, 9, 2, 12, 10, -4, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [22, 44]");
            expectedResult.add("\n\tLPA : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -2, -14, 5, -10, -6, 8, -13, -18, -13, -20, 9, 0, -15, -8, 5, 3, 13, -11, 9, 2, 12, 10, -4, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [46, 65]");
            expectedResult.add("\nQS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -2, -14, 5, -10, -6, 8, -13, -18, -13, -20, 9, 0, -15, -8, 5, 3, 13, -11, 9, 2, 12, 10, -4, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [22, 44]");
            expectedResult.add("\nSS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -2, -14, 5, -10, -6, 8, -13, -18, -13, -20, 9, 0, -15, -8, 5, 3, 13, -11, 9, 2, 12, 10, -4, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [22, 44]");
            expectedResult.add("\nQS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 9, 10, 12, 13, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [46, 65]");
            expectedResult.add("\nSS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 9, 10, 12, 13, 14, 33, 24, 37, 47, 24, 43, 33, 47, 33, 25, 18, 19, 17, 33, 47, 41, 22, 19, 37, 19] in [46, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-44, -40, -5, 31, -47, -21, -43, 41, 32, -50, -9, 22, -13, 25, -8, -20, -23, -38, -22, -43, 26, 28, -29, -20, -44, 27, 9, 8, -39, -37, 14, 42, -9, -40, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, -46, -15, -40, -18, 5, 15, -47, -10, -8, 38, 47, 34, -50, -49, -50, 40, 12, 10, 26, 1, 47, 37, -15};
        sortedArray = new int[]{-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 25, 26, 26, 26, 27, 28, 31, 31, 32, 34, 37, 38, 40, 41, 42, 47, 47, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-44, -40, -5, 31, -47, -21, -43, 41, 32, -50, -9, 22, -13, 25, -8, -20, -23, -38, -22, -43, 26, 28, -29, -20, -44, 27, 9, 8, -39, -37, 14, 42, -9, -40, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, -46, -15, -40, -18, 5, 15, -47, -10, -8, 38, 47, 34, -50, -49, -50, 40, 12, 10, 26, 1, 47, 37, -15] in [0, 70]");
            expectedResult.add("\n\tLPA : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\n\tLPA : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [14, 70]");
            expectedResult.add("\nQS : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\nSS : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [14, 70]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -21, -27, -23, -38, -22, -26, -39, -20, -29, -34, -37, -39, -20, 8, 27, 22, 14, 42, -9, -9, -20, -9, 28, 3, 13, -11, 10, 26, 12, 26, -13, 25, 48, 31, 32, -15, 41, -18, 5, 15, -8, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 9] in [14, 25]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -21, -27, -23, -38, -22, -26, -39, -20, -29, -34, -37, -39, -20, 8, 27, 22, 14, 42, -9, -9, -20, -9, 28, 3, 13, -11, 10, 26, 12, 26, -13, 25, 48, 31, 32, -15, 41, -18, 5, 15, -8, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 9] in [27, 70]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -21, -27, -23, -38, -22, -26, -39, -20, -29, -34, -37, -39, -20, 8, 27, 22, 14, 42, -9, -9, -20, -9, 28, 3, 13, -11, 10, 26, 12, 26, -13, 25, 48, 31, 32, -15, 41, -18, 5, 15, -8, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 9] in [14, 25]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -21, -27, -23, -38, -22, -26, -39, -20, -29, -34, -37, -39, -20, 8, 27, 22, 14, 42, -9, -9, -20, -9, 28, 3, 13, -11, 10, 26, 12, 26, -13, 25, 48, 31, 32, -15, 41, -18, 5, 15, -8, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 9] in [14, 25]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, 8, 27, 22, 14, 42, -9, -9, -20, -9, 28, 3, 13, -11, 10, 26, 12, 26, -13, 25, 48, 31, 32, -15, 41, -18, 5, 15, -8, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 9] in [27, 70]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, 8, 1, 9, 14, 10, -9, -9, -20, -9, 12, 3, 13, -11, 10, -15, 12, -5, -13, -8, -10, -8, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [27, 51]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, 8, 1, 9, 14, 10, -9, -9, -20, -9, 12, 3, 13, -11, 10, -15, 12, -5, -13, -8, -10, -8, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [53, 70]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, 8, 1, 9, 14, 10, -9, -9, -20, -9, 12, 3, 13, -11, 10, -15, 12, -5, -13, -8, -10, -8, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [27, 51]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, 8, 1, 9, 14, 10, -9, -9, -20, -9, 12, 3, 13, -11, 10, -15, 12, -5, -13, -8, -10, -8, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [27, 51]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [53, 70]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 26, 40, 28, 42, 26, 27, 47, 37, 41] in [53, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{35, -21, 25, -24, 21, -46, 1, -34, 37, 31, 3, -8, -14, 29, 14, -19, 13, 8, 38, 42, 10, -18, -4, -19, 35, 38, 17, 32, 44, -14, -29, -27, -25, -13, 31, 14, -40, 47, 44, 24, 2, -13, 9, 0, -35, -37, 42, -50, 7, -25, 3, -3, -11, 8, -9, -33, -49, 21, 19, -12, -12, 0, 30, -7, -19, 28, 28, -41, 45, -48, -5, -9, -34, 26, -16, 44};
        sortedArray = new int[]{-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 25, 26, 28, 28, 29, 30, 31, 31, 32, 35, 35, 37, 38, 38, 42, 42, 44, 44, 44, 45, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [35, -21, 25, -24, 21, -46, 1, -34, 37, 31, 3, -8, -14, 29, 14, -19, 13, 8, 38, 42, 10, -18, -4, -19, 35, 38, 17, 32, 44, -14, -29, -27, -25, -13, 31, 14, -40, 47, 44, 24, 2, -13, 9, 0, -35, -37, 42, -50, 7, -25, 3, -3, -11, 8, -9, -33, -49, 21, 19, -12, -12, 0, 30, -7, -19, 28, 28, -41, 45, -48, -5, -9, -34, 26, -16, 44] in [0, 75]");
            expectedResult.add("\n\tLPA : [-16, -21, -34, -24, 21, -46, 1, -34, -9, -5, 3, -8, -14, -48, 14, -19, 13, 8, -41, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, -29, -27, -25, -13, 19, 14, -40, 21, -49, 24, 2, -13, 9, 0, -35, -37, -33, -50, 7, -25, 3, -3, -11, 8, -9, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [0, 54]");
            expectedResult.add("\n\tLPA : [-16, -21, -34, -24, 21, -46, 1, -34, -9, -5, 3, -8, -14, -48, 14, -19, 13, 8, -41, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, -29, -27, -25, -13, 19, 14, -40, 21, -49, 24, 2, -13, 9, 0, -35, -37, -33, -50, 7, -25, 3, -3, -11, 8, -9, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [56, 75]");
            expectedResult.add("\nQS : [-16, -21, -34, -24, 21, -46, 1, -34, -9, -5, 3, -8, -14, -48, 14, -19, 13, 8, -41, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, -29, -27, -25, -13, 19, 14, -40, 21, -49, 24, 2, -13, 9, 0, -35, -37, -33, -50, 7, -25, 3, -3, -11, 8, -9, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [0, 54]");
            expectedResult.add("\n\tLPA : [-25, -50, -34, -24, -33, -46, -37, -34, -35, -49, -40, -25, -27, -48, -29, -41, -21, 8, -19, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [0, 15]");
            expectedResult.add("\n\tLPA : [-25, -50, -34, -24, -33, -46, -37, -34, -35, -49, -40, -25, -27, -48, -29, -41, -21, 8, -19, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [17, 54]");
            expectedResult.add("\nQS : [-25, -50, -34, -24, -33, -46, -37, -34, -35, -49, -40, -25, -27, -48, -29, -41, -21, 8, -19, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [0, 15]");
            expectedResult.add("\nSS : [-25, -50, -34, -24, -33, -46, -37, -34, -35, -49, -40, -25, -27, -48, -29, -41, -21, 8, -19, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [0, 15]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, 8, -19, -19, 10, -18, -4, -19, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [17, 54]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, 10, -18, -4, 8, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [17, 18]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, 10, -18, -4, 8, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [20, 54]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, 10, -18, -4, 8, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [17, 18]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, 10, -18, -4, 8, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [17, 18]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, 10, -18, -4, 8, -7, 0, 17, -12, -12, -14, 14, -14, -8, -13, 19, 14, 3, 21, -5, 24, 2, -13, 9, 0, -9, 1, 21, -9, 7, -16, 3, -3, -11, 8, 13, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [20, 54]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -11, -18, -16, -9, -7, -9, -13, -12, -12, -14, -5, -14, -8, -13, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [20, 33]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -11, -18, -16, -9, -7, -9, -13, -12, -12, -14, -5, -14, -8, -13, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [35, 54]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -11, -18, -16, -9, -7, -9, -13, -12, -12, -14, -5, -14, -8, -13, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [20, 33]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -11, -18, -16, -9, -7, -9, -13, -12, -12, -14, -5, -14, -8, -13, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [20, 33]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [35, 54]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, 14, 3, 21, 14, 24, 2, 17, 9, 0, 0, 1, 21, 8, 7, 13, 3, -3, 10, 8, 19, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [35, 54]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [56, 75]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 25, 44, 47, 31, 44, 32, 38, 30, 35, 42, 28, 28, 38, 45, 29, 31, 37, 44, 26, 35, 42] in [56, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-49, 14, 23, 25, 25, 35, 5, -24, -43, 29, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, 33, 12, -2, 15, -43, 16, -32, -49, 43, 39, 32, -44, 49, 37, 9, -24, -43, 30, 25, -14, -12, 3, 5, -19, 34, -35, 31, 28, -37, 25, -20, -37, -42, -35, -20, 29, 10, -37, -27, 42, -39, 40, 48, -28, -15, 16, 28, 3, 27, -16, -7, -2, 48};
        sortedArray = new int[]{-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 19, 23, 25, 25, 25, 25, 27, 28, 28, 29, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 48, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-49, 14, 23, 25, 25, 35, 5, -24, -43, 29, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, 33, 12, -2, 15, -43, 16, -32, -49, 43, 39, 32, -44, 49, 37, 9, -24, -43, 30, 25, -14, -12, 3, 5, -19, 34, -35, 31, 28, -37, 25, -20, -37, -42, -35, -20, 29, 10, -37, -27, 42, -39, 40, 48, -28, -15, 16, 28, 3, 27, -16, -7, -2, 48] in [0, 80]");
            expectedResult.add("\n\tLPA : [-49, -2, -7, -16, 3, -15, 5, -24, -43, -28, 7, -20, 4, 5, 11, -40, -10, -18, -39, -27, -40, -20, -4, -46, 13, 2, -34, -27, -37, 12, -2, 10, -43, -20, -32, -49, -35, -42, -37, -44, -20, -37, 9, -24, -43, -35, -19, -14, -12, 3, 5, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 50]");
            expectedResult.add("\n\tLPA : [-49, -2, -7, -16, 3, -15, 5, -24, -43, -28, 7, -20, 4, 5, 11, -40, -10, -18, -39, -27, -40, -20, -4, -46, 13, 2, -34, -27, -37, 12, -2, 10, -43, -20, -32, -49, -35, -42, -37, -44, -20, -37, 9, -24, -43, -35, -19, -14, -12, 3, 5, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [52, 80]");
            expectedResult.add("\nQS : [-49, -2, -7, -16, 3, -15, 5, -24, -43, -28, 7, -20, 4, 5, 11, -40, -10, -18, -39, -27, -40, -20, -4, -46, 13, 2, -34, -27, -37, 12, -2, 10, -43, -20, -32, -49, -35, -42, -37, -44, -20, -37, 9, -24, -43, -35, -19, -14, -12, 3, 5, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 50]");
            expectedResult.add("\n\tLPA : [-49, -12, -14, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -10, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -32, -43, -20, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 33]");
            expectedResult.add("\n\tLPA : [-49, -12, -14, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -10, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -32, -43, -20, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [35, 50]");
            expectedResult.add("\nQS : [-49, -12, -14, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -10, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -32, -43, -20, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 33]");
            expectedResult.add("\n\tLPA : [-49, -43, -20, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 30]");
            expectedResult.add("\n\tLPA : [-49, -43, -20, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [32, 33]");
            expectedResult.add("\nQS : [-49, -43, -20, -16, -19, -15, -35, -24, -43, -28, -43, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -44, -46, -37, -42, -34, -27, -37, -35, -49, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 30]");
            expectedResult.add("\n\tLPA : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 5]");
            expectedResult.add("\n\tLPA : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [7, 30]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 5]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [0, 5]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [7, 30]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -24, -15, -28, -19, -20, -24, -37, -20, -40, -32, -18, -39, -27, -40, -20, -16, -20, -37, -42, -34, -27, -37, -35, -35, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [7, 30]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [32, 33]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [32, 33]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [35, 50]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -2, 12, 2, 13, -4, 11, 5, 9, 4, 7, 5, 3, 5, -2, 3, 10, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [35, 50]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [52, 80]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 34, 30, 31, 28, 37, 25, 49, 32, 39, 43, 16, 29, 15, 33, 19, 42, 16, 40, 48, 29, 35, 16, 28, 25, 27, 25, 23, 48, 25] in [52, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF MEDIAN FRONT (Elements to be considered = 5)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedMedianPivotFront5() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotFront(5), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{46, -32, 12, 21, 21, -26, 22, -11, 6, 22, -37, -39, -41, -26, 23, -49, -20, -4, 8, 10, 30, 6, -23, -44, 44, 44, -8, -37, 49, 7, 26, 21, -16, 7, 33, -44, -19, -16, 9, -28, -32, 3, -4, -46, 18, 24, -17, -35, 40, 0, -23, -1, -23, -4, 34, -27};
        sortedArray = new int[]{-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 18, 21, 21, 21, 22, 22, 23, 24, 26, 30, 33, 34, 40, 44, 44, 46, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [46, -32, 12, 21, 21, -26, 22, -11, 6, 22, -37, -39, -41, -26, 23, -49, -20, -4, 8, 10, 30, 6, -23, -44, 44, 44, -8, -37, 49, 7, 26, 21, -16, 7, 33, -44, -19, -16, 9, -28, -32, 3, -4, -46, 18, 24, -17, -35, 40, 0, -23, -1, -23, -4, 34, -27] in [0, 55]");
            expectedResult.add("\n\tLPA : [-4, -32, 12, -27, -23, -26, -1, -11, 6, -23, -37, -39, -41, -26, 0, -49, -20, -4, 8, 10, -35, 6, -23, -44, -17, 18, -8, -37, -46, 7, -4, 3, -16, 7, -32, -44, -19, -16, 9, -28, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [0, 39]");
            expectedResult.add("\n\tLPA : [-4, -32, 12, -27, -23, -26, -1, -11, 6, -23, -37, -39, -41, -26, 0, -49, -20, -4, 8, 10, -35, 6, -23, -44, -17, 18, -8, -37, -46, 7, -4, 3, -16, 7, -32, -44, -19, -16, 9, -28, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [41, 55]");
            expectedResult.add("\nQS : [-4, -32, 12, -27, -23, -26, -1, -11, 6, -23, -37, -39, -41, -26, 0, -49, -20, -4, 8, 10, -35, 6, -23, -44, -17, 18, -8, -37, -46, 7, -4, 3, -16, 7, -32, -44, -19, -16, 9, -28, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [0, 39]");
            expectedResult.add("\n\tLPA : [-44, -32, -32, -27, -28, -26, -46, -37, -44, -23, -37, -39, -41, -26, -35, -49, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [0, 15]");
            expectedResult.add("\n\tLPA : [-44, -32, -32, -27, -28, -26, -46, -37, -44, -23, -37, -39, -41, -26, -35, -49, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [17, 39]");
            expectedResult.add("\nQS : [-44, -32, -32, -27, -28, -26, -46, -37, -44, -23, -37, -39, -41, -26, -35, -49, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [0, 15]");
            expectedResult.add("\nSS : [-44, -32, -32, -27, -28, -26, -46, -37, -44, -23, -37, -39, -41, -26, -35, -49, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [0, 15]");
            expectedResult.add("\nQS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [17, 39]");
            expectedResult.add("\nSS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -4, 8, 10, 0, 6, -23, 6, -17, 18, -8, -11, -1, 7, -4, 3, -16, 7, 12, -4, -19, -16, 9, -20, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [17, 39]");
            expectedResult.add("\nQS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 18, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [41, 55]");
            expectedResult.add("\nSS : [-49, -46, -44, -44, -41, -39, -37, -37, -35, -32, -32, -28, -27, -26, -26, -23, -23, -23, -20, -19, -17, -16, -16, -11, -8, -4, -4, -4, -1, 0, 3, 6, 6, 7, 7, 8, 9, 10, 12, 18, 21, 21, 26, 49, 44, 24, 44, 30, 40, 23, 22, 22, 21, 46, 34, 33] in [41, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-47, 9, -34, -12, -40, -17, -34, -38, 17, -28, 44, -32, 19, -12, -26, -22, -38, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -43, 12, 33, 34, -22, 33, 22, -12, 23, -12, -44, 40, -47, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, -42, 27, 49, -12, 36, 5, 26};
        sortedArray = new int[]{-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 17, 17, 19, 22, 23, 25, 26, 27, 31, 32, 33, 33, 34, 36, 36, 37, 39, 40, 42, 44, 44, 44, 47, 47, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-47, 9, -34, -12, -40, -17, -34, -38, 17, -28, 44, -32, 19, -12, -26, -22, -38, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -43, 12, 33, 34, -22, 33, 22, -12, 23, -12, -44, 40, -47, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, -42, 27, 49, -12, 36, 5, 26] in [0, 60]");
            expectedResult.add("\n\tLPA : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\n\tLPA : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [9, 60]");
            expectedResult.add("\nQS : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\nSS : [-47, -42, -47, -44, -40, -43, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [0, 7]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, 44, -32, 19, -12, -26, -22, -34, -17, 44, 8, -21, 36, 11, 4, -26, 16, -2, 39, 17, 2, -17, 12, 33, 34, -22, 33, 22, -12, 23, -12, -12, 40, 26, -27, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, -12, 36, 5, 17] in [9, 60]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, -12, -32, -27, -12, -26, -22, -34, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 19, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 44, 36, 5, 4] in [9, 23]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, -12, -32, -27, -12, -26, -22, -34, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 19, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 44, 36, 5, 4] in [25, 60]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, -12, -32, -27, -12, -26, -22, -34, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 19, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 44, 36, 5, 4] in [9, 23]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -28, -12, -32, -27, -12, -26, -22, -34, -17, -12, -12, -21, -22, -17, -26, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 19, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 44, 36, 5, 4] in [9, 23]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 16, -2, 39, 17, 2, 11, 12, 33, 34, 36, 33, 22, 8, 23, 44, 17, 40, 26, 19, 25, 37, 6, 47, 44, 31, 47, 32, -5, 42, 9, 27, 49, 44, 36, 5, 4] in [25, 60]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [25, 34]");
            expectedResult.add("\n\tLPA : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [36, 60]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [25, 34]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, 4, -2, 5, 9, 2, 11, 12, -5, 6, 8, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [25, 34]");
            expectedResult.add("\nQS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [36, 60]");
            expectedResult.add("\nSS : [-47, -47, -44, -43, -42, -40, -38, -38, -34, -34, -32, -28, -27, -26, -26, -22, -22, -21, -17, -17, -12, -12, -12, -12, -12, -5, -2, 2, 4, 5, 6, 8, 9, 11, 12, 16, 22, 36, 23, 44, 17, 40, 26, 19, 25, 37, 34, 47, 44, 31, 47, 32, 33, 42, 17, 27, 49, 44, 36, 39, 33] in [36, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-21, 8, -20, 19, 25, 2, 33, -22, -4, -34, 24, 3, -37, 9, -18, -13, -42, 41, 19, -14, 14, -2, -42, -28, -46, -10, -6, -23, -43, -34, 47, 17, -34, 0, -15, 18, 5, -28, 13, -11, 9, 47, 43, -23, 19, -26, -28, 24, 37, 47, 10, 12, 33, -20, 33, -38, -8, -47, -27, 33, -13, -39, 22, 5, 37, -20};
        sortedArray = new int[]{-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 9, 10, 12, 13, 14, 17, 18, 19, 19, 19, 22, 24, 24, 25, 33, 33, 33, 33, 37, 37, 41, 43, 47, 47, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-21, 8, -20, 19, 25, 2, 33, -22, -4, -34, 24, 3, -37, 9, -18, -13, -42, 41, 19, -14, 14, -2, -42, -28, -46, -10, -6, -23, -43, -34, 47, 17, -34, 0, -15, 18, 5, -28, 13, -11, 9, 47, 43, -23, 19, -26, -28, 24, 37, 47, 10, 12, 33, -20, 33, -38, -8, -47, -27, 33, -13, -39, 22, 5, 37, -20] in [0, 65]");
            expectedResult.add("\n\tLPA : [-21, -20, -20, 5, -39, 2, -13, -22, -4, -34, -27, 3, -37, -47, -18, -13, -42, -8, -38, -14, -20, -2, -42, -28, -46, -10, -6, -23, -43, -34, -28, -26, -34, 0, -15, -23, 5, -28, -11, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [0, 38]");
            expectedResult.add("\n\tLPA : [-21, -20, -20, 5, -39, 2, -13, -22, -4, -34, -27, 3, -37, -47, -18, -13, -42, -8, -38, -14, -20, -2, -42, -28, -46, -10, -6, -23, -43, -34, -28, -26, -34, 0, -15, -23, 5, -28, -11, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [40, 65]");
            expectedResult.add("\nQS : [-21, -20, -20, 5, -39, 2, -13, -22, -4, -34, -27, 3, -37, -47, -18, -13, -42, -8, -38, -14, -20, -2, -42, -28, -46, -10, -6, -23, -43, -34, -28, -26, -34, 0, -15, -23, 5, -28, -11, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [0, 38]");
            expectedResult.add("\n\tLPA : [-21, -28, -23, -34, -39, -26, -28, -22, -34, -34, -27, -43, -37, -47, -23, -46, -42, -28, -38, -42, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [0, 19]");
            expectedResult.add("\n\tLPA : [-21, -28, -23, -34, -39, -26, -28, -22, -34, -34, -27, -43, -37, -47, -23, -46, -42, -28, -38, -42, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [21, 38]");
            expectedResult.add("\nQS : [-21, -28, -23, -34, -39, -26, -28, -22, -34, -34, -27, -43, -37, -47, -23, -46, -42, -28, -38, -42, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [0, 19]");
            expectedResult.add("\nSS : [-21, -28, -23, -34, -39, -26, -28, -22, -34, -34, -27, -43, -37, -47, -23, -46, -42, -28, -38, -42, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [0, 19]");
            expectedResult.add("\nQS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [21, 38]");
            expectedResult.add("\nSS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -2, -14, -8, -13, -10, -6, -18, 3, -4, -13, 2, 5, 0, -15, -20, 5, -11, -20, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [21, 38]");
            expectedResult.add("\nQS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [40, 65]");
            expectedResult.add("\nSS : [-47, -46, -43, -42, -42, -39, -38, -37, -34, -34, -34, -28, -28, -28, -27, -26, -23, -23, -22, -21, -20, -20, -20, -18, -15, -14, -13, -13, -11, -10, -8, -6, -4, -2, 0, 2, 3, 5, 5, 8, 9, 47, 43, 18, 19, 17, 47, 24, 37, 47, 10, 12, 33, 14, 33, 19, 41, 9, 24, 33, 33, 25, 22, 19, 37, 13] in [40, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-44, -40, -5, 31, -47, -21, -43, 41, 32, -50, -9, 22, -13, 25, -8, -20, -23, -38, -22, -43, 26, 28, -29, -20, -44, 27, 9, 8, -39, -37, 14, 42, -9, -40, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, -46, -15, -40, -18, 5, 15, -47, -10, -8, 38, 47, 34, -50, -49, -50, 40, 12, 10, 26, 1, 47, 37, -15};
        sortedArray = new int[]{-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 25, 26, 26, 26, 27, 28, 31, 31, 32, 34, 37, 38, 40, 41, 42, 47, 47, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-44, -40, -5, 31, -47, -21, -43, 41, 32, -50, -9, 22, -13, 25, -8, -20, -23, -38, -22, -43, 26, 28, -29, -20, -44, 27, 9, 8, -39, -37, 14, 42, -9, -40, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, -46, -15, -40, -18, 5, 15, -47, -10, -8, 38, 47, 34, -50, -49, -50, 40, 12, 10, 26, 1, 47, 37, -15] in [0, 70]");
            expectedResult.add("\n\tLPA : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\n\tLPA : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [14, 70]");
            expectedResult.add("\nQS : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\nSS : [-44, -50, -49, -50, -47, -47, -43, -40, -46, -50, -40, -44, -43, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [0, 12]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -8, -20, -23, -38, -22, -13, 26, 28, -29, -20, 22, 27, 9, 8, -39, -37, 14, 42, -9, -9, -34, -9, -20, 3, 13, -11, 10, 26, 12, -39, -26, -27, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, 25] in [14, 70]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -27, -26, -23, -38, -39, -34, -37, -39, -29, -22, 22, 27, 9, 8, 28, 26, 14, 42, -9, -9, -13, -9, -20, 3, 13, -11, 10, 26, 12, 25, -20, -8, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, -20] in [14, 22]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -27, -26, -23, -38, -39, -34, -37, -39, -29, -22, 22, 27, 9, 8, 28, 26, 14, 42, -9, -9, -13, -9, -20, 3, 13, -11, 10, 26, 12, 25, -20, -8, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, -20] in [24, 70]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -27, -26, -23, -38, -39, -34, -37, -39, -29, -22, 22, 27, 9, 8, 28, 26, 14, 42, -9, -9, -13, -9, -20, 3, 13, -11, 10, 26, 12, 25, -20, -8, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, -20] in [14, 22]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -27, -26, -23, -38, -39, -34, -37, -39, -29, -22, 22, 27, 9, 8, 28, 26, 14, 42, -9, -9, -13, -9, -20, 3, 13, -11, 10, 26, 12, 25, -20, -8, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, -20] in [14, 22]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, 22, 27, 9, 8, 28, 26, 14, 42, -9, -9, -13, -9, -20, 3, 13, -11, 10, 26, 12, 25, -20, -8, 48, 31, 32, -15, 41, -18, 5, 15, -21, -10, -8, 38, 47, 34, 31, -5, -15, 40, 12, 10, 26, 1, 47, 37, -20] in [24, 70]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -20, 1, 9, 8, 10, 12, 14, -15, -9, -9, -13, -9, -20, 3, 13, -11, 10, -5, 12, -8, -20, -8, -10, -21, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [24, 51]");
            expectedResult.add("\n\tLPA : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -20, 1, 9, 8, 10, 12, 14, -15, -9, -9, -13, -9, -20, 3, 13, -11, 10, -5, 12, -8, -20, -8, -10, -21, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [53, 70]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -20, 1, 9, 8, 10, 12, 14, -15, -9, -9, -13, -9, -20, 3, 13, -11, 10, -5, 12, -8, -20, -8, -10, -21, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [24, 51]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -20, 1, 9, 8, 10, 12, 14, -15, -9, -9, -13, -9, -20, 3, 13, -11, 10, -5, 12, -8, -20, -8, -10, -21, 15, -15, 5, -18, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [24, 51]");
            expectedResult.add("\nQS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [53, 70]");
            expectedResult.add("\nSS : [-50, -50, -50, -49, -47, -47, -46, -44, -44, -43, -43, -40, -40, -40, -39, -39, -38, -37, -34, -29, -27, -26, -23, -22, -21, -20, -20, -20, -18, -15, -15, -13, -11, -10, -9, -9, -9, -8, -8, -5, 1, 3, 5, 8, 9, 10, 10, 12, 12, 13, 14, 15, 22, 32, 31, 48, 25, 38, 47, 34, 31, 26, 42, 40, 26, 28, 26, 27, 47, 37, 41] in [53, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{35, -21, 25, -24, 21, -46, 1, -34, 37, 31, 3, -8, -14, 29, 14, -19, 13, 8, 38, 42, 10, -18, -4, -19, 35, 38, 17, 32, 44, -14, -29, -27, -25, -13, 31, 14, -40, 47, 44, 24, 2, -13, 9, 0, -35, -37, 42, -50, 7, -25, 3, -3, -11, 8, -9, -33, -49, 21, 19, -12, -12, 0, 30, -7, -19, 28, 28, -41, 45, -48, -5, -9, -34, 26, -16, 44};
        sortedArray = new int[]{-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 25, 26, 28, 28, 29, 30, 31, 31, 32, 35, 35, 37, 38, 38, 42, 42, 44, 44, 44, 45, 47};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [35, -21, 25, -24, 21, -46, 1, -34, 37, 31, 3, -8, -14, 29, 14, -19, 13, 8, 38, 42, 10, -18, -4, -19, 35, 38, 17, 32, 44, -14, -29, -27, -25, -13, 31, 14, -40, 47, 44, 24, 2, -13, 9, 0, -35, -37, 42, -50, 7, -25, 3, -3, -11, 8, -9, -33, -49, 21, 19, -12, -12, 0, 30, -7, -19, 28, 28, -41, 45, -48, -5, -9, -34, 26, -16, 44] in [0, 75]");
            expectedResult.add("\n\tLPA : [-16, -21, -34, -24, -9, -46, 1, -34, -5, -48, 3, -8, -14, -41, 14, -19, 13, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -29, -27, -25, -13, 21, 14, -40, -49, -33, -9, 2, -13, 9, 0, -35, -37, 8, -50, 7, -25, 3, -3, -11, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [0, 52]");
            expectedResult.add("\n\tLPA : [-16, -21, -34, -24, -9, -46, 1, -34, -5, -48, 3, -8, -14, -41, 14, -19, 13, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -29, -27, -25, -13, 21, 14, -40, -49, -33, -9, 2, -13, 9, 0, -35, -37, 8, -50, 7, -25, 3, -3, -11, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [54, 75]");
            expectedResult.add("\nQS : [-16, -21, -34, -24, -9, -46, 1, -34, -5, -48, 3, -8, -14, -41, 14, -19, 13, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -29, -27, -25, -13, 21, 14, -40, -49, -33, -9, 2, -13, 9, 0, -35, -37, 8, -50, 7, -25, 3, -3, -11, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [0, 52]");
            expectedResult.add("\n\tLPA : [-25, -50, -34, -24, -37, -46, -35, -34, -33, -48, -49, -40, -25, -41, -27, -29, -21, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -19, 14, -14, -13, 21, 14, -8, 3, -5, -9, 2, -13, 9, 0, 1, -9, 8, -11, 7, -16, 3, -3, 13, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [0, 15]");
            expectedResult.add("\n\tLPA : [-25, -50, -34, -24, -37, -46, -35, -34, -33, -48, -49, -40, -25, -41, -27, -29, -21, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -19, 14, -14, -13, 21, 14, -8, 3, -5, -9, 2, -13, 9, 0, 1, -9, 8, -11, 7, -16, 3, -3, 13, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [17, 52]");
            expectedResult.add("\nQS : [-25, -50, -34, -24, -37, -46, -35, -34, -33, -48, -49, -40, -25, -41, -27, -29, -21, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -19, 14, -14, -13, 21, 14, -8, 3, -5, -9, 2, -13, 9, 0, 1, -9, 8, -11, 7, -16, 3, -3, 13, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [0, 15]");
            expectedResult.add("\nSS : [-25, -50, -34, -24, -37, -46, -35, -34, -33, -48, -49, -40, -25, -41, -27, -29, -21, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -19, 14, -14, -13, 21, 14, -8, 3, -5, -9, 2, -13, 9, 0, 1, -9, 8, -11, 7, -16, 3, -3, 13, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [0, 15]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, 8, -19, -7, 10, -18, -4, -19, 0, -12, 17, -12, 19, -14, -19, 14, -14, -13, 21, 14, -8, 3, -5, -9, 2, -13, 9, 0, 1, -9, 8, -11, 7, -16, 3, -3, 13, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [17, 52]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -16, -19, -11, -9, -18, -13, -19, -9, -12, -8, -12, -13, -14, -19, -14, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [17, 31]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -16, -19, -11, -9, -18, -13, -19, -9, -12, -8, -12, -13, -14, -19, -14, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [33, 52]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -16, -19, -11, -9, -18, -13, -19, -9, -12, -8, -12, -13, -14, -19, -14, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [17, 31]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -16, -19, -11, -9, -18, -13, -19, -9, -12, -8, -12, -13, -14, -19, -14, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [17, 31]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [33, 52]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, 19, 21, 14, 17, 3, -5, 0, 2, -4, 9, 0, 1, 10, 8, 13, 7, 8, 3, -3, 14, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [33, 52]");
            expectedResult.add("\nQS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [54, 75]");
            expectedResult.add("\nSS : [-50, -49, -48, -46, -41, -40, -37, -35, -34, -34, -33, -29, -27, -25, -25, -24, -21, -19, -19, -19, -18, -16, -14, -14, -13, -13, -12, -12, -11, -9, -9, -8, -7, -5, -4, -3, 0, 0, 1, 2, 3, 3, 7, 8, 8, 9, 10, 13, 14, 14, 17, 19, 21, 21, 24, 44, 47, 31, 44, 32, 38, 35, 30, 42, 38, 28, 28, 29, 45, 31, 37, 44, 25, 26, 35, 42] in [54, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-49, 14, 23, 25, 25, 35, 5, -24, -43, 29, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, 33, 12, -2, 15, -43, 16, -32, -49, 43, 39, 32, -44, 49, 37, 9, -24, -43, 30, 25, -14, -12, 3, 5, -19, 34, -35, 31, 28, -37, 25, -20, -37, -42, -35, -20, 29, 10, -37, -27, 42, -39, 40, 48, -28, -15, 16, 28, 3, 27, -16, -7, -2, 48};
        sortedArray = new int[]{-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 19, 23, 25, 25, 25, 25, 27, 28, 28, 29, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 42, 43, 48, 48, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-49, 14, 23, 25, 25, 35, 5, -24, -43, 29, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, 33, 12, -2, 15, -43, 16, -32, -49, 43, 39, 32, -44, 49, 37, 9, -24, -43, 30, 25, -14, -12, 3, 5, -19, 34, -35, 31, 28, -37, 25, -20, -37, -42, -35, -20, 29, 10, -37, -27, 42, -39, 40, 48, -28, -15, 16, 28, 3, 27, -16, -7, -2, 48] in [0, 80]");
            expectedResult.add("\n\tLPA : [-49, 14, -2, -7, -16, 3, 5, -24, -43, 16, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, -15, 12, -2, 15, -43, 16, -32, -49, -28, -39, -27, -44, -37, 10, 9, -24, -43, -20, -35, -14, -12, 3, 5, -19, -42, -35, -37, -20, -37, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 56]");
            expectedResult.add("\n\tLPA : [-49, 14, -2, -7, -16, 3, 5, -24, -43, 16, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, -15, 12, -2, 15, -43, 16, -32, -49, -28, -39, -27, -44, -37, 10, 9, -24, -43, -20, -35, -14, -12, 3, 5, -19, -42, -35, -37, -20, -37, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [58, 80]");
            expectedResult.add("\nQS : [-49, 14, -2, -7, -16, 3, 5, -24, -43, 16, 7, -20, 4, 5, 11, -40, -10, -18, 16, -27, -40, -20, -4, -46, 13, 2, -34, 19, -15, 12, -2, 15, -43, 16, -32, -49, -28, -39, -27, -44, -37, 10, 9, -24, -43, -20, -35, -14, -12, 3, 5, -19, -42, -35, -37, -20, -37, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 56]");
            expectedResult.add("\n\tLPA : [-49, -20, -37, -37, -16, -35, -42, -24, -43, -19, -12, -20, -14, -35, -20, -40, -10, -18, -43, -27, -40, -20, -24, -46, -37, -44, -34, -27, -15, -39, -28, -49, -43, -32, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 33]");
            expectedResult.add("\n\tLPA : [-49, -20, -37, -37, -16, -35, -42, -24, -43, -19, -12, -20, -14, -35, -20, -40, -10, -18, -43, -27, -40, -20, -24, -46, -37, -44, -34, -27, -15, -39, -28, -49, -43, -32, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [35, 56]");
            expectedResult.add("\nQS : [-49, -20, -37, -37, -16, -35, -42, -24, -43, -19, -12, -20, -14, -35, -20, -40, -10, -18, -43, -27, -40, -20, -24, -46, -37, -44, -34, -27, -15, -39, -28, -49, -43, -32, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 33]");
            expectedResult.add("\n\tLPA : [-49, -43, -49, -39, -44, -37, -42, -46, -43, -40, -43, -40, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 11]");
            expectedResult.add("\n\tLPA : [-49, -43, -49, -39, -44, -37, -42, -46, -43, -40, -43, -40, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [13, 33]");
            expectedResult.add("\nQS : [-49, -43, -49, -39, -44, -37, -42, -46, -43, -40, -43, -40, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 11]");
            expectedResult.add("\nSS : [-49, -43, -49, -39, -44, -37, -42, -46, -43, -40, -43, -40, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [0, 11]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [13, 33]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -35, -20, -20, -10, -18, -12, -27, -19, -20, -24, -24, -35, -16, -34, -27, -15, -37, -28, -32, -20, -14, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [13, 33]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [35, 56]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, 15, -2, 12, 19, 2, 13, 10, 9, -4, 16, 11, 5, 4, 7, 3, 5, 16, 5, 3, -2, 14, 16, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [35, 56]");
            expectedResult.add("\nQS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 19, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [58, 80]");
            expectedResult.add("\nSS : [-49, -49, -46, -44, -43, -43, -43, -42, -40, -40, -39, -37, -37, -37, -35, -35, -34, -32, -28, -27, -27, -24, -24, -20, -20, -20, -20, -19, -18, -16, -15, -14, -12, -10, -7, -4, -2, -2, 2, 3, 3, 4, 5, 5, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 19, 23, 28, 31, 34, 25, 30, 29, 37, 49, 32, 42, 39, 40, 48, 43, 33, 29, 28, 35, 27, 25, 25, 48, 25] in [58, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());
    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF DISTRIBUTED MEDIAN (Elements to be considered = 3)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedDistributedMedianPivotFront3() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(3), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{21, 11, 5, 18, 5, -33, -8, 9, -36, -31, 31, -25, -13, 21, -32, 39, -35, 42, -23, 29, -43, 15, 48, -21, -15, 39, 45, -2, -8, 8, 44, -7, -34, -39, -1, -14, -11, -43, -23, 45, -4, 28, -44, 24, 0, 1, -36, 1, -49, -27, -23, -33, 24, -40, -30, 47};
        sortedArray = new int[]{-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, -1, 0, 1, 1, 5, 5, 8, 9, 11, 15, 18, 21, 21, 24, 24, 28, 29, 31, 39, 39, 42, 44, 45, 45, 47, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [21, 11, 5, 18, 5, -33, -8, 9, -36, -31, 31, -25, -13, 21, -32, 39, -35, 42, -23, 29, -43, 15, 48, -21, -15, 39, 45, -2, -8, 8, 44, -7, -34, -39, -1, -14, -11, -43, -23, 45, -4, 28, -44, 24, 0, 1, -36, 1, -49, -27, -23, -33, 24, -40, -30, 47] in [0, 55]");
            expectedResult.add("\n\tLPA : [-30, -40, -33, -23, -27, -33, -8, -49, -36, -31, -36, -25, -13, -44, -32, -4, -35, -23, -23, -43, -43, -11, -14, -21, -15, -39, -34, -7, -8, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [0, 28]");
            expectedResult.add("\n\tLPA : [-30, -40, -33, -23, -27, -33, -8, -49, -36, -31, -36, -25, -13, -44, -32, -4, -35, -23, -23, -43, -43, -11, -14, -21, -15, -39, -34, -7, -8, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [30, 55]");
            expectedResult.add("\nQS : [-30, -40, -33, -23, -27, -33, -8, -49, -36, -31, -36, -25, -13, -44, -32, -4, -35, -23, -23, -43, -43, -11, -14, -21, -15, -39, -34, -7, -8, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [0, 28]");
            expectedResult.add("\nSS : [-30, -40, -33, -23, -27, -33, -8, -49, -36, -31, -36, -25, -13, -44, -32, -4, -35, -23, -23, -43, -43, -11, -14, -21, -15, -39, -34, -7, -8, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [0, 28]");
            expectedResult.add("\nQS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [30, 55]");
            expectedResult.add("\nSS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, 44, 47, 45, 39, -1, 48, 15, 29, 42, 45, 39, 28, 21, 24, 0, 1, 31, 1, 9, 5, 18, 5, 24, 11, 21, 8] in [30, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{42, 13, 5, -2, -27, 25, -34, -35, -25, 21, 5, -10, -4, 29, -19, -45, 16, 15, 31, 4, 10, 28, 9, -27, -34, -35, -18, -46, -15, 20, -2, -36, 33, 30, 4, 49, 28, 3, 36, -17, -26, -26, -32, 49, -29, -41, -42, -5, 43, -38, -41, -39, -36, -19, -12, 1, 14, 14, 22, -2, 19};
        sortedArray = new int[]{-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, -2, 1, 3, 4, 4, 5, 5, 9, 10, 13, 14, 14, 15, 16, 19, 20, 21, 22, 25, 28, 28, 29, 30, 31, 33, 36, 42, 43, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [42, 13, 5, -2, -27, 25, -34, -35, -25, 21, 5, -10, -4, 29, -19, -45, 16, 15, 31, 4, 10, 28, 9, -27, -34, -35, -18, -46, -15, 20, -2, -36, 33, 30, 4, 49, 28, 3, 36, -17, -26, -26, -32, 49, -29, -41, -42, -5, 43, -38, -41, -39, -36, -19, -12, 1, 14, 14, 22, -2, 19] in [0, 60]");
            expectedResult.add("\n\tLPA : [-2, 13, 5, -2, -27, 14, -34, -35, -25, 14, 5, -10, -4, 1, -19, -45, 16, 15, -12, 4, 10, -19, 9, -27, -34, -35, -18, -46, -15, -36, -2, -36, -39, -41, 4, -38, -5, 3, -42, -17, -26, -26, -32, -41, -29, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [0, 44]");
            expectedResult.add("\n\tLPA : [-2, 13, 5, -2, -27, 14, -34, -35, -25, 14, 5, -10, -4, 1, -19, -45, 16, 15, -12, 4, 10, -19, 9, -27, -34, -35, -18, -46, -15, -36, -2, -36, -39, -41, 4, -38, -5, 3, -42, -17, -26, -26, -32, -41, -29, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [46, 60]");
            expectedResult.add("\nQS : [-2, 13, 5, -2, -27, 14, -34, -35, -25, 14, 5, -10, -4, 1, -19, -45, 16, 15, -12, 4, 10, -19, 9, -27, -34, -35, -18, -46, -15, -36, -2, -36, -39, -41, 4, -38, -5, 3, -42, -17, -26, -26, -32, -41, -29, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [0, 44]");
            expectedResult.add("\n\tLPA : [-29, -41, -32, -26, -27, -26, -34, -35, -25, -17, -42, -10, -4, -5, -19, -45, -38, -41, -12, -39, -36, -19, -2, -27, -34, -35, -18, -46, -15, -36, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [0, 29]");
            expectedResult.add("\n\tLPA : [-29, -41, -32, -26, -27, -26, -34, -35, -25, -17, -42, -10, -4, -5, -19, -45, -38, -41, -12, -39, -36, -19, -2, -27, -34, -35, -18, -46, -15, -36, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [31, 44]");
            expectedResult.add("\nQS : [-29, -41, -32, -26, -27, -26, -34, -35, -25, -17, -42, -10, -4, -5, -19, -45, -38, -41, -12, -39, -36, -19, -2, -27, -34, -35, -18, -46, -15, -36, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [0, 29]");
            expectedResult.add("\nSS : [-29, -41, -32, -26, -27, -26, -34, -35, -25, -17, -42, -10, -4, -5, -19, -45, -38, -41, -12, -39, -36, -19, -2, -27, -34, -35, -18, -46, -15, -36, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [0, 29]");
            expectedResult.add("\nQS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [31, 44]");
            expectedResult.add("\nSS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, 10, 4, 15, 4, 16, 1, 3, 5, 14, 14, -2, 5, 13, 9, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [31, 44]");
            expectedResult.add("\nQS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, -2, 1, 3, 4, 4, 5, 5, 9, 10, 13, 14, 14, 15, 16, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [46, 60]");
            expectedResult.add("\nSS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, -2, 1, 3, 4, 4, 5, 5, 9, 10, 13, 14, 14, 15, 16, 19, 36, 28, 43, 49, 30, 33, 20, 28, 31, 29, 21, 25, 22, 42, 49] in [46, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{28, 1, 36, 38, 48, 2, 13, 18, 33, 45, 41, 39, 33, 34, 15, -47, 42, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, 24, 34, -20, 3, -20, -16, -47, 38, 0, 34, -37, 14, 25, 4, -1, 36, 13, -6, 23, -38, 41, 29, -28, -46, -31, 5, 15, -37, -44, 8, -20, 3, 43, -42, 19, 27};
        sortedArray = new int[]{-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 21, 23, 24, 25, 27, 28, 29, 33, 33, 34, 34, 34, 36, 36, 38, 38, 39, 41, 41, 42, 43, 45, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [28, 1, 36, 38, 48, 2, 13, 18, 33, 45, 41, 39, 33, 34, 15, -47, 42, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, 24, 34, -20, 3, -20, -16, -47, 38, 0, 34, -37, 14, 25, 4, -1, 36, 13, -6, 23, -38, 41, 29, -28, -46, -31, 5, 15, -37, -44, 8, -20, 3, 43, -42, 19, 27] in [0, 65]");
            expectedResult.add("\n\tLPA : [-42, 1, 3, -20, 8, 2, 13, 18, -44, -37, 15, 5, -31, -46, 15, -47, -28, -12, -15, -14, -38, -28, 7, -41, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, -47, -1, 0, 4, -37, 14, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [0, 41]");
            expectedResult.add("\n\tLPA : [-42, 1, 3, -20, 8, 2, 13, 18, -44, -37, 15, 5, -31, -46, 15, -47, -28, -12, -15, -14, -38, -28, 7, -41, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, -47, -1, 0, 4, -37, 14, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [43, 65]");
            expectedResult.add("\nQS : [-42, 1, 3, -20, 8, 2, 13, 18, -44, -37, 15, 5, -31, -46, 15, -47, -28, -12, -15, -14, -38, -28, 7, -41, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, -47, -1, 0, 4, -37, 14, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [0, 41]");
            expectedResult.add("\n\tLPA : [-42, -47, -41, -47, -46, -44, -38, 18, 2, -37, 15, 5, -31, 8, 15, -20, -28, -12, -15, -14, 14, -28, 7, 3, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, 1, -1, 0, 4, -37, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [0, 5]");
            expectedResult.add("\n\tLPA : [-42, -47, -41, -47, -46, -44, -38, 18, 2, -37, 15, 5, -31, 8, 15, -20, -28, -12, -15, -14, 14, -28, 7, 3, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, 1, -1, 0, 4, -37, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [7, 41]");
            expectedResult.add("\nQS : [-42, -47, -41, -47, -46, -44, -38, 18, 2, -37, 15, 5, -31, 8, 15, -20, -28, -12, -15, -14, 14, -28, 7, 3, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, 1, -1, 0, 4, -37, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [0, 5]");
            expectedResult.add("\nSS : [-42, -47, -41, -47, -46, -44, -38, 18, 2, -37, 15, 5, -31, 8, 15, -20, -28, -12, -15, -14, 14, -28, 7, 3, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, 1, -1, 0, 4, -37, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [0, 5]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, 18, 2, -37, 15, 5, -31, 8, 15, -20, -28, -12, -15, -14, 14, -28, 7, 3, -7, 12, -5, 15, 0, 0, -6, 13, -20, 3, -20, -16, 1, -1, 0, 4, -37, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [7, 41]");
            expectedResult.add("\n\tLPA : [-47, -47, -46, -44, -42, -41, -38, -37, 2, -37, 4, 5, -31, 8, 0, -20, -28, -12, -15, -14, -1, -28, 7, 3, -7, 12, -5, 1, 0, 0, -6, -16, -20, 3, -20, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [7, 34]");
            expectedResult.add("\n\tLPA : [-47, -47, -46, -44, -42, -41, -38, -37, 2, -37, 4, 5, -31, 8, 0, -20, -28, -12, -15, -14, -1, -28, 7, 3, -7, 12, -5, 1, 0, 0, -6, -16, -20, 3, -20, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [36, 41]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, 2, -37, 4, 5, -31, 8, 0, -20, -28, -12, -15, -14, -1, -28, 7, 3, -7, 12, -5, 1, 0, 0, -6, -16, -20, 3, -20, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [7, 34]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, 2, -37, 4, 5, -31, 8, 0, -20, -28, -12, -15, -14, -1, -28, 7, 3, -7, 12, -5, 1, 0, 0, -6, -16, -20, 3, -20, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [7, 34]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [36, 41]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 15, 14, 15, 15, 18, 13, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [36, 41]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [43, 65]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 34, 38, 36, 34, 24, 23, 21, 41, 29, 42, 34, 33, 39, 41, 45, 33, 48, 38, 36, 43, 28, 27, 25] in [43, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-43, -35, -16, 22, -50, 4, 22, -30, -35, 43, 9, 18, -17, -13, -2, -19, -18, -4, 4, 21, 3, 8, -4, 38, -47, 22, -48, 49, -37, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -42, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, -45, 4, 15, -36, 26, -30, -39, -15, -21, -11, -33, -35, 31, 44, 47, -12, -48, -29};
        sortedArray = new int[]{-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 6, 8, 9, 9, 9, 10, 15, 18, 20, 21, 22, 22, 22, 22, 26, 29, 31, 37, 38, 41, 41, 42, 43, 43, 43, 44, 46, 46, 47, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-43, -35, -16, 22, -50, 4, 22, -30, -35, 43, 9, 18, -17, -13, -2, -19, -18, -4, 4, 21, 3, 8, -4, 38, -47, 22, -48, 49, -37, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -42, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, -45, 4, 15, -36, 26, -30, -39, -15, -21, -11, -33, -35, 31, 44, 47, -12, -48, -29] in [0, 70]");
            expectedResult.add("\n\tLPA : [-43, -35, -48, -35, -50, -33, -39, -30, -35, -30, -36, -45, -42, -37, -48, -47, -29, -4, 4, 21, 3, 8, -4, 38, -19, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -17, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, -21, -11, 4, 22, 31, 44, 47, -12, -16, -18] in [0, 15]");
            expectedResult.add("\n\tLPA : [-43, -35, -48, -35, -50, -33, -39, -30, -35, -30, -36, -45, -42, -37, -48, -47, -29, -4, 4, 21, 3, 8, -4, 38, -19, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -17, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, -21, -11, 4, 22, 31, 44, 47, -12, -16, -18] in [17, 70]");
            expectedResult.add("\nQS : [-43, -35, -48, -35, -50, -33, -39, -30, -35, -30, -36, -45, -42, -37, -48, -47, -29, -4, 4, 21, 3, 8, -4, 38, -19, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -17, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, -21, -11, 4, 22, 31, 44, 47, -12, -16, -18] in [0, 15]");
            expectedResult.add("\nSS : [-43, -35, -48, -35, -50, -33, -39, -30, -35, -30, -36, -45, -42, -37, -48, -47, -29, -4, 4, 21, 3, 8, -4, 38, -19, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -17, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, -21, -11, 4, 22, 31, 44, 47, -12, -16, -18] in [0, 15]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -4, 4, 21, 3, 8, -4, 38, -19, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -17, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, -21, -11, 4, 22, 31, 44, 47, -12, -16, -18] in [17, 70]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -18, -21, -18, -28, -17, -18, -19, -16, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -4, 8, 37, 3, 43, -10, 21, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, 4, -11, 4, 22, 31, 44, 47, -12, -4, 38] in [17, 23]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -18, -21, -18, -28, -17, -18, -19, -16, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -4, 8, 37, 3, 43, -10, 21, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, 4, -11, 4, 22, 31, 44, 47, -12, -4, 38] in [25, 70]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -18, -21, -18, -28, -17, -18, -19, -16, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -4, 8, 37, 3, 43, -10, 21, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, 4, -11, 4, 22, 31, 44, 47, -12, -4, 38] in [17, 23]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -18, -21, -18, -28, -17, -18, -19, -16, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -4, 8, 37, 3, 43, -10, 21, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, 4, -11, 4, 22, 31, 44, 47, -12, -4, 38] in [17, 23]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, 22, -2, 49, -13, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -4, 8, 37, 3, 43, -10, 21, 41, 10, 6, -1, 9, 42, 18, 4, 15, 9, 26, 43, 22, -15, 4, -11, 4, 22, 31, 44, 47, -12, -4, 38] in [25, 70]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -4, -2, -12, -13, 20, 22, 4, -3, -11, 4, -15, 22, 9, 2, -14, -4, 8, 9, 3, 15, -10, 21, 4, 10, 6, -1, 9, 18, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [25, 52]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -4, -2, -12, -13, 20, 22, 4, -3, -11, 4, -15, 22, 9, 2, -14, -4, 8, 9, 3, 15, -10, 21, 4, 10, 6, -1, 9, 18, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [54, 70]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -4, -2, -12, -13, 20, 22, 4, -3, -11, 4, -15, 22, 9, 2, -14, -4, 8, 9, 3, 15, -10, 21, 4, 10, 6, -1, 9, 18, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [25, 52]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -4, -2, -12, -13, 20, 22, 4, -3, -11, 4, -15, 22, 9, 2, -14, -4, 8, 9, 3, 15, -10, 21, 4, 10, 6, -1, 9, 18, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [25, 52]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 6, 8, 9, 9, 9, 10, 15, 18, 20, 21, 22, 22, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [54, 70]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 6, 8, 9, 9, 9, 10, 15, 18, 20, 21, 22, 22, 22, 41, 43, 37, 26, 43, 46, 41, 29, 43, 46, 22, 31, 44, 47, 49, 38, 42] in [54, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{9, -44, -33, 21, 7, -21, 33, 0, -8, -5, 24, 27, 17, 5, 31, -14, 22, 34, 17, 33, -1, 20, -5, 3, 26, 33, 44, -10, 4, 17, -31, 20, -8, -33, -50, 44, -11, -17, -40, 40, 45, -41, -17, -5, 15, -8, -9, 8, -34, -49, -14, -7, 19, 25, 16, -23, 40, 36, 28, 41, -32, 0, 21, -6, -25, 11, -35, 27, -16, -18, 1, -23, -26, -24, -40, 15};
        sortedArray = new int[]{-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 24, 25, 26, 27, 27, 28, 31, 33, 33, 33, 34, 36, 40, 40, 41, 44, 44, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [9, -44, -33, 21, 7, -21, 33, 0, -8, -5, 24, 27, 17, 5, 31, -14, 22, 34, 17, 33, -1, 20, -5, 3, 26, 33, 44, -10, 4, 17, -31, 20, -8, -33, -50, 44, -11, -17, -40, 40, 45, -41, -17, -5, 15, -8, -9, 8, -34, -49, -14, -7, 19, 25, 16, -23, 40, 36, 28, 41, -32, 0, 21, -6, -25, 11, -35, 27, -16, -18, 1, -23, -26, -24, -40, 15] in [0, 75]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, -26, -21, -23, -18, -35, -25, -32, -23, -49, -34, -17, -41, -40, -50, -33, -31, -17, 20, -5, 3, 26, 33, 44, -10, 4, 17, 33, 20, -8, 17, 34, 44, -11, 15, 22, 40, 45, -14, 31, -5, 15, -8, -9, 8, 5, 17, -14, -7, 19, 25, 16, 27, 40, 36, 28, 41, 24, 0, 21, -6, -5, 11, -8, 27, -16, 0, 1, 33, 7, 21, 9, -1] in [0, 19]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, -26, -21, -23, -18, -35, -25, -32, -23, -49, -34, -17, -41, -40, -50, -33, -31, -17, 20, -5, 3, 26, 33, 44, -10, 4, 17, 33, 20, -8, 17, 34, 44, -11, 15, 22, 40, 45, -14, 31, -5, 15, -8, -9, 8, 5, 17, -14, -7, 19, 25, 16, 27, 40, 36, 28, 41, 24, 0, 21, -6, -5, 11, -8, 27, -16, 0, 1, 33, 7, 21, 9, -1] in [21, 75]");
            expectedResult.add("\nQS : [-40, -44, -33, -24, -26, -21, -23, -18, -35, -25, -32, -23, -49, -34, -17, -41, -40, -50, -33, -31, -17, 20, -5, 3, 26, 33, 44, -10, 4, 17, 33, 20, -8, 17, 34, 44, -11, 15, 22, 40, 45, -14, 31, -5, 15, -8, -9, 8, 5, 17, -14, -7, 19, 25, 16, 27, 40, 36, 28, 41, 24, 0, 21, -6, -5, 11, -8, 27, -16, 0, 1, 33, 7, 21, 9, -1] in [0, 19]");
            expectedResult.add("\nSS : [-40, -44, -33, -24, -26, -21, -23, -18, -35, -25, -32, -23, -49, -34, -17, -41, -40, -50, -33, -31, -17, 20, -5, 3, 26, 33, 44, -10, 4, 17, 33, 20, -8, 17, 34, 44, -11, 15, 22, 40, 45, -14, 31, -5, 15, -8, -9, 8, 5, 17, -14, -7, 19, 25, 16, 27, 40, 36, 28, 41, 24, 0, 21, -6, -5, 11, -8, 27, -16, 0, 1, 33, 7, 21, 9, -1] in [0, 19]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, 20, -5, 3, 26, 33, 44, -10, 4, 17, 33, 20, -8, 17, 34, 44, -11, 15, 22, 40, 45, -14, 31, -5, 15, -8, -9, 8, 5, 17, -14, -7, 19, 25, 16, 27, 40, 36, 28, 41, 24, 0, 21, -6, -5, 11, -8, 27, -16, 0, 1, 33, 7, 21, 9, -1] in [21, 75]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, 1, -5, 3, 0, -16, -8, -10, 4, -5, -6, 0, -8, -7, -14, -1, -11, -9, -8, -5, -14, 5, 31, 40, 15, 22, 15, 8, 44, 17, 34, 17, 19, 25, 16, 27, 40, 36, 28, 41, 24, 20, 21, 33, 17, 11, 44, 27, 33, 26, 20, 33, 7, 21, 9, 45] in [21, 40]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, 1, -5, 3, 0, -16, -8, -10, 4, -5, -6, 0, -8, -7, -14, -1, -11, -9, -8, -5, -14, 5, 31, 40, 15, 22, 15, 8, 44, 17, 34, 17, 19, 25, 16, 27, 40, 36, 28, 41, 24, 20, 21, 33, 17, 11, 44, 27, 33, 26, 20, 33, 7, 21, 9, 45] in [42, 75]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, 1, -5, 3, 0, -16, -8, -10, 4, -5, -6, 0, -8, -7, -14, -1, -11, -9, -8, -5, -14, 5, 31, 40, 15, 22, 15, 8, 44, 17, 34, 17, 19, 25, 16, 27, 40, 36, 28, 41, 24, 20, 21, 33, 17, 11, 44, 27, 33, 26, 20, 33, 7, 21, 9, 45] in [21, 40]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, 1, -5, 3, 0, -16, -8, -10, 4, -5, -6, 0, -8, -7, -14, -1, -11, -9, -8, -5, -14, 5, 31, 40, 15, 22, 15, 8, 44, 17, 34, 17, 19, 25, 16, 27, 40, 36, 28, 41, 24, 20, 21, 33, 17, 11, 44, 27, 33, 26, 20, 33, 7, 21, 9, 45] in [21, 40]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 31, 40, 15, 22, 15, 8, 44, 17, 34, 17, 19, 25, 16, 27, 40, 36, 28, 41, 24, 20, 21, 33, 17, 11, 44, 27, 33, 26, 20, 33, 7, 21, 9, 45] in [42, 75]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 9, 21, 15, 22, 15, 8, 7, 17, 20, 17, 19, 25, 16, 27, 26, 27, 11, 17, 24, 20, 21, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [42, 62]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 9, 21, 15, 22, 15, 8, 7, 17, 20, 17, 19, 25, 16, 27, 26, 27, 11, 17, 24, 20, 21, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [64, 75]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 9, 21, 15, 22, 15, 8, 7, 17, 20, 17, 19, 25, 16, 27, 26, 27, 11, 17, 24, 20, 21, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [42, 62]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 9, 21, 15, 22, 15, 8, 7, 17, 20, 17, 19, 25, 16, 27, 26, 27, 11, 17, 24, 20, 21, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [42, 62]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 24, 25, 26, 27, 27, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [64, 75]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 24, 25, 26, 27, 27, 28, 41, 45, 44, 36, 33, 40, 34, 33, 44, 40, 31, 33] in [64, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-6, -16, 3, 7, 36, -25, -25, -33, -23, 47, -13, -30, 1, -24, -39, -21, -29, 46, -50, -19, -47, 48, -14, 24, -22, -48, 34, 20, 35, 35, 30, 19, 7, -12, -49, 22, 43, -7, 26, -31, 16, 11, 23, -48, 0, 20, -16, -25, 49, -2, 30, -4, -38, -31, 46, -48, 32, 30, 35, 12, 49, 40, -41, 40, 16, -19, 16, 3, 8, -29, 45, 17, -2, -32, -23, -28, -34, 47, 9, 33, 10};
        sortedArray = new int[]{-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 24, 26, 30, 30, 30, 32, 33, 34, 35, 35, 35, 36, 40, 40, 43, 45, 46, 46, 47, 47, 48, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-6, -16, 3, 7, 36, -25, -25, -33, -23, 47, -13, -30, 1, -24, -39, -21, -29, 46, -50, -19, -47, 48, -14, 24, -22, -48, 34, 20, 35, 35, 30, 19, 7, -12, -49, 22, 43, -7, 26, -31, 16, 11, 23, -48, 0, 20, -16, -25, 49, -2, 30, -4, -38, -31, 46, -48, 32, 30, 35, 12, 49, 40, -41, 40, 16, -19, 16, 3, 8, -29, 45, 17, -2, -32, -23, -28, -34, 47, 9, 33, 10] in [0, 80]");
            expectedResult.add("\n\tLPA : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 45]");
            expectedResult.add("\n\tLPA : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [47, 80]");
            expectedResult.add("\nQS : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 45]");
            expectedResult.add("\n\tLPA : [-16, -16, -48, -25, -31, -25, -25, -33, -23, -34, -13, -30, -38, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -7, -29, -31, -48, -19, -41, -49, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 33]");
            expectedResult.add("\n\tLPA : [-16, -16, -48, -25, -31, -25, -25, -33, -23, -34, -13, -30, -38, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -7, -29, -31, -48, -19, -41, -49, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [35, 45]");
            expectedResult.add("\nQS : [-16, -16, -48, -25, -31, -25, -25, -33, -23, -34, -13, -30, -38, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -7, -29, -31, -48, -19, -41, -49, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 33]");
            expectedResult.add("\n\tLPA : [-49, -41, -48, -48, -31, -31, -29, -33, -48, -34, -32, -30, -38, -47, -39, -50, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 15]");
            expectedResult.add("\n\tLPA : [-49, -41, -48, -48, -31, -31, -29, -33, -48, -34, -32, -30, -38, -47, -39, -50, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [17, 33]");
            expectedResult.add("\nQS : [-49, -41, -48, -48, -31, -31, -29, -33, -48, -34, -32, -30, -38, -47, -39, -50, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 15]");
            expectedResult.add("\nSS : [-49, -41, -48, -48, -31, -31, -29, -33, -48, -34, -32, -30, -38, -47, -39, -50, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 15]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [17, 33]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -21, -19, -24, -23, -14, -13, -22, -23, -7, -25, -25, -25, -19, -16, -16, -12, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [17, 33]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [35, 45]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, 3, 8, -2, 1, 9, -4, -2, 7, 3, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [35, 45]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [47, 80]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 20, 11, 30, 16, 26, 24, 17, 22, 32, 30, 20, 12, 16, 30, 19, 16, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [47, 63]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 20, 11, 30, 16, 26, 24, 17, 22, 32, 30, 20, 12, 16, 30, 19, 16, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [65, 80]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 20, 11, 30, 16, 26, 24, 17, 22, 32, 30, 20, 12, 16, 30, 19, 16, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [47, 63]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 20, 11, 30, 16, 26, 24, 17, 22, 32, 30, 20, 12, 16, 30, 19, 16, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [47, 63]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 24, 26, 30, 30, 30, 32, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [65, 80]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 24, 26, 30, 30, 30, 32, 33, 40, 49, 35, 35, 35, 45, 46, 34, 43, 48, 46, 47, 47, 36, 49, 40] in [65, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the quicksort using YOUR IMPLEMENTATION OF DISTRIBUTED MEDIAN (Elements to be considered = 5)
     * If there are duplicates of the median, this test expects the FIRST MEDIAN to be selected as the pivot
     * This time the optimisations WITH selection sort is being considered
     * Within the curly brackets is the expected log to be found
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedDistributedMedianPivotFront5() {
        Quicksort quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(5), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{21, 11, 5, 18, 5, -33, -8, 9, -36, -31, 31, -25, -13, 21, -32, 39, -35, 42, -23, 29, -43, 15, 48, -21, -15, 39, 45, -2, -8, 8, 44, -7, -34, -39, -1, -14, -11, -43, -23, 45, -4, 28, -44, 24, 0, 1, -36, 1, -49, -27, -23, -33, 24, -40, -30, 47};
        sortedArray = new int[]{-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, -1, 0, 1, 1, 5, 5, 8, 9, 11, 15, 18, 21, 21, 24, 24, 28, 29, 31, 39, 39, 42, 44, 45, 45, 47, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [21, 11, 5, 18, 5, -33, -8, 9, -36, -31, 31, -25, -13, 21, -32, 39, -35, 42, -23, 29, -43, 15, 48, -21, -15, 39, 45, -2, -8, 8, 44, -7, -34, -39, -1, -14, -11, -43, -23, 45, -4, 28, -44, 24, 0, 1, -36, 1, -49, -27, -23, -33, 24, -40, -30, 47] in [0, 55]");
            expectedResult.add("\n\tLPA : [21, 11, 5, 18, 5, -33, -8, 9, -36, -31, -30, -25, -13, 21, -32, -40, -35, -33, -23, -23, -43, 15, -27, -21, -15, -49, 1, -2, -8, 8, -36, -7, -34, -39, -1, -14, -11, -43, -23, 1, -4, 0, -44, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [0, 42]");
            expectedResult.add("\n\tLPA : [21, 11, 5, 18, 5, -33, -8, 9, -36, -31, -30, -25, -13, 21, -32, -40, -35, -33, -23, -23, -43, 15, -27, -21, -15, -49, 1, -2, -8, 8, -36, -7, -34, -39, -1, -14, -11, -43, -23, 1, -4, 0, -44, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [44, 55]");
            expectedResult.add("\nQS : [21, 11, 5, 18, 5, -33, -8, 9, -36, -31, -30, -25, -13, 21, -32, -40, -35, -33, -23, -23, -43, 15, -27, -21, -15, -49, 1, -2, -8, 8, -36, -7, -34, -39, -1, -14, -11, -43, -23, 1, -4, 0, -44, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [0, 42]");
            expectedResult.add("\n\tLPA : [-43, -39, -34, -36, -49, -33, -43, -33, -36, -31, -44, -35, -40, -32, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [0, 13]");
            expectedResult.add("\n\tLPA : [-43, -39, -34, -36, -49, -33, -43, -33, -36, -31, -44, -35, -40, -32, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [15, 42]");
            expectedResult.add("\nQS : [-43, -39, -34, -36, -49, -33, -43, -33, -36, -31, -44, -35, -40, -32, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [0, 13]");
            expectedResult.add("\nSS : [-43, -39, -34, -36, -49, -33, -43, -33, -36, -31, -44, -35, -40, -32, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [0, 13]");
            expectedResult.add("\nQS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [15, 42]");
            expectedResult.add("\nSS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -13, -25, 9, -23, -23, -8, 15, -27, -21, -15, 5, 1, -2, -8, 8, 18, -7, 5, 11, -1, -14, -11, 21, -23, 1, -4, 0, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [15, 42]");
            expectedResult.add("\nQS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, -1, 0, 1, 1, 5, 5, 8, 9, 11, 15, 18, 21, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [44, 55]");
            expectedResult.add("\nSS : [-49, -44, -43, -43, -40, -39, -36, -36, -35, -34, -33, -33, -32, -31, -30, -27, -25, -23, -23, -23, -21, -15, -14, -13, -11, -8, -8, -7, -4, -2, -1, 0, 1, 1, 5, 5, 8, 9, 11, 15, 18, 21, 21, 24, 28, 45, 44, 45, 39, 48, 29, 42, 47, 39, 31, 24] in [44, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{42, 13, 5, -2, -27, 25, -34, -35, -25, 21, 5, -10, -4, 29, -19, -45, 16, 15, 31, 4, 10, 28, 9, -27, -34, -35, -18, -46, -15, 20, -2, -36, 33, 30, 4, 49, 28, 3, 36, -17, -26, -26, -32, 49, -29, -41, -42, -5, 43, -38, -41, -39, -36, -19, -12, 1, 14, 14, 22, -2, 19};
        sortedArray = new int[]{-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, -2, 1, 3, 4, 4, 5, 5, 9, 10, 13, 14, 14, 15, 16, 19, 20, 21, 22, 25, 28, 28, 29, 30, 31, 33, 36, 42, 43, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [42, 13, 5, -2, -27, 25, -34, -35, -25, 21, 5, -10, -4, 29, -19, -45, 16, 15, 31, 4, 10, 28, 9, -27, -34, -35, -18, -46, -15, 20, -2, -36, 33, 30, 4, 49, 28, 3, 36, -17, -26, -26, -32, 49, -29, -41, -42, -5, 43, -38, -41, -39, -36, -19, -12, 1, 14, 14, 22, -2, 19] in [0, 60]");
            expectedResult.add("\n\tLPA : [-2, -12, -19, -36, -27, -39, -34, -35, -25, -41, -38, -10, -4, -5, -19, -45, -42, -41, -29, -32, -26, -26, -17, -27, -34, -35, -18, -46, -15, -36, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [0, 29]");
            expectedResult.add("\n\tLPA : [-2, -12, -19, -36, -27, -39, -34, -35, -25, -41, -38, -10, -4, -5, -19, -45, -42, -41, -29, -32, -26, -26, -17, -27, -34, -35, -18, -46, -15, -36, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [31, 60]");
            expectedResult.add("\nQS : [-2, -12, -19, -36, -27, -39, -34, -35, -25, -41, -38, -10, -4, -5, -19, -45, -42, -41, -29, -32, -26, -26, -17, -27, -34, -35, -18, -46, -15, -36, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [0, 29]");
            expectedResult.add("\nSS : [-2, -12, -19, -36, -27, -39, -34, -35, -25, -41, -38, -10, -4, -5, -19, -45, -42, -41, -29, -32, -26, -26, -17, -27, -34, -35, -18, -46, -15, -36, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [0, 29]");
            expectedResult.add("\nQS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [31, 60]");
            expectedResult.add("\nSS : [-46, -45, -42, -41, -41, -39, -38, -36, -36, -35, -35, -34, -34, -32, -29, -27, -27, -26, -26, -25, -19, -19, -18, -17, -15, -12, -10, -5, -4, -2, -2, 20, 33, 30, 4, 49, 28, 3, 36, 9, 28, 10, 4, 49, 31, 15, 16, 29, 43, 5, 21, 25, -2, 5, 13, 1, 14, 14, 22, 42, 19] in [31, 60]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{28, 1, 36, 38, 48, 2, 13, 18, 33, 45, 41, 39, 33, 34, 15, -47, 42, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, 24, 34, -20, 3, -20, -16, -47, 38, 0, 34, -37, 14, 25, 4, -1, 36, 13, -6, 23, -38, 41, 29, -28, -46, -31, 5, 15, -37, -44, 8, -20, 3, 43, -42, 19, 27};
        sortedArray = new int[]{-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 21, 23, 24, 25, 27, 28, 29, 33, 33, 34, 34, 34, 36, 36, 38, 38, 39, 41, 41, 42, 43, 45, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [28, 1, 36, 38, 48, 2, 13, 18, 33, 45, 41, 39, 33, 34, 15, -47, 42, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, 24, 34, -20, 3, -20, -16, -47, 38, 0, 34, -37, 14, 25, 4, -1, 36, 13, -6, 23, -38, 41, 29, -28, -46, -31, 5, 15, -37, -44, 8, -20, 3, 43, -42, 19, 27] in [0, 65]");
            expectedResult.add("\n\tLPA : [19, 1, -42, 3, -20, 2, 13, 18, 8, -44, -37, 15, 5, -31, 15, -47, -46, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, -28, -38, -20, 3, -20, -16, -47, -6, 0, 13, -37, 14, -1, 4, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [0, 43]");
            expectedResult.add("\n\tLPA : [19, 1, -42, 3, -20, 2, 13, 18, 8, -44, -37, 15, 5, -31, 15, -47, -46, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, -28, -38, -20, 3, -20, -16, -47, -6, 0, 13, -37, 14, -1, 4, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [45, 65]");
            expectedResult.add("\nQS : [19, 1, -42, 3, -20, 2, 13, 18, 8, -44, -37, 15, 5, -31, 15, -47, -46, -12, -15, -14, 21, -28, 7, -41, -7, 12, -5, 15, 0, 0, -28, -38, -20, 3, -20, -16, -47, -6, 0, 13, -37, 14, -1, 4, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [0, 43]");
            expectedResult.add("\n\tLPA : [-37, -47, -42, -38, -41, -28, -46, -47, -31, -44, -37, -28, 5, 8, 15, 18, 13, -12, -15, -14, 21, 2, 7, -20, -7, 12, -5, 15, 0, 0, 4, 3, -20, 3, -20, -16, 1, -6, 0, 13, 19, 14, -1, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [0, 10]");
            expectedResult.add("\n\tLPA : [-37, -47, -42, -38, -41, -28, -46, -47, -31, -44, -37, -28, 5, 8, 15, 18, 13, -12, -15, -14, 21, 2, 7, -20, -7, 12, -5, 15, 0, 0, 4, 3, -20, 3, -20, -16, 1, -6, 0, 13, 19, 14, -1, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [12, 43]");
            expectedResult.add("\nQS : [-37, -47, -42, -38, -41, -28, -46, -47, -31, -44, -37, -28, 5, 8, 15, 18, 13, -12, -15, -14, 21, 2, 7, -20, -7, 12, -5, 15, 0, 0, 4, 3, -20, 3, -20, -16, 1, -6, 0, 13, 19, 14, -1, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [0, 10]");
            expectedResult.add("\nSS : [-37, -47, -42, -38, -41, -28, -46, -47, -31, -44, -37, -28, 5, 8, 15, 18, 13, -12, -15, -14, 21, 2, 7, -20, -7, 12, -5, 15, 0, 0, 4, 3, -20, 3, -20, -16, 1, -6, 0, 13, 19, 14, -1, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [0, 10]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, 5, 8, 15, 18, 13, -12, -15, -14, 21, 2, 7, -20, -7, 12, -5, 15, 0, 0, 4, 3, -20, 3, -20, -16, 1, -6, 0, 13, 19, 14, -1, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [12, 43]");
            expectedResult.add("\n\tLPA : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -1, 0, -6, 1, -16, -12, -15, -14, -20, 2, -20, -20, -7, 3, -5, 0, 0, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [12, 28]");
            expectedResult.add("\n\tLPA : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -1, 0, -6, 1, -16, -12, -15, -14, -20, 2, -20, -20, -7, 3, -5, 0, 0, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [30, 43]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -1, 0, -6, 1, -16, -12, -15, -14, -20, 2, -20, -20, -7, 3, -5, 0, 0, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [12, 28]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -1, 0, -6, 1, -16, -12, -15, -14, -20, 2, -20, -20, -7, 3, -5, 0, 0, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [12, 28]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [30, 43]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 12, 7, 15, 21, 13, 18, 15, 8, 13, 19, 14, 5, 15, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [30, 43]");
            expectedResult.add("\nQS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 21, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [45, 65]");
            expectedResult.add("\nSS : [-47, -47, -46, -44, -42, -41, -38, -37, -37, -31, -28, -28, -20, -20, -20, -16, -15, -14, -12, -7, -6, -5, -1, 0, 0, 0, 1, 2, 3, 3, 4, 5, 7, 8, 12, 13, 13, 14, 15, 15, 15, 18, 19, 21, 23, 36, 34, 38, 27, 34, 41, 29, 24, 42, 34, 33, 39, 41, 45, 33, 48, 38, 43, 36, 28, 25] in [45, 65]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-43, -35, -16, 22, -50, 4, 22, -30, -35, 43, 9, 18, -17, -13, -2, -19, -18, -4, 4, 21, 3, 8, -4, 38, -47, 22, -48, 49, -37, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -42, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, -45, 4, 15, -36, 26, -30, -39, -15, -21, -11, -33, -35, 31, 44, 47, -12, -48, -29};
        sortedArray = new int[]{-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 6, 8, 9, 9, 9, 10, 15, 18, 20, 21, 22, 22, 22, 22, 26, 29, 31, 37, 38, 41, 41, 42, 43, 43, 43, 44, 46, 46, 47, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-43, -35, -16, 22, -50, 4, 22, -30, -35, 43, 9, 18, -17, -13, -2, -19, -18, -4, 4, 21, 3, 8, -4, 38, -47, 22, -48, 49, -37, 20, 22, 46, -3, 43, 29, 41, 46, 9, 2, -14, -18, -42, 37, -28, 43, -10, -18, 41, 10, 6, -1, 9, 42, -45, 4, 15, -36, 26, -30, -39, -15, -21, -11, -33, -35, 31, 44, 47, -12, -48, -29] in [0, 70]");
            expectedResult.add("\n\tLPA : [-43, -35, -16, -48, -50, -12, -35, -30, -35, -33, -11, -21, -17, -13, -15, -19, -18, -29, -39, -30, -36, -45, -18, -10, -47, -28, -48, -42, -37, -18, -14, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [0, 30]");
            expectedResult.add("\n\tLPA : [-43, -35, -16, -48, -50, -12, -35, -30, -35, -33, -11, -21, -17, -13, -15, -19, -18, -29, -39, -30, -36, -45, -18, -10, -47, -28, -48, -42, -37, -18, -14, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [32, 70]");
            expectedResult.add("\nQS : [-43, -35, -16, -48, -50, -12, -35, -30, -35, -33, -11, -21, -17, -13, -15, -19, -18, -29, -39, -30, -36, -45, -18, -10, -47, -28, -48, -42, -37, -18, -14, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [0, 30]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -48, -50, -47, -45, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [0, 7]");
            expectedResult.add("\n\tLPA : [-43, -42, -48, -48, -50, -47, -45, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [9, 30]");
            expectedResult.add("\nQS : [-43, -42, -48, -48, -50, -47, -45, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [0, 7]");
            expectedResult.add("\nSS : [-43, -42, -48, -48, -50, -47, -45, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [0, 7]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [9, 30]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -33, -11, -21, -17, -13, -15, -19, -18, -29, -30, -30, -36, -35, -18, -10, -12, -28, -16, -35, -14, -18, -35, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [9, 30]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -3, 43, 29, 41, 46, 9, 2, 22, 20, 49, 37, 22, 43, 38, -4, 41, 10, 6, -1, 9, 42, 8, 4, 15, 3, 26, 21, 4, -2, 18, 9, 43, 22, 31, 44, 47, 4, 22, 46] in [32, 70]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -3, 4, -2, 3, 4, -1, 2, -4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [32, 39]");
            expectedResult.add("\n\tLPA : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -3, 4, -2, 3, 4, -1, 2, -4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [41, 70]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -3, 4, -2, 3, 4, -1, 2, -4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [32, 39]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -3, 4, -2, 3, 4, -1, 2, -4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [32, 39]");
            expectedResult.add("\nQS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [41, 70]");
            expectedResult.add("\nSS : [-50, -48, -48, -47, -45, -43, -42, -39, -37, -36, -35, -35, -35, -33, -30, -30, -29, -28, -21, -19, -18, -18, -18, -17, -16, -15, -14, -13, -12, -11, -10, -4, -4, -3, -2, -1, 2, 3, 4, 4, 4, 49, 37, 22, 43, 38, 22, 41, 10, 6, 9, 9, 42, 8, 46, 15, 41, 26, 21, 46, 29, 18, 9, 43, 22, 31, 44, 47, 43, 22, 20] in [41, 70]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{9, -44, -33, 21, 7, -21, 33, 0, -8, -5, 24, 27, 17, 5, 31, -14, 22, 34, 17, 33, -1, 20, -5, 3, 26, 33, 44, -10, 4, 17, -31, 20, -8, -33, -50, 44, -11, -17, -40, 40, 45, -41, -17, -5, 15, -8, -9, 8, -34, -49, -14, -7, 19, 25, 16, -23, 40, 36, 28, 41, -32, 0, 21, -6, -25, 11, -35, 27, -16, -18, 1, -23, -26, -24, -40, 15};
        sortedArray = new int[]{-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 24, 25, 26, 27, 27, 28, 31, 33, 33, 33, 34, 36, 40, 40, 41, 44, 44, 45};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [9, -44, -33, 21, 7, -21, 33, 0, -8, -5, 24, 27, 17, 5, 31, -14, 22, 34, 17, 33, -1, 20, -5, 3, 26, 33, 44, -10, 4, 17, -31, 20, -8, -33, -50, 44, -11, -17, -40, 40, 45, -41, -17, -5, 15, -8, -9, 8, -34, -49, -14, -7, 19, 25, 16, -23, 40, 36, 28, 41, -32, 0, 21, -6, -25, 11, -35, 27, -16, -18, 1, -23, -26, -24, -40, 15] in [0, 75]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, 7, -21, -26, 0, -8, -5, -23, 1, -18, 5, -16, -14, -35, -25, -6, 0, -1, -32, -5, 3, -23, -7, -14, -10, 4, -49, -31, -34, -8, -33, -50, 8, -11, -17, -40, -9, -8, -41, -17, -5, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [0, 43]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, 7, -21, -26, 0, -8, -5, -23, 1, -18, 5, -16, -14, -35, -25, -6, 0, -1, -32, -5, 3, -23, -7, -14, -10, 4, -49, -31, -34, -8, -33, -50, 8, -11, -17, -40, -9, -8, -41, -17, -5, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [45, 75]");
            expectedResult.add("\nQS : [-40, -44, -33, -24, 7, -21, -26, 0, -8, -5, -23, 1, -18, 5, -16, -14, -35, -25, -6, 0, -1, -32, -5, 3, -23, -7, -14, -10, 4, -49, -31, -34, -8, -33, -50, 8, -11, -17, -40, -9, -8, -41, -17, -5, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [0, 43]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, -41, -40, -26, -50, -33, -34, -31, -49, -23, -32, -25, -35, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [0, 15]");
            expectedResult.add("\n\tLPA : [-40, -44, -33, -24, -41, -40, -26, -50, -33, -34, -31, -49, -23, -32, -25, -35, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [17, 43]");
            expectedResult.add("\nQS : [-40, -44, -33, -24, -41, -40, -26, -50, -33, -34, -31, -49, -23, -32, -25, -35, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [0, 15]");
            expectedResult.add("\nSS : [-40, -44, -33, -24, -41, -40, -26, -50, -33, -34, -31, -49, -23, -32, -25, -35, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [0, 15]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [17, 43]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -16, -6, 0, -1, 5, -5, 3, -18, -7, -14, -10, 4, 1, -5, -5, -8, -8, 0, 8, -11, -17, -21, -9, -8, 7, -17, -14, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [17, 43]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 45, 40, 44, 20, 17, 44, 33, 19, 25, 16, 26, 40, 36, 28, 41, 20, 33, 21, 17, 34, 11, 22, 27, 31, 17, 27, 24, 33, 21, 15, 15] in [45, 75]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 15, 21, 17, 20, 17, 15, 11, 19, 17, 16, 21, 20, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [45, 56]");
            expectedResult.add("\n\tLPA : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 15, 21, 17, 20, 17, 15, 11, 19, 17, 16, 21, 20, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [58, 75]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 15, 21, 17, 20, 17, 15, 11, 19, 17, 16, 21, 20, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [45, 56]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 15, 21, 17, 20, 17, 15, 11, 19, 17, 16, 21, 20, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [45, 56]");
            expectedResult.add("\nQS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [58, 75]");
            expectedResult.add("\nSS : [-50, -49, -44, -41, -40, -40, -35, -34, -33, -33, -32, -31, -26, -25, -24, -23, -23, -21, -18, -17, -17, -16, -14, -14, -11, -10, -9, -8, -8, -8, -7, -6, -5, -5, -5, -1, 0, 0, 1, 3, 4, 5, 7, 8, 9, 11, 15, 15, 16, 17, 17, 17, 19, 20, 20, 21, 21, 22, 28, 41, 40, 33, 26, 25, 34, 33, 44, 27, 31, 44, 27, 24, 33, 40, 45, 36] in [58, 75]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-6, -16, 3, 7, 36, -25, -25, -33, -23, 47, -13, -30, 1, -24, -39, -21, -29, 46, -50, -19, -47, 48, -14, 24, -22, -48, 34, 20, 35, 35, 30, 19, 7, -12, -49, 22, 43, -7, 26, -31, 16, 11, 23, -48, 0, 20, -16, -25, 49, -2, 30, -4, -38, -31, 46, -48, 32, 30, 35, 12, 49, 40, -41, 40, 16, -19, 16, 3, 8, -29, 45, 17, -2, -32, -23, -28, -34, 47, 9, 33, 10};
        sortedArray = new int[]{-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 24, 26, 30, 30, 30, 32, 33, 34, 35, 35, 35, 36, 40, 40, 43, 45, 46, 46, 47, 47, 48, 49, 49};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-6, -16, 3, 7, 36, -25, -25, -33, -23, 47, -13, -30, 1, -24, -39, -21, -29, 46, -50, -19, -47, 48, -14, 24, -22, -48, 34, 20, 35, 35, 30, 19, 7, -12, -49, 22, 43, -7, 26, -31, 16, 11, 23, -48, 0, 20, -16, -25, 49, -2, 30, -4, -38, -31, 46, -48, 32, 30, 35, 12, 49, 40, -41, 40, 16, -19, 16, 3, 8, -29, 45, 17, -2, -32, -23, -28, -34, 47, 9, 33, 10] in [0, 80]");
            expectedResult.add("\n\tLPA : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 45]");
            expectedResult.add("\n\tLPA : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [47, 80]");
            expectedResult.add("\nQS : [-6, -16, 3, 7, 9, -25, -25, -33, -23, -34, -13, -30, 1, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -2, -29, 8, 3, -19, -41, 7, -12, -49, -48, -31, -7, -38, -31, -4, -2, -25, -48, 0, -16, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 45]");
            expectedResult.add("\n\tLPA : [-48, -16, -25, -31, -38, -25, -25, -33, -23, -34, -13, -30, -31, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -48, -29, -49, -16, -19, -41, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 31]");
            expectedResult.add("\n\tLPA : [-48, -16, -25, -31, -38, -25, -25, -33, -23, -34, -13, -30, -31, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -48, -29, -49, -16, -19, -41, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [33, 45]");
            expectedResult.add("\nQS : [-48, -16, -25, -31, -38, -25, -25, -33, -23, -34, -13, -30, -31, -24, -39, -21, -29, -28, -50, -19, -47, -23, -14, -32, -22, -48, -48, -29, -49, -16, -19, -41, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 31]");
            expectedResult.add("\n\tLPA : [-48, -49, -48, -48, -47, -50, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 6]");
            expectedResult.add("\n\tLPA : [-48, -49, -48, -48, -47, -50, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [8, 31]");
            expectedResult.add("\nQS : [-48, -49, -48, -48, -47, -50, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 6]");
            expectedResult.add("\nSS : [-48, -49, -48, -48, -47, -50, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [0, 6]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [8, 31]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -23, -34, -13, -30, -31, -24, -25, -21, -29, -28, -25, -19, -38, -23, -14, -32, -22, -31, -25, -29, -16, -16, -19, -33, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [8, 31]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [33, 45]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, 3, 8, -2, 1, -7, 9, 7, -4, -2, 3, -6, 0, 7, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [33, 45]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 23, 49, 11, 30, 16, 26, 43, 46, 22, 32, 30, 35, 12, 49, 40, 19, 40, 16, 30, 16, 35, 35, 20, 45, 17, 34, 24, 48, 46, 47, 47, 36, 33, 20] in [47, 80]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 20, 17, 11, 20, 16, 16, 16, 19, 22, 12, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [47, 56]");
            expectedResult.add("\n\tLPA : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 20, 17, 11, 20, 16, 16, 16, 19, 22, 12, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [58, 80]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 20, 17, 11, 20, 16, 16, 16, 19, 22, 12, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [47, 56]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 20, 17, 11, 20, 16, 16, 16, 19, 22, 12, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [47, 56]");
            expectedResult.add("\nQS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [58, 80]");
            expectedResult.add("\nSS : [-50, -49, -48, -48, -48, -47, -41, -39, -38, -34, -33, -32, -31, -31, -30, -29, -29, -28, -25, -25, -25, -24, -23, -23, -22, -21, -19, -19, -16, -16, -14, -13, -12, -7, -6, -4, -2, -2, 0, 1, 3, 3, 7, 7, 8, 9, 10, 11, 12, 16, 16, 16, 17, 19, 20, 20, 22, 23, 35, 32, 49, 40, 46, 40, 43, 30, 26, 35, 35, 30, 45, 49, 34, 24, 48, 46, 47, 47, 36, 33, 30] in [58, 80]");
        }
        quicksort.sort(array, fastLoggingResult, 0, array.length - 1);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

    /**
     * Tests the all possible quick sort variations with selection sort optimisation
     * The same rules for the selection of median apply here
     * Tests try sorting in between the given indices instead of the entire array
     * @author Aamin
     */
    @Test
    public void testQuickSortOptimisedBRUTAL() {
        Quicksort quicksort = new Quicksort(PivotFinder.getLastPivot(), 30);
        int[] array;
        int[] sortedArray;
        FastLoggingResult fastLoggingResult;
        List<String> expectedResult;

        array = new int[]{64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, 117, 438, 224, 138, 234, -309, 77, -453, -389, 466, 327, -185, -382, -283, -275, -297, 280, -293, -216, 317, 85, -500, -195, 369, 336, 285, -56, 341, 377, 466, -243, -256, 321, 41, 163, 400, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444};
        sortedArray = new int[]{64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -453, -389, -382, -309, -297, -293, -283, -275, -256, -243, -216, -195, -185, -56, 41, 77, 85, 117, 138, 163, 224, 234, 280, 285, 317, 321, 327, 336, 341, 369, 377, 400, 438, 466, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, 117, 438, 224, 138, 234, -309, 77, -453, -389, 466, 327, -185, -382, -283, -275, -297, 280, -293, -216, 317, 85, -500, -195, 369, 336, 285, -56, 341, 377, 466, -243, -256, 321, 41, 163, 400, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 81]");
            expectedResult.add("\n\tLPA : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, 117, 163, 224, 138, 234, -309, 77, -453, -389, 41, 327, -185, -382, -283, -275, -297, 280, -293, -216, 317, 85, -500, -195, 369, 336, 285, -56, 341, 377, 321, -243, -256, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 77]");
            expectedResult.add("\n\tLPA : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, 117, 163, 224, 138, 234, -309, 77, -453, -389, 41, 327, -185, -382, -283, -275, -297, 280, -293, -216, 317, 85, -500, -195, 369, 336, 285, -56, 341, 377, 321, -243, -256, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [79, 81]");
            expectedResult.add("\nQS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, 117, 163, 224, 138, 234, -309, 77, -453, -389, 41, 327, -185, -382, -283, -275, -297, 280, -293, -216, 317, 85, -500, -195, 369, 336, 285, -56, 341, 377, 321, -243, -256, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 77]");
            expectedResult.add("\n\tLPA : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -293, -297, -275, -283, -309, -382, -453, -389, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 54]");
            expectedResult.add("\n\tLPA : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -293, -297, -275, -283, -309, -382, -453, -389, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [56, 77]");
            expectedResult.add("\nQS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -293, -297, -275, -283, -309, -382, -453, -389, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 54]");
            expectedResult.add("\nSS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -293, -297, -275, -283, -309, -382, -453, -389, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [46, 54]");
            expectedResult.add("\nQS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -453, -389, -382, -309, -297, -293, -283, -275, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [56, 77]");
            expectedResult.add("\nSS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -453, -389, -382, -309, -297, -293, -283, -275, -256, 327, -185, 77, 234, 138, 224, 280, 163, -216, 317, 85, 117, -195, 369, 336, 285, -56, 341, 377, 321, -243, 41, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [56, 77]");
            expectedResult.add("\nQS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -453, -389, -382, -309, -297, -293, -283, -275, -256, -243, -216, -195, -185, -56, 41, 77, 85, 117, 138, 163, 224, 234, 280, 285, 317, 321, 327, 336, 341, 369, 377, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [79, 81]");
            expectedResult.add("\nSS : [64, 54, 76, -481, 331, 404, 42, -191, 352, 264, -113, 55, 442, 108, 174, -131, -122, 327, 444, -63, -290, 449, 382, -80, 137, 56, 168, 68, -437, 414, 493, 106, -20, 361, -240, 311, 175, -166, -338, -229, 257, 73, 157, -306, 20, -483, -500, -453, -389, -382, -309, -297, -293, -283, -275, -256, -243, -216, -195, -185, -56, 41, 77, 85, 117, 138, 163, 224, 234, 280, 285, 317, 321, 327, 336, 341, 369, 377, 400, 466, 438, 466, -342, -77, -296, 128, 457, -498, -149, 89, 324, -371, 122, -195, -199, -271, 448, 199, 37, -88, -94, 221, 254, 164, -209, 327, -2, -137, 474, -190, -132, 282, 69, 453, -168, -235, -468, -67, -61, -464, 315, -492, 105, -152, 92, -308, 100, -330, -415, 377, 142, 113, 322, 148, -349, 108, -28, 491, -432, 378, -497, 142, -236, -243, -190, 77, -391, -10, 108, -466, -57, -434, 449, 90, 222, -469, 320, 479, -211, -217, 390, 304, -252, -29, -335, -160, -494, -480, -110, 365, -76, -298, -465, -359, 379, 157, 268, 213, -71, -176, -26, -146, -81, -149, 19, -111, -434, -63, 458, 410, 88, 200, -389, 16, 258, -136, -62, 325, 185, 166, -483, -119, -395, -457, 247, -370, 126, 247, 280, -185, -438, 178, 211, 145, -87, -334, -131, -261, -67, 175, -451, 50, 57, -436, 140, -259, -220, -66, -351, 272, 362, 360, -199, 427, -32, 121, 210, 98, -175, -281, -261, -440, 130, 309, -6, 356, 207, 40, -159, -146, 144, -393, 486, 323, 307, -80, -443, -325, 495, -384, 180, 468, 250, -125, -158, 64, -296, 281, 229, 345, -72, -79, -368, 92, 325, -201, 109, -453, 406, 224, -436, -475, -294, 15, -328, 168, -260, 33, 2, -9, -154, 34, -307, -146, -115, -86, 29, -406, 409, 170, -444] in [79, 81]");
        }
        quicksort.sort(array, fastLoggingResult, 46, 81);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, 473, 355, 420, -367, 227, 217, 25, 149, -86, -175, 435, -15, -272, 195, -177, 166, -229, 448, -99, 440, -442, -421, -284, 206, -75, 215, -100, -140, -279, -56, -157, -42, 372, 464, 385, 140, 287, -406, 199, 301, -193, 355, 66, -431, 175, 489, 70, -369, 422, 483, 477, 343, -487, 163, 327, 45, 491, -20, 371, 186, -376, -60, -61, 233, 257, 279, 453, -237, 50, -283, 398, -128, 96, 9, 482, -309, -170, 215, -210, -88, -74, 370, -201, -124, 108, 487, -461, -391, -82, 105, -364, -299, 248, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244};
        sortedArray = new int[]{-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -88, -86, -82, -75, -74, -61, -60, -56, -42, -20, -15, 9, 25, 45, 50, 66, 70, 96, 105, 108, 140, 149, 163, 166, 175, 186, 195, 199, 206, 215, 215, 217, 227, 233, 248, 257, 279, 287, 301, 327, 343, 355, 355, 370, 371, 372, 385, 398, 420, 422, 435, 440, 448, 453, 464, 473, 477, 482, 483, 487, 489, 491, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, 473, 355, 420, -367, 227, 217, 25, 149, -86, -175, 435, -15, -272, 195, -177, 166, -229, 448, -99, 440, -442, -421, -284, 206, -75, 215, -100, -140, -279, -56, -157, -42, 372, 464, 385, 140, 287, -406, 199, 301, -193, 355, 66, -431, 175, 489, 70, -369, 422, 483, 477, 343, -487, 163, 327, 45, 491, -20, 371, 186, -376, -60, -61, 233, 257, 279, 453, -237, 50, -283, 398, -128, 96, 9, 482, -309, -170, 215, -210, -88, -74, 370, -201, -124, 108, 487, -461, -391, -82, 105, -364, -299, 248, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 160]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, 105, -367, 227, 217, 25, 149, -86, -175, -82, -15, -272, 195, -177, 166, -229, -391, -99, -461, -442, -421, -284, 206, -75, 215, -100, -140, -279, -56, -157, -42, 108, -124, -201, 140, -74, -406, 199, -88, -193, -210, 66, -431, 175, 215, 70, -369, -170, -309, 9, 96, -487, 163, -128, 45, -283, -20, 50, 186, -376, -60, -61, 233, -237, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 132]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, 105, -367, 227, 217, 25, 149, -86, -175, -82, -15, -272, 195, -177, 166, -229, -391, -99, -461, -442, -421, -284, 206, -75, 215, -100, -140, -279, -56, -157, -42, 108, -124, -201, 140, -74, -406, 199, -88, -193, -210, 66, -431, 175, 215, 70, -369, -170, -309, 9, 96, -487, 163, -128, 45, -283, -20, 50, 186, -376, -60, -61, 233, -237, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [134, 160]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, 105, -367, 227, 217, 25, 149, -86, -175, -82, -15, -272, 195, -177, 166, -229, -391, -99, -461, -442, -421, -284, 206, -75, 215, -100, -140, -279, -56, -157, -42, 108, -124, -201, 140, -74, -406, 199, -88, -193, -210, 66, -431, 175, 215, 70, -369, -170, -309, 9, 96, -487, 163, -128, 45, -283, -20, 50, 186, -376, -60, -61, 233, -237, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 132]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, -376, -367, -283, -487, -309, -369, -431, -406, -279, -284, -272, -421, -442, -461, -391, -237, -99, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -229, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 84]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, -376, -367, -283, -487, -309, -369, -431, -406, -279, -284, -272, -421, -442, -461, -391, -237, -99, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -229, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [86, 132]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, -376, -367, -283, -487, -309, -369, -431, -406, -279, -284, -272, -421, -442, -461, -391, -237, -99, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -229, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 84]");
            expectedResult.add("\nSS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -299, -364, -376, -367, -283, -487, -309, -369, -431, -406, -279, -284, -272, -421, -442, -461, -391, -237, -99, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -229, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [68, 84]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -99, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -229, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [86, 132]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -99, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [86, 85]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -99, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [87, 132]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, 166, -177, 195, -15, 206, -75, 215, -100, -140, -82, -56, -157, -42, 108, -124, -201, 140, -74, -175, 199, -88, -193, -210, 66, -86, 175, 215, 70, 149, -170, 25, 9, 96, 217, 163, -128, 45, 227, -20, 50, 186, 105, -60, -61, 233, -99, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [87, 132]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -128, -177, -170, -210, -193, -175, -201, -100, -140, -124, -157, -99, -42, 108, -82, 215, 140, -74, -75, 199, -88, 206, -15, 66, -86, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, -60, -61, 233, -56, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [87, 97]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -128, -177, -170, -210, -193, -175, -201, -100, -140, -124, -157, -99, -42, 108, -82, 215, 140, -74, -75, 199, -88, 206, -15, 66, -86, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, -60, -61, 233, -56, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [99, 132]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -128, -177, -170, -210, -193, -175, -201, -100, -140, -124, -157, -99, -42, 108, -82, 215, 140, -74, -75, 199, -88, 206, -15, 66, -86, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, -60, -61, 233, -56, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [87, 97]");
            expectedResult.add("\nSS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -128, -177, -170, -210, -193, -175, -201, -100, -140, -124, -157, -99, -42, 108, -82, 215, 140, -74, -75, 199, -88, 206, -15, 66, -86, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, -60, -61, 233, -56, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [87, 97]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -42, 108, -82, 215, 140, -74, -75, 199, -88, 206, -15, 66, -86, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, -60, -61, 233, -56, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [99, 132]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -61, -60, -82, -86, -88, -74, -75, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [99, 105]");
            expectedResult.add("\n\tLPA : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -61, -60, -82, -86, -88, -74, -75, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [107, 132]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -61, -60, -82, -86, -88, -74, -75, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [99, 105]");
            expectedResult.add("\nSS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -61, -60, -82, -86, -88, -74, -75, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [99, 105]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -88, -86, -82, -75, -74, -61, -60, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [107, 132]");
            expectedResult.add("\nSS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -88, -86, -82, -75, -74, -61, -60, -56, 140, 206, -15, 66, 215, 175, 215, 70, 149, 195, 25, 9, 96, 217, 163, 166, 45, 227, -20, 50, 186, 105, 108, -42, 233, 199, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [107, 132]");
            expectedResult.add("\nQS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -88, -86, -82, -75, -74, -61, -60, -56, -42, -20, -15, 9, 25, 45, 50, 66, 70, 96, 105, 108, 140, 149, 163, 166, 175, 186, 195, 199, 206, 215, 215, 217, 227, 233, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [134, 160]");
            expectedResult.add("\nSS : [-128, 491, -177, -115, -461, -111, 105, 378, 96, 443, 19, 160, -174, 424, -10, 222, 200, -280, -413, 214, 457, 8, -143, -361, -197, -411, -442, -88, 0, -301, -51, -38, -422, 312, 166, -47, 445, -46, 67, 447, -118, 289, -410, 429, -67, -294, -280, 350, -12, 97, -276, 242, -280, -93, -142, 388, -144, -139, -104, 0, 136, -59, -181, -171, -151, 51, -221, 410, -487, -461, -442, -431, -421, -406, -391, -376, -369, -367, -364, -309, -299, -284, -283, -279, -272, -237, -229, -210, -201, -193, -177, -175, -170, -157, -140, -128, -124, -100, -99, -88, -86, -82, -75, -74, -61, -60, -56, -42, -20, -15, 9, 25, 45, 50, 66, 70, 96, 105, 108, 140, 149, 163, 166, 175, 186, 195, 199, 206, 215, 215, 217, 227, 233, 248, 453, 257, 371, 491, 398, 327, 343, 477, 482, 483, 422, 489, 355, 301, 287, 370, 385, 464, 372, 487, 440, 448, 435, 420, 355, 473, 279, 362, 469, -106, 333, -126, -131, -436, 151, 135, 57, 418, -289, 162, 366, 259, -72, 393, -436, -315, 406, 223, 70, 445, 364, -388, 477, -441, -421, -430, -100, 111, 415, 277, 231, -239, 210, -498, -483, -263, -492, -115, -260, 472, 34, 200, -405, 85, -125, 228, -190, -261, -478, 246, -218, -52, -266, -129, -286, -70, -443, 242, -89, 293, 342, -85, 171, -265, -162, -442, -104, -64, -317, 1, 243, -26, 12, -369, -363, -380, -431, 2, -170, -306, 175, -379, -211, -57, 380, 379, -148, -417, -376, -2, 416, 84, -28, 376, 55, -53, -267, -49, 266, 139, 296, 369, 466, 15, -310, -131, -18, 398, -233, 297, -454, -95, -96, -75, 492, 96, -182, -36, 496, 409, 369, -30, -324, 422, -420, -370, -35, 289, -239, -251, -344, 383, -295, 192, 469, -41, 390, 388, -43, -154, 169, -244] in [134, 160]");
        }
        quicksort.sort(array, fastLoggingResult, 68, 160);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

        quicksort = new Quicksort(PivotFinder.getMidPivot(), 30);

        array = new int[]{-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, 333, 19, -6, 435, -247, -473, 380, -118, 497, -258, -440, 480, -417, -302, -167, 88, 90, -2, 229, 299, 289, -207, 239, 385, -37, -250, -128, -91, -152, 408, 417, 423, -259, -77, 343, -477, -80, 366, 259, 239, 361, -372, -211, -221, 441, 105, -340, -200, -446, -222, -259, 90, 219, -419, -98, 218, 246, 32, -418, 76, -449, -251, -229, 176, -485, 427, -305, -212, -333, -280, 135, -178, 195, -390, 489, -162, 364, 469, -102, -134, 378, 158, 490, -500, 386, 214, -291, -466, 332, -133, 318, -18, -463, 193, 89, -228, 346, -51, -347, -40, 220, -223, -323, 400, 371, -309, -270, 471, -310, -119, 471, -302, -27, 479, 320, -69, 139, 249, 135, -183, -485, 148, 492, 191, 417, 390, -207, 176, -163, 238, 296, -268, -471, 470, 209, -197, -315, -379, 19, -159, -127, 137, 430, 331, -418, -207, -45, -163, -119, 465, -471, -43, -451, -449, 477, -318, 460, -174, 341, -305, -494, 226, 65, 364, 126, -118, -234, 43, 389, 154, 256, -488, -51, -287, 412, -47, 483, 272, -57, 277, -39, 82, 247, 81, -416, 247, -156, 53, 133, -40, 177, 182, 107, -20, 5, -404, 78, 489, -39, -117, -241, 447, -162, -392, -439, 70, 460, -191, -170, -136, -487, -193, 78, -296, -196, 311, -466, -198, 373, 91, -127, -316, -101, 24, 285, -14, 449, -383, -163, 280, -130, -328, 278, 136, 423, 76, -431, -285, -181, -193, -316, 132, 187, -130, -499, 312, 317, 124, 284, -422, -308, -224, 347, -141, -123, -342, -43, -298, -329, -371, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487};
        sortedArray = new int[]{-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 366, 371, 373, 378, 380, 385, 386, 389, 390, 400, 408, 412, 417, 417, 423, 423, 427, 430, 435, 441, 447, 449, 460, 460, 465, 469, 470, 471, 471, 477, 479, 480, 483, 489, 489, 490, 492, 497, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, 333, 19, -6, 435, -247, -473, 380, -118, 497, -258, -440, 480, -417, -302, -167, 88, 90, -2, 229, 299, 289, -207, 239, 385, -37, -250, -128, -91, -152, 408, 417, 423, -259, -77, 343, -477, -80, 366, 259, 239, 361, -372, -211, -221, 441, 105, -340, -200, -446, -222, -259, 90, 219, -419, -98, 218, 246, 32, -418, 76, -449, -251, -229, 176, -485, 427, -305, -212, -333, -280, 135, -178, 195, -390, 489, -162, 364, 469, -102, -134, 378, 158, 490, -500, 386, 214, -291, -466, 332, -133, 318, -18, -463, 193, 89, -228, 346, -51, -347, -40, 220, -223, -323, 400, 371, -309, -270, 471, -310, -119, 471, -302, -27, 479, 320, -69, 139, 249, 135, -183, -485, 148, 492, 191, 417, 390, -207, 176, -163, 238, 296, -268, -471, 470, 209, -197, -315, -379, 19, -159, -127, 137, 430, 331, -418, -207, -45, -163, -119, 465, -471, -43, -451, -449, 477, -318, 460, -174, 341, -305, -494, 226, 65, 364, 126, -118, -234, 43, 389, 154, 256, -488, -51, -287, 412, -47, 483, 272, -57, 277, -39, 82, 247, 81, -416, 247, -156, 53, 133, -40, 177, 182, 107, -20, 5, -404, 78, 489, -39, -117, -241, 447, -162, -392, -439, 70, 460, -191, -170, -136, -487, -193, 78, -296, -196, 311, -466, -198, 373, 91, -127, -316, -101, 24, 285, -14, 449, -383, -163, 280, -130, -328, 278, 136, 423, 76, -431, -285, -181, -193, -316, 132, 187, -130, -499, 312, 317, 124, 284, -422, -308, -224, 347, -141, -123, -342, -43, -298, -329, -371, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 286]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 90, -2, 229, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, 124, -499, -130, -259, -77, 187, -477, -80, 132, -316, -193, -181, -372, -211, -221, -285, 105, -340, -200, -446, -222, -259, 90, 219, -419, -98, 218, -431, 32, -418, 76, -449, -251, -229, 176, -485, 76, -305, -212, -333, -280, 135, -178, 195, -390, 136, -162, -328, -130, -102, -134, -163, 158, -383, -500, -14, 214, -291, -466, 24, -133, -101, -18, -463, 193, 89, -228, -316, -51, -347, -40, 220, -223, -323, -127, 91, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, 139, 78, 135, -183, -485, 148, -193, 191, -487, -136, -207, 176, -163, -371, -170, -268, -471, -191, 209, -197, -315, -379, 19, -159, -127, 137, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, -241, -174, -117, -305, -494, 226, 65, -39, 126, -118, -234, 43, 78, 154, -404, -488, -51, -287, 5, -47, -20, 107, -57, 182, -39, 82, 177, 81, -416, -40, -156, 53, 133, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 215]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 90, -2, 229, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, 124, -499, -130, -259, -77, 187, -477, -80, 132, -316, -193, -181, -372, -211, -221, -285, 105, -340, -200, -446, -222, -259, 90, 219, -419, -98, 218, -431, 32, -418, 76, -449, -251, -229, 176, -485, 76, -305, -212, -333, -280, 135, -178, 195, -390, 136, -162, -328, -130, -102, -134, -163, 158, -383, -500, -14, 214, -291, -466, 24, -133, -101, -18, -463, 193, 89, -228, -316, -51, -347, -40, 220, -223, -323, -127, 91, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, 139, 78, 135, -183, -485, 148, -193, 191, -487, -136, -207, 176, -163, -371, -170, -268, -471, -191, 209, -197, -315, -379, 19, -159, -127, 137, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, -241, -174, -117, -305, -494, 226, 65, -39, 126, -118, -234, 43, 78, 154, -404, -488, -51, -287, 5, -47, -20, 107, -57, 182, -39, 82, 177, 81, -416, -40, -156, 53, 133, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [217, 286]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 90, -2, 229, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, 124, -499, -130, -259, -77, 187, -477, -80, 132, -316, -193, -181, -372, -211, -221, -285, 105, -340, -200, -446, -222, -259, 90, 219, -419, -98, 218, -431, 32, -418, 76, -449, -251, -229, 176, -485, 76, -305, -212, -333, -280, 135, -178, 195, -390, 136, -162, -328, -130, -102, -134, -163, 158, -383, -500, -14, 214, -291, -466, 24, -133, -101, -18, -463, 193, 89, -228, -316, -51, -347, -40, 220, -223, -323, -127, 91, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, 139, 78, 135, -183, -485, 148, -193, 191, -487, -136, -207, 176, -163, -371, -170, -268, -471, -191, 209, -197, -315, -379, 19, -159, -127, 137, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, -241, -174, -117, -305, -494, 226, 65, -39, 126, -118, -234, 43, 78, 154, -404, -488, -51, -287, 5, -47, -20, 107, -57, 182, -39, 82, 177, 81, -416, -40, -156, 53, 133, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 215]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 53, -2, -156, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, -40, -499, -130, -259, -77, -416, -477, -80, 81, -316, -193, -181, -372, -211, -221, -285, 82, -340, -200, -446, -222, -259, -39, -57, -419, -98, -20, -431, 32, -418, 76, -449, -251, -229, -47, -485, 76, -305, -212, -333, -280, 5, -178, -287, -390, -51, -162, -328, -130, -102, -134, -163, -488, -383, -500, -14, -404, -291, -466, 24, -133, -101, -18, -463, 78, 43, -228, -316, -51, -347, -40, -234, -223, -323, -127, -118, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, -39, 78, 65, -183, -485, -494, -193, -305, -487, -136, -207, -117, -163, -371, -170, -268, -471, -191, -174, -197, -315, -379, 19, -159, -127, -241, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 182]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 53, -2, -156, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, -40, -499, -130, -259, -77, -416, -477, -80, 81, -316, -193, -181, -372, -211, -221, -285, 82, -340, -200, -446, -222, -259, -39, -57, -419, -98, -20, -431, 32, -418, 76, -449, -251, -229, -47, -485, 76, -305, -212, -333, -280, 5, -178, -287, -390, -51, -162, -328, -130, -102, -134, -163, -488, -383, -500, -14, -404, -291, -466, 24, -133, -101, -18, -463, 78, 43, -228, -316, -51, -347, -40, -234, -223, -323, -127, -118, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, -39, 78, 65, -183, -485, -494, -193, -305, -487, -136, -207, -117, -163, -371, -170, -268, -471, -191, -174, -197, -315, -379, 19, -159, -127, -241, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [184, 215]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, 19, -6, -298, -247, -473, -43, -118, -342, -258, -440, -123, -417, -302, -167, 88, 53, -2, -156, -141, -224, -207, -308, -422, -37, -250, -128, -91, -152, -40, -499, -130, -259, -77, -416, -477, -80, 81, -316, -193, -181, -372, -211, -221, -285, 82, -340, -200, -446, -222, -259, -39, -57, -419, -98, -20, -431, 32, -418, 76, -449, -251, -229, -47, -485, 76, -305, -212, -333, -280, 5, -178, -287, -390, -51, -162, -328, -130, -102, -134, -163, -488, -383, -500, -14, -404, -291, -466, 24, -133, -101, -18, -463, 78, 43, -228, -316, -51, -347, -40, -234, -223, -323, -127, -118, -309, -270, -198, -310, -119, -466, -302, -27, -196, -296, -69, -39, 78, 65, -183, -485, -494, -193, -305, -487, -136, -207, -117, -163, -371, -170, -268, -471, -191, -174, -197, -315, -379, 19, -159, -127, -241, 70, -439, -418, -207, -45, -163, -119, -392, -471, -43, -451, -449, -162, -318, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 182]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -162, -449, -298, -247, -473, -451, -471, -342, -258, -440, -392, -417, -302, -167, -163, -207, -418, -156, -141, -224, -207, -308, -422, -439, -250, -241, -159, -152, -379, -499, -315, -259, -197, -416, -477, -174, -191, -316, -193, -181, -372, -211, -221, -285, -471, -340, -200, -446, -222, -259, -268, -170, -419, -371, -163, -431, -207, -418, -136, -449, -251, -229, -487, -485, -305, -305, -212, -333, -280, -193, -178, -287, -390, -494, -162, -328, -318, -485, -134, -163, -488, -383, -500, -183, -404, -291, -466, -296, -133, -196, -302, -463, -466, -310, -228, -316, -198, -347, -270, -234, -223, -323, -309, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 130]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -162, -449, -298, -247, -473, -451, -471, -342, -258, -440, -392, -417, -302, -167, -163, -207, -418, -156, -141, -224, -207, -308, -422, -439, -250, -241, -159, -152, -379, -499, -315, -259, -197, -416, -477, -174, -191, -316, -193, -181, -372, -211, -221, -285, -471, -340, -200, -446, -222, -259, -268, -170, -419, -371, -163, -431, -207, -418, -136, -449, -251, -229, -487, -485, -305, -305, -212, -333, -280, -193, -178, -287, -390, -494, -162, -328, -318, -485, -134, -163, -488, -383, -500, -183, -404, -291, -466, -296, -133, -196, -302, -463, -466, -310, -228, -316, -198, -347, -270, -234, -223, -323, -309, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [132, 182]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -162, -449, -298, -247, -473, -451, -471, -342, -258, -440, -392, -417, -302, -167, -163, -207, -418, -156, -141, -224, -207, -308, -422, -439, -250, -241, -159, -152, -379, -499, -315, -259, -197, -416, -477, -174, -191, -316, -193, -181, -372, -211, -221, -285, -471, -340, -200, -446, -222, -259, -268, -170, -419, -371, -163, -431, -207, -418, -136, -449, -251, -229, -487, -485, -305, -305, -212, -333, -280, -193, -178, -287, -390, -494, -162, -328, -318, -485, -134, -163, -488, -383, -500, -183, -404, -291, -466, -296, -133, -196, -302, -463, -466, -310, -228, -316, -198, -347, -270, -234, -223, -323, -309, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 130]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -323, -449, -298, -270, -473, -451, -471, -342, -347, -440, -392, -417, -302, -316, -310, -466, -418, -463, -302, -296, -466, -308, -422, -439, -291, -404, -500, -383, -379, -499, -315, -488, -485, -416, -477, -318, -328, -316, -494, -390, -372, -287, -280, -285, -471, -340, -333, -446, -305, -305, -309, -485, -419, -371, -487, -431, -449, -418, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 85]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -323, -449, -298, -270, -473, -451, -471, -342, -347, -440, -392, -417, -302, -316, -310, -466, -418, -463, -302, -296, -466, -308, -422, -439, -291, -404, -500, -383, -379, -499, -315, -488, -485, -416, -477, -318, -328, -316, -494, -390, -372, -287, -280, -285, -471, -340, -333, -446, -305, -305, -309, -485, -419, -371, -487, -431, -449, -418, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [87, 130]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -329, -323, -449, -298, -270, -473, -451, -471, -342, -347, -440, -392, -417, -302, -316, -310, -466, -418, -463, -302, -296, -466, -308, -422, -439, -291, -404, -500, -383, -379, -499, -315, -488, -485, -416, -477, -318, -328, -316, -494, -390, -372, -287, -280, -285, -471, -340, -333, -446, -305, -305, -309, -485, -419, -371, -487, -431, -449, -418, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 85]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -449, -431, -449, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -494, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -500, -383, -418, -499, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 57]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -449, -431, -449, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -494, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -500, -383, -418, -499, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [59, 85]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -449, -431, -449, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -494, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -500, -383, -418, -499, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 57]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 28]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [30, 57]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 28]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [27, 28]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [30, 57]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -487, -419, -473, -451, -471, -485, -446, -440, -392, -417, -471, -390, -431, -466, -418, -463, -477, -416, -466, -485, -422, -439, -488, -404, -449, -383, -418, -449, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [30, 57]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [59, 85]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -291, -308, -296, -302, -318, -328, -316, -310, -316, -372, -287, -280, -285, -302, -340, -333, -347, -305, -305, -309, -342, -270, -371, -298, -323, -329, -315, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [59, 85]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -207, -251, -229, -163, -170, -259, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -259, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -136, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [87, 130]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -136, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -251, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [87, 87]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -136, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -251, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 130]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -134, -163, -136, -152, -159, -183, -241, -250, -207, -224, -133, -196, -141, -156, -207, -163, -228, -167, -198, -258, -247, -234, -223, -162, -251, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 130]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -162, -163, -223, -251, -159, -183, -241, -250, -207, -224, -234, -196, -247, -156, -207, -163, -228, -167, -198, -258, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 125]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -162, -163, -223, -251, -159, -183, -241, -250, -207, -224, -234, -196, -247, -156, -207, -163, -228, -167, -198, -258, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [127, 130]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -163, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -162, -191, -174, -197, -162, -163, -223, -251, -159, -183, -241, -250, -207, -224, -234, -196, -247, -156, -207, -163, -228, -167, -198, -258, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 125]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -167, -191, -174, -197, -228, -258, -223, -251, -163, -183, -241, -250, -207, -224, -234, -196, -247, -207, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 119]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -167, -191, -174, -197, -228, -258, -223, -251, -163, -183, -241, -250, -207, -224, -234, -196, -247, -207, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [121, 125]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -170, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -167, -191, -174, -197, -228, -258, -223, -251, -163, -183, -241, -250, -207, -224, -234, -196, -247, -207, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 119]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -247, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -196, -191, -207, -197, -228, -258, -223, -251, -234, -183, -241, -250, -207, -224, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 115]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -247, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -196, -191, -207, -197, -228, -258, -223, -251, -234, -183, -241, -250, -207, -224, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [117, 119]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -247, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -196, -191, -207, -197, -228, -258, -223, -251, -234, -183, -241, -250, -207, -224, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 115]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -229, -198, -247, -207, -222, -212, -200, -221, -193, -178, -211, -181, -193, -196, -191, -207, -197, -228, -258, -223, -251, -234, -183, -241, -250, -207, -224, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [89, 115]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [117, 119]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -167, -170, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [117, 119]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [121, 125]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -159, -162, -162, -163, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [121, 125]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [127, 130]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -133, -136, -134, -141, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [127, 130]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -127, -40, -51, 43, -119, 78, -18, -27, -101, 24, -69, -39, 78, 65, -14, -102, -51, 5, 76, -47, 76, 32, -117, -20, -98, -57, -39, 82, 81, -80, -77, -130, -40, 19, -91, -127, -128, 70, -37, -2, 53, -45, 88, -119, -123, -118, -43, -43, -6, 19, -118, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [132, 182]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -127, -118, -123, -119, -119, -128, -127, -91, -101, -130, -69, -77, -80, -118, -98, -102, -117, -57, 76, -47, 76, 32, -51, -20, -14, 65, -39, 82, 81, 78, -39, 24, -40, 19, -27, -18, 78, 70, -37, -2, 53, -45, 88, 43, -51, -40, -43, -43, -6, 19, 5, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [132, 148]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -127, -118, -123, -119, -119, -128, -127, -91, -101, -130, -69, -77, -80, -118, -98, -102, -117, -57, 76, -47, 76, 32, -51, -20, -14, 65, -39, 82, 81, 78, -39, 24, -40, 19, -27, -18, 78, 70, -37, -2, 53, -45, 88, 43, -51, -40, -43, -43, -6, 19, 5, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [150, 182]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -127, -118, -123, -119, -119, -128, -127, -91, -101, -130, -69, -77, -80, -118, -98, -102, -117, -57, 76, -47, 76, 32, -51, -20, -14, 65, -39, 82, 81, 78, -39, 24, -40, 19, -27, -18, 78, 70, -37, -2, 53, -45, 88, 43, -51, -40, -43, -43, -6, 19, 5, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [132, 148]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -127, -118, -123, -119, -119, -128, -127, -91, -101, -130, -69, -77, -80, -118, -98, -102, -117, -57, 76, -47, 76, 32, -51, -20, -14, 65, -39, 82, 81, 78, -39, 24, -40, 19, -27, -18, 78, 70, -37, -2, 53, -45, 88, 43, -51, -40, -43, -43, -6, 19, 5, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [132, 148]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, 76, -47, 76, 32, -51, -20, -14, 65, -39, 82, 81, 78, -39, 24, -40, 19, -27, -18, 78, 70, -37, -2, 53, -45, 88, 43, -51, -40, -43, -43, -6, 19, 5, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [150, 182]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -43, -47, -43, -40, -51, -51, -45, -37, -39, -40, -39, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [150, 160]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -43, -47, -43, -40, -51, -51, -45, -37, -39, -40, -39, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [162, 182]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -43, -47, -43, -40, -51, -51, -45, -37, -39, -40, -39, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [150, 160]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -43, -47, -43, -40, -51, -51, -45, -37, -39, -40, -39, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [150, 160]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [162, 182]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, 81, 24, 82, 19, 5, -18, 78, 70, 65, -2, 53, -14, 88, 43, -20, 32, 76, 76, -6, 19, 78, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [162, 182]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 209, 176, 191, 148, 226, 135, 139, 126, 91, 220, 133, 193, 154, 214, 158, 136, 195, 135, 176, 218, 107, 219, 182, 90, 105, 177, 132, 187, 124, 229, 90, 137, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [184, 215]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 124, 132, 105, 90, 135, 107, 126, 91, 135, 133, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [184, 194]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 124, 132, 105, 90, 135, 107, 126, 91, 135, 133, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [196, 215]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 124, 132, 105, 90, 135, 107, 126, 91, 135, 133, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [184, 194]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 124, 132, 105, 90, 135, 107, 126, 91, 135, 133, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [184, 194]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [196, 215]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 154, 214, 158, 137, 195, 220, 176, 218, 139, 219, 182, 226, 148, 177, 191, 187, 176, 229, 209, 193, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [196, 215]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 247, 277, 272, 483, 412, 256, 389, 489, 364, 341, 460, 447, 477, 465, 331, 430, 460, 470, 296, 390, 417, 492, 249, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 285, 386, 449, 490, 378, 280, 469, 364, 278, 489, 423, 427, 246, 441, 361, 239, 259, 366, 343, 423, 417, 312, 317, 408, 284, 385, 239, 289, 347, 299, 480, 497, 380, 435, 333, 247, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [217, 286]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 247, 277, 272, 239, 284, 256, 259, 239, 246, 278, 280, 247, 249, 285, 331, 430, 460, 470, 296, 390, 417, 492, 477, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 447, 386, 449, 490, 378, 460, 469, 364, 341, 489, 423, 427, 364, 441, 361, 489, 389, 366, 343, 423, 417, 312, 317, 408, 412, 385, 483, 289, 347, 299, 480, 497, 380, 435, 333, 465, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [217, 229]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 247, 277, 272, 239, 284, 256, 259, 239, 246, 278, 280, 247, 249, 285, 331, 430, 460, 470, 296, 390, 417, 492, 477, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 447, 386, 449, 490, 378, 460, 469, 364, 341, 489, 423, 427, 364, 441, 361, 489, 389, 366, 343, 423, 417, 312, 317, 408, 412, 385, 483, 289, 347, 299, 480, 497, 380, 435, 333, 465, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [231, 286]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 247, 277, 272, 239, 284, 256, 259, 239, 246, 278, 280, 247, 249, 285, 331, 430, 460, 470, 296, 390, 417, 492, 477, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 447, 386, 449, 490, 378, 460, 469, 364, 341, 489, 423, 427, 364, 441, 361, 489, 389, 366, 343, 423, 417, 312, 317, 408, 412, 385, 483, 289, 347, 299, 480, 497, 380, 435, 333, 465, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [217, 229]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 247, 277, 272, 239, 284, 256, 259, 239, 246, 278, 280, 247, 249, 285, 331, 430, 460, 470, 296, 390, 417, 492, 477, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 447, 386, 449, 490, 378, 460, 469, 364, 341, 489, 423, 427, 364, 441, 361, 489, 389, 366, 343, 423, 417, 312, 317, 408, 412, 385, 483, 289, 347, 299, 480, 497, 380, 435, 333, 465, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [217, 229]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 331, 430, 460, 470, 296, 390, 417, 492, 477, 320, 479, 311, 471, 471, 373, 371, 400, 346, 318, 332, 447, 386, 449, 490, 378, 460, 469, 364, 341, 489, 423, 427, 364, 441, 361, 489, 389, 366, 343, 423, 417, 312, 317, 408, 412, 385, 483, 289, 347, 299, 480, 497, 380, 435, 333, 465, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [231, 286]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 331, 333, 299, 347, 296, 289, 317, 312, 343, 320, 361, 311, 364, 341, 332, 318, 346, 364, 371, 373, 447, 386, 449, 490, 378, 460, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 389, 366, 477, 423, 417, 492, 417, 408, 412, 385, 483, 390, 470, 460, 480, 497, 380, 435, 430, 400, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [231, 247]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 331, 333, 299, 347, 296, 289, 317, 312, 343, 320, 361, 311, 364, 341, 332, 318, 346, 364, 371, 373, 447, 386, 449, 490, 378, 460, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 389, 366, 477, 423, 417, 492, 417, 408, 412, 385, 483, 390, 470, 460, 480, 497, 380, 435, 430, 400, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [249, 286]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 331, 333, 299, 347, 296, 289, 317, 312, 343, 320, 361, 311, 364, 341, 332, 318, 346, 364, 371, 373, 447, 386, 449, 490, 378, 460, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 389, 366, 477, 423, 417, 492, 417, 408, 412, 385, 483, 390, 470, 460, 480, 497, 380, 435, 430, 400, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [231, 247]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 331, 333, 299, 347, 296, 289, 317, 312, 343, 320, 361, 311, 364, 341, 332, 318, 346, 364, 371, 373, 447, 386, 449, 490, 378, 460, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 389, 366, 477, 423, 417, 492, 417, 408, 412, 385, 483, 390, 470, 460, 480, 497, 380, 435, 430, 400, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [231, 247]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 371, 373, 447, 386, 449, 490, 378, 460, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 389, 366, 477, 423, 417, 492, 417, 408, 412, 385, 483, 390, 470, 460, 480, 497, 380, 435, 430, 400, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [249, 286]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 371, 373, 380, 386, 385, 366, 378, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [249, 255]");
            expectedResult.add("\n\tLPA : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 371, 373, 380, 386, 385, 366, 378, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [257, 286]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 371, 373, 380, 386, 385, 366, 378, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [249, 255]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 371, 373, 380, 386, 385, 366, 378, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [249, 255]");
            expectedResult.add("\nQS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 366, 371, 373, 378, 380, 385, 386, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [257, 286]");
            expectedResult.add("\nSS : [-65, 47, -71, -481, 44, -352, -166, 434, -469, 357, 189, 140, -272, -433, -287, -112, 335, -28, -226, -407, 123, 256, -370, 478, -138, 47, 102, -500, -499, -494, -488, -487, -485, -485, -477, -473, -471, -471, -466, -466, -463, -451, -449, -449, -446, -440, -439, -431, -422, -419, -418, -418, -417, -416, -404, -392, -390, -383, -379, -372, -371, -347, -342, -340, -333, -329, -328, -323, -318, -316, -316, -315, -310, -309, -308, -305, -305, -302, -302, -298, -296, -291, -287, -285, -280, -270, -268, -259, -259, -258, -251, -250, -247, -241, -234, -229, -228, -224, -223, -222, -221, -212, -211, -207, -207, -207, -200, -198, -197, -196, -193, -193, -191, -183, -181, -178, -174, -170, -167, -163, -163, -163, -162, -162, -159, -156, -152, -141, -136, -134, -133, -130, -130, -128, -127, -127, -123, -119, -119, -118, -118, -117, -102, -101, -98, -91, -80, -77, -69, -57, -51, -51, -47, -45, -43, -43, -40, -40, -39, -39, -37, -27, -20, -18, -14, -6, -2, 5, 19, 19, 24, 32, 43, 53, 65, 70, 76, 76, 78, 78, 81, 82, 88, 89, 90, 90, 91, 105, 107, 124, 126, 132, 133, 135, 135, 136, 137, 139, 148, 154, 158, 176, 176, 177, 182, 187, 191, 193, 195, 209, 214, 218, 219, 220, 226, 229, 238, 239, 239, 246, 247, 247, 249, 256, 259, 272, 277, 278, 280, 284, 285, 289, 296, 299, 311, 312, 317, 318, 320, 331, 332, 333, 341, 343, 346, 347, 361, 364, 364, 366, 371, 373, 378, 380, 385, 386, 389, 469, 465, 471, 489, 423, 427, 471, 441, 479, 489, 400, 490, 477, 423, 417, 492, 417, 408, 412, 449, 483, 390, 470, 460, 480, 497, 447, 435, 430, 460, 288, -479, -400, -330, 472, -344, -199, -230, 137, -164, 205, -498, 385, -487] in [257, 286]");
        }
        quicksort.sort(array, fastLoggingResult, 27, 286);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-127, 205, 421, -133, -146, 92, 333, 360, -1, 88, -5, -113, -395, 101, 373, -227, -182, 243, 252, -305, 111, -452, -178, -75, 71, 102, 454, -86, -247, -117, -84, 80, -466, -301, -278, 176, 96, 355, 196, 239, -374, -241, -101, 300, 74, -53, 238, 293, 351, -121, 373, -486, 201, 352, -100, 49, 204, 211, -407, -408, 48, -51, -198, -350, -455, 199, 70, -160, -403, 149, 414, 481, -361, -140, 407, 492, 104, 291, -273, 410, 52, 171, -135, -463, -88, 192, 295, 26, 398, 194, -61, -196, -118, 421, 194, 42, 109, 243, 429, -441, -181, 4, 157, 442, 67, -196, -373, -428, 290, -229, 186, -154, 397, -183, -438, 320, -279, -216, 129, -428, 248, -420, -497, -135, -237, 421, -410, -92, 54, 229, -132, -424, 325, -475, -209, -370, 297, 282, -244, -120, -434, 61, -100, 303, -196, -392, 28, -268, 16, 411, 255, 147, 495, -265, -294, 356, -1, 202, 460, -300, 121, 49, -273, 432, -122, 180, 263, -231, -19, 242, 110, 451, -249, -459, -246, -305, -361, 193, 28, -495, 497, 102, 30, 332, 278, -234, -472, 232, 193, 104, 342, -226, 193, 345, 26, -118, -292, -388, 361, -1, -36, 121, 493, 177, -96, 305, 239, 412, -62, -126, -442, -486, -8, 125, 344, -47, -318, 125, -92, -454, 439, -358, 266, -58, -253, -141, 344, -413, -71, -461, 450, 276, 145, -494, 260, 7, 415, -460, -33, -328, -72, -394, 150, -261, 233, -500, 275, 31, 293, -336, 163, -11, -253, 366, -477, 296, 2, 274, 294, -498, 362, 219, -44, 373, -463, 281, -392, 473, -186, -95, 342, -263, 149, 201, -265, -103, 472, 311, -422, 418, -58, -492, 129, -362, -398, 78, 277, -352, 307, 451, -1, -32, 339, -415, -491, 20, -449, -150, -387, 274, 106, 469, -376, -191, 310, 48};
        sortedArray = new int[]{-127, 205, 421, -133, -146, 92, 333, 360, -1, 88, -5, -113, -395, 101, 373, -227, -182, 243, 252, -305, 111, -452, -178, -75, 71, 102, 454, -86, -247, -117, -84, 80, -466, -301, -278, 176, 96, 355, 196, 239, -374, -241, -101, 300, 74, -53, 238, 293, 351, -121, 373, -486, 201, 352, -100, 49, 204, 211, -407, -408, 48, -51, -198, -350, -455, 199, 70, -160, -403, 149, 414, 481, -361, -140, 407, 492, 104, 291, -273, 410, 52, 171, -135, -463, -88, 192, 295, 26, 398, 194, -441, -438, -428, -373, -279, -229, -216, -196, -196, -183, -181, -154, -118, -61, 4, 42, 67, 109, 129, 157, 186, 194, 243, 290, 320, 397, 421, 429, 442, -428, 248, -420, -497, -135, -237, 421, -410, -92, 54, 229, -132, -424, 325, -475, -209, -370, 297, 282, -244, -120, -434, 61, -100, 303, -196, -392, 28, -268, 16, 411, 255, 147, 495, -265, -294, 356, -1, 202, 460, -300, 121, 49, -273, 432, -122, 180, 263, -231, -19, 242, 110, 451, -249, -459, -246, -305, -361, 193, 28, -495, 497, 102, 30, 332, 278, -234, -472, 232, 193, 104, 342, -226, 193, 345, 26, -118, -292, -388, 361, -1, -36, 121, 493, 177, -96, 305, 239, 412, -62, -126, -442, -486, -8, 125, 344, -47, -318, 125, -92, -454, 439, -358, 266, -58, -253, -141, 344, -413, -71, -461, 450, 276, 145, -494, 260, 7, 415, -460, -33, -328, -72, -394, 150, -261, 233, -500, 275, 31, 293, -336, 163, -11, -253, 366, -477, 296, 2, 274, 294, -498, 362, 219, -44, 373, -463, 281, -392, 473, -186, -95, 342, -263, 149, 201, -265, -103, 472, 311, -422, 418, -58, -492, 129, -362, -398, 78, 277, -352, 307, 451, -1, -32, 339, -415, -491, 20, -449, -150, -387, 274, 106, 469, -376, -191, 310, 48};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-127, 205, 421, -133, -146, 92, 333, 360, -1, 88, -5, -113, -395, 101, 373, -227, -182, 243, 252, -305, 111, -452, -178, -75, 71, 102, 454, -86, -247, -117, -84, 80, -466, -301, -278, 176, 96, 355, 196, 239, -374, -241, -101, 300, 74, -53, 238, 293, 351, -121, 373, -486, 201, 352, -100, 49, 204, 211, -407, -408, 48, -51, -198, -350, -455, 199, 70, -160, -403, 149, 414, 481, -361, -140, 407, 492, 104, 291, -273, 410, 52, 171, -135, -463, -88, 192, 295, 26, 398, 194, -61, -196, -118, 421, 194, 42, 109, 243, 429, -441, -181, 4, 157, 442, 67, -196, -373, -428, 290, -229, 186, -154, 397, -183, -438, 320, -279, -216, 129, -428, 248, -420, -497, -135, -237, 421, -410, -92, 54, 229, -132, -424, 325, -475, -209, -370, 297, 282, -244, -120, -434, 61, -100, 303, -196, -392, 28, -268, 16, 411, 255, 147, 495, -265, -294, 356, -1, 202, 460, -300, 121, 49, -273, 432, -122, 180, 263, -231, -19, 242, 110, 451, -249, -459, -246, -305, -361, 193, 28, -495, 497, 102, 30, 332, 278, -234, -472, 232, 193, 104, 342, -226, 193, 345, 26, -118, -292, -388, 361, -1, -36, 121, 493, 177, -96, 305, 239, 412, -62, -126, -442, -486, -8, 125, 344, -47, -318, 125, -92, -454, 439, -358, 266, -58, -253, -141, 344, -413, -71, -461, 450, 276, 145, -494, 260, 7, 415, -460, -33, -328, -72, -394, 150, -261, 233, -500, 275, 31, 293, -336, 163, -11, -253, 366, -477, 296, 2, 274, 294, -498, 362, 219, -44, 373, -463, 281, -392, 473, -186, -95, 342, -263, 149, 201, -265, -103, 472, 311, -422, 418, -58, -492, 129, -362, -398, 78, 277, -352, 307, 451, -1, -32, 339, -415, -491, 20, -449, -150, -387, 274, 106, 469, -376, -191, 310, 48] in [90, 118]");
            expectedResult.add("\nSS : [-127, 205, 421, -133, -146, 92, 333, 360, -1, 88, -5, -113, -395, 101, 373, -227, -182, 243, 252, -305, 111, -452, -178, -75, 71, 102, 454, -86, -247, -117, -84, 80, -466, -301, -278, 176, 96, 355, 196, 239, -374, -241, -101, 300, 74, -53, 238, 293, 351, -121, 373, -486, 201, 352, -100, 49, 204, 211, -407, -408, 48, -51, -198, -350, -455, 199, 70, -160, -403, 149, 414, 481, -361, -140, 407, 492, 104, 291, -273, 410, 52, 171, -135, -463, -88, 192, 295, 26, 398, 194, -61, -196, -118, 421, 194, 42, 109, 243, 429, -441, -181, 4, 157, 442, 67, -196, -373, -428, 290, -229, 186, -154, 397, -183, -438, 320, -279, -216, 129, -428, 248, -420, -497, -135, -237, 421, -410, -92, 54, 229, -132, -424, 325, -475, -209, -370, 297, 282, -244, -120, -434, 61, -100, 303, -196, -392, 28, -268, 16, 411, 255, 147, 495, -265, -294, 356, -1, 202, 460, -300, 121, 49, -273, 432, -122, 180, 263, -231, -19, 242, 110, 451, -249, -459, -246, -305, -361, 193, 28, -495, 497, 102, 30, 332, 278, -234, -472, 232, 193, 104, 342, -226, 193, 345, 26, -118, -292, -388, 361, -1, -36, 121, 493, 177, -96, 305, 239, 412, -62, -126, -442, -486, -8, 125, 344, -47, -318, 125, -92, -454, 439, -358, 266, -58, -253, -141, 344, -413, -71, -461, 450, 276, 145, -494, 260, 7, 415, -460, -33, -328, -72, -394, 150, -261, 233, -500, 275, 31, 293, -336, 163, -11, -253, 366, -477, 296, 2, 274, 294, -498, 362, 219, -44, 373, -463, 281, -392, 473, -186, -95, 342, -263, 149, 201, -265, -103, 472, 311, -422, 418, -58, -492, 129, -362, -398, 78, 277, -352, 307, 451, -1, -32, 339, -415, -491, 20, -449, -150, -387, 274, 106, 469, -376, -191, 310, 48] in [90, 118]");
        }
        quicksort.sort(array, fastLoggingResult, 90, 118);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        quicksort = new Quicksort(PivotFinder.getRandomPivot(91169420), 30);

        array = new int[]{-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, 129, 45, 171, 404, -158, -20, 213, -222, -39, 235, 257, -54, -25, -252, -280, -149, 289, 81, -171, -38, -348, 169, 117, 125, -316, 383, -68, -138, -408, 368, 499, 496, 154, 289, -209, -167, 490, 147, -106, -365, 154, -204, 35, 344, 4, 387, 1, 434, -448, -24, 227, -163, -382, 261, 162, 138, 456, 285, 408, 464, 208, -456, -95, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476};
        sortedArray = new int[]{-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -167, -163, -158, -149, -138, -106, -95, -68, -54, -39, -38, -25, -24, -20, 1, 4, 35, 45, 81, 117, 125, 129, 138, 147, 154, 154, 162, 169, 171, 208, 213, 227, 235, 257, 261, 285, 289, 289, 344, 368, 383, 387, 404, 408, 434, 456, 464, 490, 496, 499, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, 129, 45, 171, 404, -158, -20, 213, -222, -39, 235, 257, -54, -25, -252, -280, -149, 289, 81, -171, -38, -348, 169, 117, 125, -316, 383, -68, -138, -408, 368, 499, 496, 154, 289, -209, -167, 490, 147, -106, -365, 154, -204, 35, 344, 4, 387, 1, 434, -448, -24, 227, -163, -382, 261, 162, 138, 456, 285, 408, 464, 208, -456, -95, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [92, 154]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -382, -448, -204, -365, -209, -408, -222, -316, -348, -280, -252, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 499, 496, 154, 289, -20, -167, 490, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 208, 129, -25, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [92, 103]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -382, -448, -204, -365, -209, -408, -222, -316, -348, -280, -252, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 499, 496, 154, 289, -20, -167, 490, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 208, 129, -25, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 154]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -382, -448, -204, -365, -209, -408, -222, -316, -348, -280, -252, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 499, 496, 154, 289, -20, -167, 490, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 208, 129, -25, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [92, 103]");
            expectedResult.add("\nSS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -382, -448, -204, -365, -209, -408, -222, -316, -348, -280, -252, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 499, 496, 154, 289, -20, -167, 490, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 208, 129, -25, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [92, 103]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 499, 496, 154, 289, -20, -167, 490, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 208, 129, -25, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 154]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 129, 208, 154, 289, -20, -167, -25, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 151]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 129, 208, 154, 289, -20, -167, -25, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [153, 154]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 257, -149, 289, 81, -95, -38, 235, 169, 117, 125, -39, 383, -68, -138, 213, 368, 129, 208, 154, 289, -20, -167, -25, 147, -106, -158, 154, 404, 35, 344, 4, 387, 1, 434, 171, -24, 227, -163, 45, 261, 162, 138, 456, 285, 408, 464, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 151]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 138, -149, 45, 81, -95, -38, -163, -24, 117, 125, -39, 1, -68, -138, 4, 35, 129, -158, -106, -25, -20, -167, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 127]");
            expectedResult.add("\n\tLPA : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 138, -149, 45, 81, -95, -38, -163, -24, 117, 125, -39, 1, -68, -138, 4, 35, 129, -158, -106, -25, -20, -167, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [129, 151]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 138, -149, 45, 81, -95, -38, -163, -24, 117, 125, -39, 1, -68, -138, 4, 35, 129, -158, -106, -25, -20, -167, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 127]");
            expectedResult.add("\nSS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -54, 138, -149, 45, 81, -95, -38, -163, -24, 117, 125, -39, 1, -68, -138, 4, 35, 129, -158, -106, -25, -20, -167, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [105, 127]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -167, -163, -158, -149, -138, -106, -95, -68, -54, -39, -38, -25, -24, -20, 1, 4, 35, 45, 81, 117, 125, 129, 138, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [129, 151]");
            expectedResult.add("\nSS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -167, -163, -158, -149, -138, -106, -95, -68, -54, -39, -38, -25, -24, -20, 1, 4, 35, 45, 81, 117, 125, 129, 138, 147, 464, 154, 208, 154, 404, 368, 344, 213, 387, 383, 434, 171, 169, 227, 235, 289, 261, 162, 257, 456, 285, 408, 289, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [129, 151]");
            expectedResult.add("\nQS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -167, -163, -158, -149, -138, -106, -95, -68, -54, -39, -38, -25, -24, -20, 1, 4, 35, 45, 81, 117, 125, 129, 138, 147, 154, 154, 162, 169, 171, 208, 213, 227, 235, 257, 261, 285, 289, 289, 344, 368, 383, 387, 404, 408, 434, 456, 464, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [153, 154]");
            expectedResult.add("\nSS : [-40, -327, -373, -380, 382, 225, -121, -58, -80, 117, 452, -247, 97, 242, -183, -194, -190, 287, 202, 105, -68, -432, -394, -241, 396, -133, 341, -204, -272, 350, 167, 278, 453, -469, -24, -38, -325, -350, -497, 105, 32, 481, 486, 214, 193, 74, 492, 167, 56, -55, 101, -107, 198, -416, 355, -431, -359, 154, -34, -195, -199, 104, 38, -195, 125, 371, 186, 384, -29, -401, -95, 103, -68, 455, -202, -240, 469, -125, -15, -481, 202, 435, -97, -478, 101, -121, -165, 320, 428, 93, 422, 133, -456, -448, -408, -382, -365, -348, -316, -280, -252, -222, -209, -204, -171, -167, -163, -158, -149, -138, -106, -95, -68, -54, -39, -38, -25, -24, -20, 1, 4, 35, 45, 81, 117, 125, 129, 138, 147, 154, 154, 162, 169, 171, 208, 213, 227, 235, 257, 261, 285, 289, 289, 344, 368, 383, 387, 404, 408, 434, 456, 464, 490, 499, 496, -111, -80, -40, 289, 454, -104, -277, 360, -264, -439, -35, -150, -12, -439, -255, 28, 82, 398, 52, -63, 123, 160, -282, 162, 124, -180, 285, 123, -37, 410, 16, -166, 365, -464, 198, 275, 193, -41, -384, -337, -331, -205, 105, -493, 427, -127, 9, -451, -113, -111, -256, 137, 224, -14, -363, -31, -264, -468, 155, -77, -310, 361, 397, -124, -449, 357, 438, 242, 317, 117, -97, -456, -363, -420, 430, -230, 343, -249, 335, 48, 332, -206, 442, -432, -264, -148, 440, 372, 482, 246, 371, -334, 89, 289, -102, 442, 228, -228, -290, 170, 414, 485, -372, -298, -307, -217, -386, -181, 366, -375, 448, -326, -130, -113, -372, 122, 207, -446, 355, -114, 221, 315, -63, 397, -300, -138, 427, -183, 352, 113, -80, -33, -447, -142, -463, -195, 497, 216, -186, -414, -198, -470, -305, 174, -47, -476] in [153, 154]");
        }
        quicksort.sort(array, fastLoggingResult, 92, 154);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        array = new int[]{-319, 337, -23, -213, -234, -134, -183, 248, 111, -397, -483, -29, 23, 111, 145, 325, 40, 338, 468, -295, 372, -396, -333, -262, -319, 126, -167, -376, -304, -276, 364, 142, 363, -405, -258, -33, 265, 356, 486, -113, -409, -274, -149, 478, 420, 74, 334, 479, -279, 456, -295, -313, -277, 319, 39, -472, 478, 81, -496, -371, 480, 124, 193, 400, 304, 125, 119, -265, 41, -408, -370, -58, 23, 466, -446, 229, 404, -225, -415, -334, 55, -480, -477, -318, -255, -124, -121, -120, 262, 239, 227, -96, -171, 328, -425, -419, 84, 483, 7, -450, 459, 216, -453, -328, 354, 131, -91, -379, 306, 242, -81, -278, 141, -19, -402, -482, -388, 255, 351, -474, -405, -68, 460, 221, 394, 115, 226, -135, -301, -350, 322, 481, -350, 72, -125, -214, -114, -403, -215, -455, 35, 318, 380, 266, 346, 205, 119, 263, -458, 94, 122, 309, -157, -460, -393, 72, 460, -303, -122, -193, -151, -420, 29, 114, -380, 109, 496, 112, -298, -316, -231, -227, 315, -464, 148, 200, -305, -93, -111, 178, -301, -118, 294, -390, -400, 251, 48, -402, -153, 71, 47, -219, 26, -177, -404, -217, -141, -446, -361, 101, -281, 404, -31, -483, -227, -61, 2, 22, 473, 219, 360, 58, -80, -15, -282, 401, 48, -339, -28, -134, -18, 64, 121, -187, 59, -219, 121, 243, 227, 172, -300, 191, 339, 17, 454, -154, 151, 332, 372, 113, 461, -263, -455, 316, 377, 239, -227, -226, 430, 222, 423, -287, -458, 241, -353, 339, -138, -420, 75, -277, -487, 255, -213, 304, 264, 31, 299, 91, -222, 70, 325, 245, -42, 473, 96, 82, -334, 495, 425, -251, 286, 178, -444, 469, 442, -202, -41, -291, 481, 278, 51, 258, -151, -66, 384, -43, 312, -469, 164, 72, 181, -258, 328, 405, -305, -265};
        sortedArray = new int[]{-319, 337, -23, -213, -234, -134, -183, 248, 111, -397, -483, -29, 23, 111, 145, 325, 40, 338, 468, -295, 372, -396, -333, -262, -319, 126, -167, -472, -409, -405, -376, -313, -304, -295, -279, -277, -276, -274, -258, -149, -113, -33, 39, 74, 142, 265, 319, 334, 356, 363, 364, 420, 456, 478, 479, 486, 478, 81, -496, -371, 480, 124, 193, 400, 304, 125, 119, -265, 41, -408, -370, -58, 23, 466, -446, 229, 404, -225, -415, -334, 55, -480, -477, -318, -255, -124, -121, -120, 262, 239, 227, -96, -171, 328, -425, -419, 84, 483, 7, -450, 459, 216, -453, -328, 354, 131, -91, -379, 306, 242, -81, -278, 141, -19, -402, -482, -388, 255, 351, -474, -405, -68, 460, 221, 394, 115, 226, -135, -301, -350, 322, 481, -350, 72, -125, -214, -114, -403, -215, -455, 35, 318, 380, 266, 346, 205, 119, 263, -458, 94, 122, 309, -157, -460, -393, 72, 460, -303, -122, -193, -151, -420, 29, 114, -380, 109, 496, 112, -298, -316, -231, -227, 315, -464, 148, 200, -305, -93, -111, 178, -301, -118, 294, -390, -400, 251, 48, -402, -153, 71, 47, -219, 26, -177, -404, -217, -141, -446, -361, 101, -281, 404, -31, -483, -227, -61, 2, 22, 473, 219, 360, 58, -80, -15, -282, 401, 48, -339, -28, -134, -18, 64, 121, -187, 59, -219, 121, 243, 227, 172, -300, 191, 339, 17, 454, -154, 151, 332, 372, 113, 461, -263, -455, 316, 377, 239, -227, -226, 430, 222, 423, -287, -458, 241, -353, 339, -138, -420, 75, -277, -487, 255, -213, 304, 264, 31, 299, 91, -222, 70, 325, 245, -42, 473, 96, 82, -334, 495, 425, -251, 286, 178, -444, 469, 442, -202, -41, -291, 481, 278, 51, 258, -151, -66, 384, -43, 312, -469, 164, 72, 181, -258, 328, 405, -305, -265};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-319, 337, -23, -213, -234, -134, -183, 248, 111, -397, -483, -29, 23, 111, 145, 325, 40, 338, 468, -295, 372, -396, -333, -262, -319, 126, -167, -376, -304, -276, 364, 142, 363, -405, -258, -33, 265, 356, 486, -113, -409, -274, -149, 478, 420, 74, 334, 479, -279, 456, -295, -313, -277, 319, 39, -472, 478, 81, -496, -371, 480, 124, 193, 400, 304, 125, 119, -265, 41, -408, -370, -58, 23, 466, -446, 229, 404, -225, -415, -334, 55, -480, -477, -318, -255, -124, -121, -120, 262, 239, 227, -96, -171, 328, -425, -419, 84, 483, 7, -450, 459, 216, -453, -328, 354, 131, -91, -379, 306, 242, -81, -278, 141, -19, -402, -482, -388, 255, 351, -474, -405, -68, 460, 221, 394, 115, 226, -135, -301, -350, 322, 481, -350, 72, -125, -214, -114, -403, -215, -455, 35, 318, 380, 266, 346, 205, 119, 263, -458, 94, 122, 309, -157, -460, -393, 72, 460, -303, -122, -193, -151, -420, 29, 114, -380, 109, 496, 112, -298, -316, -231, -227, 315, -464, 148, 200, -305, -93, -111, 178, -301, -118, 294, -390, -400, 251, 48, -402, -153, 71, 47, -219, 26, -177, -404, -217, -141, -446, -361, 101, -281, 404, -31, -483, -227, -61, 2, 22, 473, 219, 360, 58, -80, -15, -282, 401, 48, -339, -28, -134, -18, 64, 121, -187, 59, -219, 121, 243, 227, 172, -300, 191, 339, 17, 454, -154, 151, 332, 372, 113, 461, -263, -455, 316, 377, 239, -227, -226, 430, 222, 423, -287, -458, 241, -353, 339, -138, -420, 75, -277, -487, 255, -213, 304, 264, 31, 299, 91, -222, 70, 325, 245, -42, 473, 96, 82, -334, 495, 425, -251, 286, 178, -444, 469, 442, -202, -41, -291, 481, 278, 51, 258, -151, -66, 384, -43, 312, -469, 164, 72, 181, -258, 328, 405, -305, -265] in [27, 55]");
            expectedResult.add("\nSS : [-319, 337, -23, -213, -234, -134, -183, 248, 111, -397, -483, -29, 23, 111, 145, 325, 40, 338, 468, -295, 372, -396, -333, -262, -319, 126, -167, -376, -304, -276, 364, 142, 363, -405, -258, -33, 265, 356, 486, -113, -409, -274, -149, 478, 420, 74, 334, 479, -279, 456, -295, -313, -277, 319, 39, -472, 478, 81, -496, -371, 480, 124, 193, 400, 304, 125, 119, -265, 41, -408, -370, -58, 23, 466, -446, 229, 404, -225, -415, -334, 55, -480, -477, -318, -255, -124, -121, -120, 262, 239, 227, -96, -171, 328, -425, -419, 84, 483, 7, -450, 459, 216, -453, -328, 354, 131, -91, -379, 306, 242, -81, -278, 141, -19, -402, -482, -388, 255, 351, -474, -405, -68, 460, 221, 394, 115, 226, -135, -301, -350, 322, 481, -350, 72, -125, -214, -114, -403, -215, -455, 35, 318, 380, 266, 346, 205, 119, 263, -458, 94, 122, 309, -157, -460, -393, 72, 460, -303, -122, -193, -151, -420, 29, 114, -380, 109, 496, 112, -298, -316, -231, -227, 315, -464, 148, 200, -305, -93, -111, 178, -301, -118, 294, -390, -400, 251, 48, -402, -153, 71, 47, -219, 26, -177, -404, -217, -141, -446, -361, 101, -281, 404, -31, -483, -227, -61, 2, 22, 473, 219, 360, 58, -80, -15, -282, 401, 48, -339, -28, -134, -18, 64, 121, -187, 59, -219, 121, 243, 227, 172, -300, 191, 339, 17, 454, -154, 151, 332, 372, 113, 461, -263, -455, 316, 377, 239, -227, -226, 430, 222, 423, -287, -458, 241, -353, 339, -138, -420, 75, -277, -487, 255, -213, 304, 264, 31, 299, 91, -222, 70, 325, 245, -42, 473, 96, 82, -334, 495, 425, -251, 286, 178, -444, 469, 442, -202, -41, -291, 481, 278, 51, 258, -151, -66, 384, -43, 312, -469, 164, 72, 181, -258, 328, 405, -305, -265] in [27, 55]");
        }
        quicksort.sort(array, fastLoggingResult, 27, 55);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        quicksort = new Quicksort(PivotFinder.getMedianPivotFront(3), 30);

        array = new int[]{-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -153, -331, -363, -170, 189, 370, 461, -51, -13, 245, 138, -377, -112, 362, 123, -314, -153, -443, -327, 480, 7, -46, -454, -283, 198, 325, -497, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, -437, 103, -227, 442, -285, -239, -213, -369, 463, -209, 52, 94, 346, -372, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, -488, -296, 143, 321, -195, 204, 459, 276, -189, -461, -36, -37, 214, -132, 119, -283, -441, -477, -491, -388, -313, 375, 198, -259, -203, 293, 325, 36, -331, 93, -168, 216, 70, 458, 434, -467, -219, -448, -194, -159, 291, 133, 442, 406, -448, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451};
        sortedArray = new int[]{-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 22, 36, 52, 70, 93, 94, 103, 119, 123, 133, 138, 143, 146, 189, 198, 198, 204, 214, 216, 218, 245, 245, 272, 275, 276, 283, 291, 293, 321, 325, 325, 328, 341, 346, 348, 362, 370, 375, 382, 406, 412, 425, 434, 442, 442, 458, 459, 461, 461, 463, 480, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -153, -331, -363, -170, 189, 370, 461, -51, -13, 245, 138, -377, -112, 362, 123, -314, -153, -443, -327, 480, 7, -46, -454, -283, 198, 325, -497, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, -437, 103, -227, 442, -285, -239, -213, -369, 463, -209, 52, 94, 346, -372, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, -488, -296, 143, 321, -195, 204, 459, 276, -189, -461, -36, -37, 214, -132, 119, -283, -441, -477, -491, -388, -313, 375, 198, -259, -203, 293, 325, 36, -331, 93, -168, 216, 70, 458, 434, -467, -219, -448, -194, -159, 291, 133, 442, 406, -448, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [70, 182]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -448, -448, -363, -467, -331, -388, -491, -477, -441, -461, -488, -377, -372, -369, -437, -497, -454, -443, -331, 480, 7, -46, -153, -283, 198, 325, -314, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, 123, 103, -227, 442, -285, -239, -213, 362, 463, -209, 52, 94, 346, -112, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, 138, -296, 143, 321, -195, 204, 459, 276, -189, 245, -36, -37, 214, -132, 119, -283, -13, -51, 461, 370, -313, 375, 198, -259, -203, 293, 325, 36, 189, 93, -168, 216, 70, 458, 434, -170, -219, -153, -194, -159, 291, 133, 442, 406, -327, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [70, 87]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -448, -448, -363, -467, -331, -388, -491, -477, -441, -461, -488, -377, -372, -369, -437, -497, -454, -443, -331, 480, 7, -46, -153, -283, 198, 325, -314, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, 123, 103, -227, 442, -285, -239, -213, 362, 463, -209, 52, 94, 346, -112, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, 138, -296, 143, 321, -195, 204, 459, 276, -189, 245, -36, -37, 214, -132, 119, -283, -13, -51, 461, 370, -313, 375, 198, -259, -203, 293, 325, 36, 189, 93, -168, 216, 70, 458, 434, -170, -219, -153, -194, -159, 291, 133, 442, 406, -327, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 182]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -448, -448, -363, -467, -331, -388, -491, -477, -441, -461, -488, -377, -372, -369, -437, -497, -454, -443, -331, 480, 7, -46, -153, -283, 198, 325, -314, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, 123, 103, -227, 442, -285, -239, -213, 362, 463, -209, 52, 94, 346, -112, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, 138, -296, 143, 321, -195, 204, 459, 276, -189, 245, -36, -37, 214, -132, 119, -283, -13, -51, 461, 370, -313, 375, 198, -259, -203, 293, 325, 36, 189, 93, -168, 216, 70, 458, 434, -170, -219, -153, -194, -159, 291, 133, 442, 406, -327, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [70, 87]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -448, -448, -363, -467, -331, -388, -491, -477, -441, -461, -488, -377, -372, -369, -437, -497, -454, -443, -331, 480, 7, -46, -153, -283, 198, 325, -314, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, 123, 103, -227, 442, -285, -239, -213, 362, 463, -209, 52, 94, 346, -112, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, 138, -296, 143, 321, -195, 204, 459, 276, -189, 245, -36, -37, 214, -132, 119, -283, -13, -51, 461, 370, -313, 375, 198, -259, -203, 293, 325, 36, 189, 93, -168, 216, 70, 458, 434, -170, -219, -153, -194, -159, 291, 133, 442, 406, -327, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [70, 87]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, 480, 7, -46, -153, -283, 198, 325, -314, 272, -39, -321, 22, -157, -190, 482, 245, 218, -249, 412, -196, -110, 123, 103, -227, 442, -285, -239, -213, 362, 463, -209, 52, 94, 346, -112, 341, 283, -128, 328, -248, 382, 348, 275, -156, 461, -69, 425, 146, -244, 138, -296, 143, 321, -195, 204, 459, 276, -189, 245, -36, -37, 214, -132, 119, -283, -13, -51, 461, 370, -313, 375, 198, -259, -203, 293, 325, 36, 189, 93, -168, 216, 70, 458, 434, -170, -219, -153, -194, -159, 291, 133, 442, 406, -327, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 182]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -159, -327, -46, -153, -283, -194, -153, -314, -219, -39, -321, -170, -157, -190, -168, -203, -259, -249, -313, -196, -110, -51, -13, -227, -283, -285, -239, -213, -132, -37, -209, -36, -189, -195, -112, -296, -244, -128, -69, -248, -156, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 129]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -159, -327, -46, -153, -283, -194, -153, -314, -219, -39, -321, -170, -157, -190, -168, -203, -259, -249, -313, -196, -110, -51, -13, -227, -283, -285, -239, -213, -132, -37, -209, -36, -189, -195, -112, -296, -244, -128, -69, -248, -156, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 182]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -159, -327, -46, -153, -283, -194, -153, -314, -219, -39, -321, -170, -157, -190, -168, -203, -259, -249, -313, -196, -110, -51, -13, -227, -283, -285, -239, -213, -132, -37, -209, -36, -189, -195, -112, -296, -244, -128, -69, -248, -156, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 129]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -248, -327, -244, -296, -283, -194, -195, -314, -219, -189, -321, -170, -209, -190, -168, -203, -259, -249, -313, -196, -213, -239, -285, -227, -283, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 113]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -248, -327, -244, -296, -283, -194, -195, -314, -219, -189, -321, -170, -209, -190, -168, -203, -259, -249, -313, -196, -213, -239, -285, -227, -283, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [115, 129]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -248, -327, -244, -296, -283, -194, -195, -314, -219, -189, -321, -170, -209, -190, -168, -203, -259, -249, -313, -196, -213, -239, -285, -227, -283, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 113]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -248, -327, -244, -296, -283, -194, -195, -314, -219, -189, -321, -170, -209, -190, -168, -203, -259, -249, -313, -196, -213, -239, -285, -227, -283, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [89, 113]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [115, 129]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -51, -110, -132, -37, -157, -36, -39, -153, -112, -153, -46, -128, -69, -156, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [115, 129]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 275, 382, 461, 328, 425, 146, 283, 138, 341, 143, 321, 346, 204, 459, 276, 94, 245, 52, 463, 214, 362, 119, 442, 103, 123, 461, 370, 412, 375, 198, 218, 245, 293, 325, 36, 189, 93, 482, 216, 70, 458, 434, 22, 272, 325, 198, 480, 291, 133, 442, 406, 348, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 182]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 275, 348, 133, 328, 291, 146, 283, 138, 341, 143, 321, 346, 204, 198, 276, 94, 245, 52, 325, 214, 362, 119, 272, 103, 123, 22, 370, 70, 375, 198, 218, 245, 293, 325, 36, 189, 93, 216, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 168]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 275, 348, 133, 328, 291, 146, 283, 138, 341, 143, 321, 346, 204, 198, 276, 94, 245, 52, 325, 214, 362, 119, 272, 103, 123, 22, 370, 70, 375, 198, 218, 245, 293, 325, 36, 189, 93, 216, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [170, 182]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 275, 348, 133, 328, 291, 146, 283, 138, 341, 143, 321, 346, 204, 198, 276, 94, 245, 52, 325, 214, 362, 119, 272, 103, 123, 22, 370, 70, 375, 198, 218, 245, 293, 325, 36, 189, 93, 216, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 168]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 216, 93, 133, 189, 36, 146, 245, 138, 218, 143, 198, 70, 204, 198, 22, 94, 245, 52, 123, 214, 103, 119, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 153]");
            expectedResult.add("\n\tLPA : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 216, 93, 133, 189, 36, 146, 245, 138, 218, 143, 198, 70, 204, 198, 22, 94, 245, 52, 123, 214, 103, 119, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [155, 168]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 216, 93, 133, 189, 36, 146, 245, 138, 218, 143, 198, 70, 204, 198, 22, 94, 245, 52, 123, 214, 103, 119, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 153]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 216, 93, 133, 189, 36, 146, 245, 138, 218, 143, 198, 70, 204, 198, 22, 94, 245, 52, 123, 214, 103, 119, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [131, 153]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 22, 36, 52, 70, 93, 94, 103, 119, 123, 133, 138, 143, 146, 189, 198, 198, 204, 214, 216, 218, 245, 245, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [155, 168]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 22, 36, 52, 70, 93, 94, 103, 119, 123, 133, 138, 143, 146, 189, 198, 198, 204, 214, 216, 218, 245, 245, 272, 275, 325, 276, 370, 346, 375, 321, 341, 283, 293, 325, 291, 328, 348, 362, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [155, 168]");
            expectedResult.add("\nQS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 22, 36, 52, 70, 93, 94, 103, 119, 123, 133, 138, 143, 146, 189, 198, 198, 204, 214, 216, 218, 245, 245, 272, 275, 276, 283, 291, 293, 321, 325, 325, 328, 341, 346, 348, 362, 370, 375, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [170, 182]");
            expectedResult.add("\nSS : [-188, 263, -263, 116, -443, -151, 311, -326, -337, 36, 312, -473, -389, 216, 113, -294, -140, 187, -160, -449, -179, 292, 341, -417, 279, -208, 190, 203, -97, -66, 461, -418, 169, -115, -185, 480, 435, -235, 188, 182, -289, 338, 207, 407, 134, -419, 385, 242, -394, -170, -274, 331, -472, 396, -453, -316, 360, 244, -495, 152, 210, 432, -37, 491, 229, 398, -391, -251, -201, 17, -497, -491, -488, -477, -467, -461, -454, -448, -448, -443, -441, -437, -388, -377, -372, -369, -363, -331, -331, -327, -321, -314, -313, -296, -285, -283, -283, -259, -249, -248, -244, -239, -227, -219, -213, -209, -203, -196, -195, -194, -190, -189, -170, -168, -159, -157, -156, -153, -153, -132, -128, -112, -110, -69, -51, -46, -39, -37, -36, -13, 7, 22, 36, 52, 70, 93, 94, 103, 119, 123, 133, 138, 143, 146, 189, 198, 198, 204, 214, 216, 218, 245, 245, 272, 275, 276, 283, 291, 293, 321, 325, 325, 328, 341, 346, 348, 362, 370, 375, 382, 412, 458, 434, 461, 442, 463, 459, 480, 425, 461, 442, 406, 482, 377, 118, 414, 162, 146, -104, -459, 174, -392, 253, -208, -399, 232, 205, 347, 84, -236, -492, 240, -158, -97, 265, -476, 144, 463, -131, -157, -400, -277, -135, 340, 441, -485, -164, 447, -322, -258, -40, -358, -447, 294, 320, -181, -372, 161, 440, -464, -396, -439, -383, -214, 283, 195, 151, -408, -200, 277, -463, -432, 189, -336, 333, 136, 349, -460, 261, -262, -488, 419, 482, -250, -204, 29, 427, -78, 186, -325, -262, -147, -198, -288, 187, 305, 27, -191, -422, 310, 467, -258, 336, -117, 368, 192, -254, 191, -79, -414, -458, 342, 363, 300, -190, -73, 356, 282, -429, 162, 134, 43, 271, -289, -224, -43, 111, 425, -425, 446, -451] in [170, 182]");
        }
        quicksort.sort(array, fastLoggingResult, 70, 182);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

        quicksort = new Quicksort(PivotFinder.getMedianPivotFront(5), 30);

        array = new int[]{-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -208, 92, 470, -125, 455, -223, 466, 88, -67, 456, -27, -44, -288, 337, 3, -49, 429, 76, -268, -177, 260, 484, 263, -53, -496, -466, -262, -126, 398, 244, 199, -187, -121, -16, -56, -33, 296, 215, -478, 72, 383, 197, -129, -32, 160, 438, -99, -434, -411, -24, -235, -411, -380, 27, -258, -136, 162, 57, -400, -334, -307, 344, 444, -244, -80, 321, -24, 116, -105, -164, -255, 438, 466, 18, -279, 146, 55, -154, 496, 306, 32, -287, 262, 261, -149, 2, 222, 253, 184, 382, -402, 10, -131, 329, 44, 153, 245, 465, 35, 252, 280, -70, -405, -49, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321};
        sortedArray = new int[]{-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 2, 3, 10, 18, 27, 32, 35, 44, 55, 57, 72, 76, 88, 92, 116, 146, 153, 160, 162, 184, 197, 199, 215, 222, 244, 245, 252, 253, 260, 261, 262, 263, 280, 296, 306, 321, 329, 337, 344, 382, 383, 398, 429, 438, 438, 444, 455, 456, 465, 466, 466, 470, 484, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -208, 92, 470, -125, 455, -223, 466, 88, -67, 456, -27, -44, -288, 337, 3, -49, 429, 76, -268, -177, 260, 484, 263, -53, -496, -466, -262, -126, 398, 244, 199, -187, -121, -16, -56, -33, 296, 215, -478, 72, 383, 197, -129, -32, 160, 438, -99, -434, -411, -24, -235, -411, -380, 27, -258, -136, 162, 57, -400, -334, -307, 344, 444, -244, -80, 321, -24, 116, -105, -164, -255, 438, 466, 18, -279, 146, 55, -154, 496, 306, 32, -287, 262, 261, -149, 2, 222, 253, 184, 382, -402, 10, -131, 329, 44, 153, 245, 465, 35, 252, 280, -70, -405, -49, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 114]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -208, -405, -131, -402, -149, -223, -287, -154, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -411, -235, -411, -496, -466, -262, -126, -434, -129, -478, -187, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 42]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -208, -405, -131, -402, -149, -223, -287, -154, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -411, -235, -411, -496, -466, -262, -126, -434, -129, -478, -187, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [44, 114]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -208, -405, -131, -402, -149, -223, -287, -154, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -411, -235, -411, -496, -466, -262, -126, -434, -129, -478, -187, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 42]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -478, -405, -434, -466, -496, -411, -411, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 17]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -478, -405, -434, -466, -496, -411, -411, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [19, 42]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -478, -405, -434, -466, -496, -411, -411, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 17]");
            expectedResult.add("\nSS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -478, -405, -434, -466, -496, -411, -411, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [10, 17]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [19, 42]");
            expectedResult.add("\nSS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -279, -255, -164, -244, -288, -307, -334, -400, -136, -258, -268, -177, -380, -287, -235, -223, -149, -187, -262, -126, -131, -129, -208, -154, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [19, 42]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -16, -56, -33, 296, 215, 199, 72, 383, 197, 244, -32, 160, 438, -99, 398, -53, -24, 263, 484, 260, 27, 76, 429, 162, 57, -49, 3, 337, 344, 444, -44, -80, 321, -24, 116, -105, -27, 456, 438, 466, 18, -67, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, -49, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, -70, 92, -121, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [44, 114]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -56, -33, -70, -49, -67, -27, -105, -24, -80, -32, -44, -49, -99, -24, -53, -16, 263, 484, 260, 27, 76, 429, 162, 57, 438, 3, 337, 344, 444, 160, 244, 321, 197, 116, 383, 72, 456, 438, 466, 18, 199, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, 215, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, 296, 92, 398, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [44, 59]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -56, -33, -70, -49, -67, -27, -105, -24, -80, -32, -44, -49, -99, -24, -53, -16, 263, 484, 260, 27, 76, 429, 162, 57, 438, 3, 337, 344, 444, 160, 244, 321, 197, 116, 383, 72, 456, 438, 466, 18, 199, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, 215, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, 296, 92, 398, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [61, 114]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -56, -33, -70, -49, -67, -27, -105, -24, -80, -32, -44, -49, -99, -24, -53, -16, 263, 484, 260, 27, 76, 429, 162, 57, 438, 3, 337, 344, 444, 160, 244, 321, 197, 116, 383, 72, 456, 438, 466, 18, 199, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, 215, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, 296, 92, 398, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [44, 59]");
            expectedResult.add("\nSS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -56, -33, -70, -49, -67, -27, -105, -24, -80, -32, -44, -49, -99, -24, -53, -16, 263, 484, 260, 27, 76, 429, 162, 57, 438, 3, 337, 344, 444, 160, 244, 321, 197, 116, 383, 72, 456, 438, 466, 18, 199, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, 215, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, 296, 92, 398, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [44, 59]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 263, 484, 260, 27, 76, 429, 162, 57, 438, 3, 337, 344, 444, 160, 244, 321, 197, 116, 383, 72, 456, 438, 466, 18, 199, 146, 55, 88, 496, 306, 32, 466, 262, 261, 455, 2, 222, 253, 184, 382, 215, 10, 470, 329, 44, 153, 245, 465, 35, 252, 280, 296, 92, 398, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [61, 114]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 92, 252, 35, 27, 76, 245, 162, 57, 153, 3, 44, 10, 215, 160, 244, 184, 197, 116, 253, 72, 222, 2, 32, 18, 199, 146, 55, 88, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [61, 88]");
            expectedResult.add("\n\tLPA : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 92, 252, 35, 27, 76, 245, 162, 57, 153, 3, 44, 10, 215, 160, 244, 184, 197, 116, 253, 72, 222, 2, 32, 18, 199, 146, 55, 88, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [90, 114]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 92, 252, 35, 27, 76, 245, 162, 57, 153, 3, 44, 10, 215, 160, 244, 184, 197, 116, 253, 72, 222, 2, 32, 18, 199, 146, 55, 88, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [61, 88]");
            expectedResult.add("\nSS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 92, 252, 35, 27, 76, 245, 162, 57, 153, 3, 44, 10, 215, 160, 244, 184, 197, 116, 253, 72, 222, 2, 32, 18, 199, 146, 55, 88, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [61, 88]");
            expectedResult.add("\nQS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 2, 3, 10, 18, 27, 32, 35, 44, 55, 57, 72, 76, 88, 92, 116, 146, 153, 160, 162, 184, 197, 199, 215, 222, 244, 245, 252, 253, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [90, 114]");
            expectedResult.add("\nSS : [-87, -442, 339, -202, -310, 426, -492, -100, -7, -417, -496, -496, -478, -466, -434, -411, -411, -405, -402, -400, -380, -334, -307, -288, -287, -279, -268, -262, -258, -255, -244, -235, -223, -208, -187, -177, -164, -154, -149, -136, -131, -129, -126, -125, -121, -105, -99, -80, -70, -67, -56, -53, -49, -49, -44, -33, -32, -27, -24, -24, -16, 2, 3, 10, 18, 27, 32, 35, 44, 55, 57, 72, 76, 88, 92, 116, 146, 153, 160, 162, 184, 197, 199, 215, 222, 244, 245, 252, 253, 260, 306, 466, 466, 262, 261, 455, 438, 456, 383, 321, 382, 444, 344, 470, 329, 337, 438, 429, 465, 398, 484, 280, 296, 263, 496, -356, 324, 406, -116, 225, 70, -146, 420, -95, 117, 188, -333, -338, 469, 347, -122, 446, 234, -237, 212, 218, -165, 290, 230, 420, 316, 404, 301, 71, -257, 235, 134, -496, 7, 235, -132, 201, 240, 204, 466, 207, 366, -494, 99, 273, -312, -111, 216, -135, 88, 185, -299, 95, -197, -39, -175, 105, 311, 336, 233, -17, -322, -41, 184, 490, -242, -445, 452, -171, 354, -122, 71, -309, -272, 213, -8, 456, 215, 284, -497, 364, -187, 85, -214, 442, 179, -193, 222, 414, -458, -341, 173, -251, -437, -190, -496, 47, 22, 355, -215, 263, 142, 432, 480, -29, -303, -304, -264, 366, 319, -440, 149, -165, -27, 346, -179, 125, -351, -409, 160, -383, 117, -248, 133, 77, -446, 160, 154, -38, 226, -218, -105, -348, -486, 487, -344, -158, -446, -232, 77, -135, 243, 496, -312, -325, -84, -228, -261, -403, 304, 53, -461, 494, 399, -260, -35, 26, -16, -35, 347, -97, 64, 481, 106, 152, 33, -203, -188, -444, 458, 488, 85, -77, 439, 66, -28, -465, -123, 184, -496, -219, 324, -267, 180, 383, 321] in [90, 114]");
        }
        quicksort.sort(array, fastLoggingResult, 10, 114);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

        quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(3), 30);

        array = new int[]{136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, 112, -119, 104, -266, 319, 371, 97, -304, 228, 251, -324, -11, 113, -36, -472, -326, -438, -123, 186, 221, -485, -254, -336, 39, 248, 459, -265, -249, 457, 334, 58, 57, 63, 176, -289, -202, -385, 113, 159, -251, 187, -498, 258, 231, -441, -401, -139, -248, -257, -200, -135, 10, 362, 133, -7, 411, -470, -281, 376, 262, -413, -45, 164, -33, 230, 434, 387, -368, -366, 91, -448, -431, 173, 460, 106, 404, -132, 223, 122, 190, 93, 401, 391, -182, -427, 390, -481, 391, 251, -96, -172, 306, -128, -105, 280, -298, 185, 18, 263, -441, 162, 411, -136, -153, 161, 369, -145, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321};
        sortedArray = new int[]{136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 113, 113, 122, 133, 159, 161, 162, 164, 173, 176, 185, 186, 187, 190, 221, 223, 228, 230, 231, 248, 251, 251, 258, 262, 263, 280, 306, 319, 334, 362, 369, 371, 376, 387, 390, 391, 391, 401, 404, 411, 411, 434, 457, 459, 460, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, 112, -119, 104, -266, 319, 371, 97, -304, 228, 251, -324, -11, 113, -36, -472, -326, -438, -123, 186, 221, -485, -254, -336, 39, 248, 459, -265, -249, 457, 334, 58, 57, 63, 176, -289, -202, -385, 113, 159, -251, 187, -498, 258, 231, -441, -401, -139, -248, -257, -200, -135, 10, 362, 133, -7, 411, -470, -281, 376, 262, -413, -45, 164, -33, 230, 434, 387, -368, -366, 91, -448, -431, 173, 460, 106, 404, -132, 223, 122, 190, 93, 401, 391, -182, -427, 390, -481, 391, 251, -96, -172, 306, -128, -105, 280, -298, 185, 18, 263, -441, 162, 411, -136, -153, 161, 369, -145, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 132]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -145, -119, 104, -266, -153, -136, 97, -304, -441, 18, -324, -11, -298, -36, -472, -326, -438, -123, -105, -128, -485, -254, -336, 39, -172, -96, -265, -249, -481, -427, 58, 57, 63, -182, -289, -202, -385, 93, -132, -251, 106, -498, -431, -448, -441, -401, -139, -248, -257, -200, -135, 10, 91, -366, -7, -368, -470, -281, -33, -45, -413, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 86]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -145, -119, 104, -266, -153, -136, 97, -304, -441, 18, -324, -11, -298, -36, -472, -326, -438, -123, -105, -128, -485, -254, -336, 39, -172, -96, -265, -249, -481, -427, 58, 57, 63, -182, -289, -202, -385, 93, -132, -251, 106, -498, -431, -448, -441, -401, -139, -248, -257, -200, -135, 10, 91, -366, -7, -368, -470, -281, -33, -45, -413, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [88, 132]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -145, -119, 104, -266, -153, -136, 97, -304, -441, 18, -324, -11, -298, -36, -472, -326, -438, -123, -105, -128, -485, -254, -336, 39, -172, -96, -265, -249, -481, -427, 58, 57, 63, -182, -289, -202, -385, 93, -132, -251, 106, -498, -431, -448, -441, -401, -139, -248, -257, -200, -135, 10, 91, -366, -7, -368, -470, -281, -33, -45, -413, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 86]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -281, -470, -266, -153, -368, -366, -304, -441, -200, -324, -257, -298, -248, -472, -326, -438, -401, -441, -448, -485, -254, -336, -431, -172, -498, -265, -249, -481, -427, -251, -385, -202, -182, -289, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 60]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -281, -470, -266, -153, -368, -366, -304, -441, -200, -324, -257, -298, -248, -472, -326, -438, -401, -441, -448, -485, -254, -336, -431, -172, -498, -265, -249, -481, -427, -251, -385, -202, -182, -289, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [62, 86]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -281, -470, -266, -153, -368, -366, -304, -441, -200, -324, -257, -298, -248, -472, -326, -438, -401, -441, -448, -485, -254, -336, -431, -172, -498, -265, -249, -481, -427, -251, -385, -202, -182, -289, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 60]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -427, -470, -481, -498, -431, -485, -448, -441, -441, -438, -472, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 37]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -427, -470, -481, -498, -431, -485, -448, -441, -441, -438, -472, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [39, 60]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -427, -470, -481, -498, -431, -485, -448, -441, -441, -438, -472, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 37]");
            expectedResult.add("\nSS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -413, -427, -470, -481, -498, -431, -485, -448, -441, -441, -438, -472, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [26, 37]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [39, 60]");
            expectedResult.add("\nSS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -248, -257, -326, -324, -289, -200, -304, -366, -254, -336, -368, -172, -153, -265, -249, -266, -281, -251, -385, -202, -182, -298, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [39, 60]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [62, 86]");
            expectedResult.add("\nSS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, 57, 93, -132, 58, 106, -96, 39, -128, -105, -123, -139, -36, -11, 18, -135, 10, 91, 97, -7, -136, 104, -119, -33, -45, 63, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [62, 86]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 164, 376, 230, 434, 387, 411, 133, 362, 231, 258, 173, 460, 187, 404, 159, 223, 122, 190, 113, 401, 391, 176, 334, 390, 457, 391, 251, 459, 248, 306, 221, 186, 280, 113, 185, 251, 263, 228, 162, 411, 371, 319, 161, 369, 262, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [88, 132]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 164, 161, 230, 162, 228, 251, 133, 185, 231, 258, 173, 113, 187, 186, 159, 223, 122, 190, 113, 221, 248, 176, 251, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [88, 110]");
            expectedResult.add("\n\tLPA : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 164, 161, 230, 162, 228, 251, 133, 185, 231, 258, 173, 113, 187, 186, 159, 223, 122, 190, 113, 221, 248, 176, 251, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [112, 132]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 164, 161, 230, 162, 228, 251, 133, 185, 231, 258, 173, 113, 187, 186, 159, 223, 122, 190, 113, 221, 248, 176, 251, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [88, 110]");
            expectedResult.add("\nSS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 164, 161, 230, 162, 228, 251, 133, 185, 231, 258, 173, 113, 187, 186, 159, 223, 122, 190, 113, 221, 248, 176, 251, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [88, 110]");
            expectedResult.add("\nQS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 113, 113, 122, 133, 159, 161, 162, 164, 173, 176, 185, 186, 187, 190, 221, 223, 228, 230, 231, 248, 251, 251, 258, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [112, 132]");
            expectedResult.add("\nSS : [136, 68, 223, -167, 250, 34, 30, 352, 198, -322, 211, -287, 149, 304, -12, 184, -177, -89, 225, 241, -75, -431, -125, 395, 349, 57, -498, -485, -481, -472, -470, -448, -441, -441, -438, -431, -427, -413, -401, -385, -368, -366, -336, -326, -324, -304, -298, -289, -281, -266, -265, -257, -254, -251, -249, -248, -202, -200, -182, -172, -153, -145, -139, -136, -135, -132, -128, -123, -119, -105, -96, -45, -36, -33, -11, -7, 10, 18, 39, 57, 58, 63, 91, 93, 97, 104, 106, 112, 113, 113, 122, 133, 159, 161, 162, 164, 173, 176, 185, 186, 187, 190, 221, 223, 228, 230, 231, 248, 251, 251, 258, 262, 457, 391, 334, 459, 391, 306, 401, 404, 280, 460, 362, 411, 263, 387, 434, 411, 371, 319, 376, 369, 390, 40, -340, 431, 194, -472, -248, 146, -418, 322, -248, 79, -235, -272, 302, -205, 294, -282, -215, 244, -398, 211, 259, -140, 38, 209, 157, 471, -350, 99, -359, 258, -492, 494, -436, -405, 114, -88, -138, 151, -389, -67, 15, -138, -288, 329, -176, -429, 228, 160, 91, 463, 348, 384, 120, 70, -91, -408, 150, -23, 314, 442, 410, 98, -353, 19, 86, 407, 349, 260, 497, 13, 233, 41, 79, 293, 307, 87, 53, 28, -168, 130, -141, 325, 37, 163, -2, 441, -447, 129, -223, -129, -211, 439, -185, -170, -270, -229, -240, -378, -321, -409, 406, -41, 438, 32, 434, -142, 298, 36, 8, 107, -496, 353, 308, -344, -34, -144, 263, 355, -452, -336, -414, 91, 190, -434, 109, -391, -453, 322, -323, 206, -299, -154, -168, -262, 349, 167, -154, -369, -470, -82, 438, -164, 270, -480, -38, 302, 117, 313, 424, -72, -493, 56, 261, 131, 217, -324, 320, -24, 220, 204, 425, 490, -254, -309, 140, -358, 321] in [112, 132]");
        }
        quicksort.sort(array, fastLoggingResult, 26, 132);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());


        quicksort = new Quicksort(PivotFinder.getMedianPivotDistributed(5), 30);

        array = new int[]{106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, 13, -109, 34, -468, -435, 369, 262, -491, -377, 4, -498, -135, -250, -240, -40, 395, 74, 285, -362, 291, 63, -237, -38, -324, -76, -445, 493, 400, -295, 444, 479, -165, 449, 295, -264, -167, -57, 263, -99, -219, 269, 304, 479, -257, -384, 75, 269, -208, 303, 227, 81, 133, 194, -321, -32, 38, -312, -340, -221, 242, 96, 238, -253, 185, 401, -476, -119, 21, -99, 261, 251, 198, -96, 98, -213, 409, -33, -310, -422, 380, -381, 180, -215, 480, 196, -492, -456, 420, -390, -475, -113, -54, 183, -17, 73, 56, -79, -402, 25, -291, 371, 111, 5, 365, 187, -345, -385, 259, 430, 297, -101, 251, -65, 148, -126, 313, 463, -489, 276, 177, -305, -374, 37, 68, -151, 266, -322, 51, -348, -48, 332, -461, 421, -392, 94, -418, -101, 377, 103, -326, -141, -299, 388, 408, -438, 390, -456, -197, -79, -445, -238, 82, -454, 318, 448, -308, -311, 284, 213, 7, 118, 32, -187, 173, -121, 420, -342, 12, 139, 53, 439, -8, -87, 425, 329, 144, -402, 480, 6, 89, 453, -124, -243, -405, -176, -217, -243, -58, -227, 136, -470, 416, -179, -207, -214, 486, -450, 416, -219, 60, -281, -169, 459, 155, -141, -262, -433, 14, -465, -115, -327, 185, 246, -169, 66, -377, 453, -169, 480, 271, 120, 450, -231, 121, -390, 238, -171, -190, -156, -233, 340, -334, 125, 27, 318, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71};
        sortedArray = new int[]{106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 285, 291, 295, 297, 303, 304, 313, 318, 318, 329, 332, 340, 365, 369, 371, 377, 380, 388, 390, 395, 400, 401, 408, 409, 416, 416, 420, 420, 421, 425, 430, 439, 444, 448, 449, 450, 453, 453, 459, 463, 479, 479, 480, 480, 480, 486, 493, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71};
        fastLoggingResult = new FastLoggingResult();
        expectedResult = new ArrayList<>();
        {
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, 13, -109, 34, -468, -435, 369, 262, -491, -377, 4, -498, -135, -250, -240, -40, 395, 74, 285, -362, 291, 63, -237, -38, -324, -76, -445, 493, 400, -295, 444, 479, -165, 449, 295, -264, -167, -57, 263, -99, -219, 269, 304, 479, -257, -384, 75, 269, -208, 303, 227, 81, 133, 194, -321, -32, 38, -312, -340, -221, 242, 96, 238, -253, 185, 401, -476, -119, 21, -99, 261, 251, 198, -96, 98, -213, 409, -33, -310, -422, 380, -381, 180, -215, 480, 196, -492, -456, 420, -390, -475, -113, -54, 183, -17, 73, 56, -79, -402, 25, -291, 371, 111, 5, 365, 187, -345, -385, 259, 430, 297, -101, 251, -65, 148, -126, 313, 463, -489, 276, 177, -305, -374, 37, 68, -151, 266, -322, 51, -348, -48, 332, -461, 421, -392, 94, -418, -101, 377, 103, -326, -141, -299, 388, 408, -438, 390, -456, -197, -79, -445, -238, 82, -454, 318, 448, -308, -311, 284, 213, 7, 118, 32, -187, 173, -121, 420, -342, 12, 139, 53, 439, -8, -87, 425, 329, 144, -402, 480, 6, 89, 453, -124, -243, -405, -176, -217, -243, -58, -227, 136, -470, 416, -179, -207, -214, 486, -450, 416, -219, 60, -281, -169, 459, 155, -141, -262, -433, 14, -465, -115, -327, 185, 246, -169, 66, -377, 453, -169, 480, 271, 120, 450, -231, 121, -390, 238, -171, -190, -156, -233, 340, -334, 125, 27, 318, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 279]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, 13, -109, 34, -468, -435, 27, 125, -491, -377, 4, -498, -135, -250, -240, -40, -334, 74, -233, -362, -156, 63, -237, -38, -324, -76, -445, -190, -171, -295, -390, 121, -165, -231, 120, -264, -167, -57, -169, -99, -219, -377, 66, -169, -257, -384, 75, -327, -208, -115, -465, 81, 133, 14, -321, -32, 38, -312, -340, -221, -433, 96, -262, -253, -141, -169, -476, -119, 21, -99, -281, 60, -219, -96, 98, -213, -450, -33, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, 136, -390, -475, -113, -54, -227, -17, 73, 56, -79, -402, 25, -291, -58, 111, 5, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, 89, -126, 6, -402, -489, -87, -8, -305, -374, 37, 68, -151, 53, -322, 51, -348, -48, 139, -461, 12, -392, 94, -418, -101, -342, 103, -326, -141, -299, -121, -187, -438, 32, -456, -197, -79, -445, -238, 82, -454, 118, 7, -308, -311, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 201]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, 13, -109, 34, -468, -435, 27, 125, -491, -377, 4, -498, -135, -250, -240, -40, -334, 74, -233, -362, -156, 63, -237, -38, -324, -76, -445, -190, -171, -295, -390, 121, -165, -231, 120, -264, -167, -57, -169, -99, -219, -377, 66, -169, -257, -384, 75, -327, -208, -115, -465, 81, 133, 14, -321, -32, 38, -312, -340, -221, -433, 96, -262, -253, -141, -169, -476, -119, 21, -99, -281, 60, -219, -96, 98, -213, -450, -33, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, 136, -390, -475, -113, -54, -227, -17, 73, 56, -79, -402, 25, -291, -58, 111, 5, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, 89, -126, 6, -402, -489, -87, -8, -305, -374, 37, 68, -151, 53, -322, 51, -348, -48, 139, -461, 12, -392, 94, -418, -101, -342, 103, -326, -141, -299, -121, -187, -438, 32, -456, -197, -79, -445, -238, 82, -454, 118, 7, -308, -311, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [203, 279]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, 13, -109, 34, -468, -435, 27, 125, -491, -377, 4, -498, -135, -250, -240, -40, -334, 74, -233, -362, -156, 63, -237, -38, -324, -76, -445, -190, -171, -295, -390, 121, -165, -231, 120, -264, -167, -57, -169, -99, -219, -377, 66, -169, -257, -384, 75, -327, -208, -115, -465, 81, 133, 14, -321, -32, 38, -312, -340, -221, -433, 96, -262, -253, -141, -169, -476, -119, 21, -99, -281, 60, -219, -96, 98, -213, -450, -33, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, 136, -390, -475, -113, -54, -227, -17, 73, 56, -79, -402, 25, -291, -58, 111, 5, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, 89, -126, 6, -402, -489, -87, -8, -305, -374, 37, 68, -151, 53, -322, 51, -348, -48, 139, -461, 12, -392, 94, -418, -101, -342, 103, -326, -141, -299, -121, -187, -438, 32, -456, -197, -79, -445, -238, 82, -454, 118, 7, -308, -311, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 201]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -109, -454, -468, -435, -238, -445, -491, -377, -79, -498, -135, -250, -240, -40, -334, -197, -233, -362, -156, -456, -237, -38, -324, -76, -445, -190, -171, -295, -390, -438, -165, -231, -187, -264, -167, -57, -169, -99, -219, -377, -121, -169, -257, -384, -299, -327, -208, -115, -465, -141, -326, -342, -321, -101, -418, -312, -340, -221, -433, -392, -262, -253, -141, -169, -476, -119, -461, -99, -281, -48, -219, -96, -348, -213, -450, -311, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, -322, -390, -475, -113, -54, -227, -151, -374, -305, -79, -402, -87, -291, -58, -489, -402, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, -126, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 158]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -109, -454, -468, -435, -238, -445, -491, -377, -79, -498, -135, -250, -240, -40, -334, -197, -233, -362, -156, -456, -237, -38, -324, -76, -445, -190, -171, -295, -390, -438, -165, -231, -187, -264, -167, -57, -169, -99, -219, -377, -121, -169, -257, -384, -299, -327, -208, -115, -465, -141, -326, -342, -321, -101, -418, -312, -340, -221, -433, -392, -262, -253, -141, -169, -476, -119, -461, -99, -281, -48, -219, -96, -348, -213, -450, -311, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, -322, -390, -475, -113, -54, -227, -151, -374, -305, -79, -402, -87, -291, -58, -489, -402, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, -126, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [160, 201]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -109, -454, -468, -435, -238, -445, -491, -377, -79, -498, -135, -250, -240, -40, -334, -197, -233, -362, -156, -456, -237, -38, -324, -76, -445, -190, -171, -295, -390, -438, -165, -231, -187, -264, -167, -57, -169, -99, -219, -377, -121, -169, -257, -384, -299, -327, -208, -115, -465, -141, -326, -342, -321, -101, -418, -312, -340, -221, -433, -392, -262, -253, -141, -169, -476, -119, -461, -99, -281, -48, -219, -96, -348, -213, -450, -311, -310, -422, -214, -381, -207, -215, -179, -470, -492, -456, -322, -390, -475, -113, -54, -227, -151, -374, -305, -79, -402, -87, -291, -58, -489, -402, -243, -217, -345, -385, -176, -405, -243, -101, -124, -65, -126, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 158]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -197, -233, -362, -217, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -231, -305, -264, -374, -227, -475, -390, -219, -377, -322, -456, -257, -384, -299, -327, -208, -492, -465, -470, -326, -342, -321, -215, -418, -312, -340, -221, -433, -392, -262, -253, -207, -381, -476, -214, -461, -422, -281, -310, -219, -311, -348, -213, -450, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 120]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -197, -233, -362, -217, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -231, -305, -264, -374, -227, -475, -390, -219, -377, -322, -456, -257, -384, -299, -327, -208, -492, -465, -470, -326, -342, -321, -215, -418, -312, -340, -221, -433, -392, -262, -253, -207, -381, -476, -214, -461, -422, -281, -310, -219, -311, -348, -213, -450, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [122, 158]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -197, -233, -362, -217, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -231, -305, -264, -374, -227, -475, -390, -219, -377, -322, -456, -257, -384, -299, -327, -208, -492, -465, -470, -326, -342, -321, -215, -418, -312, -340, -221, -433, -392, -262, -253, -207, -381, -476, -214, -461, -422, -281, -310, -219, -311, -348, -213, -450, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 120]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -348, -450, -362, -311, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -310, -305, -264, -374, -281, -475, -390, -422, -377, -322, -456, -257, -384, -299, -327, -461, -492, -465, -470, -326, -342, -321, -476, -418, -312, -340, -381, -433, -392, -262, -253, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 107]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -348, -450, -362, -311, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -310, -305, -264, -374, -281, -475, -390, -422, -377, -322, -456, -257, -384, -299, -327, -461, -492, -465, -470, -326, -342, -321, -476, -418, -312, -340, -381, -433, -392, -262, -253, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [109, 120]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -343, -327, -308, -243, -454, -468, -435, -238, -445, -491, -377, -405, -498, -385, -250, -240, -345, -334, -348, -450, -362, -311, -456, -237, -243, -324, -402, -445, -489, -291, -295, -390, -438, -402, -310, -305, -264, -374, -281, -475, -390, -422, -377, -322, -456, -257, -384, -299, -327, -461, -492, -465, -470, -326, -342, -321, -476, -418, -312, -340, -381, -433, -392, -262, -253, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 107]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -392, -433, -381, -418, -454, -468, -435, -476, -445, -491, -377, -405, -498, -385, -470, -465, -345, -492, -348, -450, -362, -461, -456, -384, -456, -377, -402, -445, -489, -422, -390, -390, -438, -402, -475, -374, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 78]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -392, -433, -381, -418, -454, -468, -435, -476, -445, -491, -377, -405, -498, -385, -470, -465, -345, -492, -348, -450, -362, -461, -456, -384, -456, -377, -402, -445, -489, -422, -390, -390, -438, -402, -475, -374, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [80, 107]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -392, -433, -381, -418, -454, -468, -435, -476, -445, -491, -377, -405, -498, -385, -470, -465, -345, -492, -348, -450, -362, -461, -456, -384, -456, -377, -402, -445, -489, -422, -390, -390, -438, -402, -475, -374, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 78]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -475, -489, -445, -456, -454, -468, -456, -476, -445, -491, -461, -450, -498, -492, -470, -465, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 58]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -475, -489, -445, -456, -454, -468, -456, -476, -445, -491, -461, -450, -498, -492, -470, -465, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [60, 78]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -475, -489, -445, -456, -454, -468, -456, -476, -445, -491, -461, -450, -498, -492, -470, -465, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 58]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -475, -489, -445, -456, -454, -468, -456, -476, -445, -491, -461, -450, -498, -492, -470, -465, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [43, 58]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [60, 78]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -385, -348, -405, -362, -377, -435, -384, -418, -377, -402, -381, -433, -422, -390, -390, -374, -402, -392, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [60, 78]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [80, 107]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -305, -281, -310, -295, -291, -324, -322, -243, -257, -237, -299, -327, -311, -334, -240, -250, -326, -342, -321, -238, -243, -312, -340, -308, -327, -253, -262, -264, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [80, 107]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [109, 120]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -221, -215, -214, -208, -219, -227, -231, -219, -217, -197, -213, -207, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [109, 120]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -48, -99, -119, -169, -141, -101, -179, -141, -115, -169, -121, -99, -169, -113, -54, -57, -151, -167, -187, -79, -165, -87, -171, -58, -126, -76, -38, -156, -40, -135, -176, -79, -109, -101, -124, -65, -96, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [122, 158]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -176, -171, -165, -169, -187, -167, -179, -169, -169, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [122, 130]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -176, -171, -165, -169, -187, -167, -179, -169, -169, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [132, 158]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -176, -171, -165, -169, -187, -167, -179, -169, -169, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [122, 130]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -176, -171, -165, -169, -187, -167, -179, -169, -169, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [122, 130]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [132, 158]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -121, -99, -141, -113, -54, -57, -151, -101, -141, -79, -119, -87, -99, -58, -126, -76, -38, -96, -40, -135, -48, -79, -109, -101, -124, -65, -115, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [132, 158]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, 6, 5, 111, 25, -8, 56, 73, 37, 68, -17, 53, 136, 51, 98, 60, 139, 21, 12, 96, 94, 38, -32, 14, 103, 133, 81, 75, 66, 120, 121, 32, 63, 74, 4, 125, 27, 82, 34, 118, 7, 13, 89, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [160, 201]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, 6, 5, 13, 25, -8, 7, 27, 4, 14, -17, -32, 12, 21, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [160, 172]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, 6, 5, 13, 25, -8, 7, 27, 4, 14, -17, -32, 12, 21, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [174, 201]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, 6, 5, 13, 25, -8, 7, 27, 4, 14, -17, -32, 12, 21, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [160, 172]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, 6, 5, 13, 25, -8, 7, 27, 4, 14, -17, -32, 12, 21, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [160, 172]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [174, 201]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 60, 139, 51, 136, 96, 94, 38, 53, 68, 103, 133, 81, 75, 66, 120, 121, 89, 63, 74, 37, 125, 73, 82, 34, 118, 56, 111, 98, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [174, 201]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 213, 448, 318, 390, 408, 173, 388, 420, 377, 421, 332, 266, 439, 177, 276, 425, 329, 318, 463, 480, 313, 148, 453, 251, 297, 430, 259, 187, 365, 371, 183, 420, 196, 416, 480, 180, 380, 486, 409, 416, 198, 251, 261, 401, 459, 155, 185, 238, 242, 194, 227, 303, 269, 185, 246, 479, 304, 269, 453, 263, 480, 271, 295, 450, 449, 479, 444, 238, 400, 493, 291, 285, 340, 395, 262, 369, 284, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [203, 279]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 213, 262, 238, 271, 263, 173, 269, 246, 185, 269, 227, 266, 194, 177, 276, 242, 238, 185, 155, 261, 251, 148, 198, 251, 180, 196, 259, 187, 183, 284, 365, 420, 430, 416, 480, 297, 380, 486, 409, 416, 453, 313, 480, 401, 459, 463, 318, 329, 425, 439, 332, 303, 421, 377, 420, 479, 304, 388, 453, 408, 480, 390, 295, 450, 449, 479, 444, 318, 400, 493, 291, 285, 340, 395, 448, 369, 371, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [203, 231]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 213, 262, 238, 271, 263, 173, 269, 246, 185, 269, 227, 266, 194, 177, 276, 242, 238, 185, 155, 261, 251, 148, 198, 251, 180, 196, 259, 187, 183, 284, 365, 420, 430, 416, 480, 297, 380, 486, 409, 416, 453, 313, 480, 401, 459, 463, 318, 329, 425, 439, 332, 303, 421, 377, 420, 479, 304, 388, 453, 408, 480, 390, 295, 450, 449, 479, 444, 318, 400, 493, 291, 285, 340, 395, 448, 369, 371, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [233, 279]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 213, 262, 238, 271, 263, 173, 269, 246, 185, 269, 227, 266, 194, 177, 276, 242, 238, 185, 155, 261, 251, 148, 198, 251, 180, 196, 259, 187, 183, 284, 365, 420, 430, 416, 480, 297, 380, 486, 409, 416, 453, 313, 480, 401, 459, 463, 318, 329, 425, 439, 332, 303, 421, 377, 420, 479, 304, 388, 453, 408, 480, 390, 295, 450, 449, 479, 444, 318, 400, 493, 291, 285, 340, 395, 448, 369, 371, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [203, 231]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 213, 262, 238, 271, 263, 173, 269, 246, 185, 269, 227, 266, 194, 177, 276, 242, 238, 185, 155, 261, 251, 148, 198, 251, 180, 196, 259, 187, 183, 284, 365, 420, 430, 416, 480, 297, 380, 486, 409, 416, 453, 313, 480, 401, 459, 463, 318, 329, 425, 439, 332, 303, 421, 377, 420, 479, 304, 388, 453, 408, 480, 390, 295, 450, 449, 479, 444, 318, 400, 493, 291, 285, 340, 395, 448, 369, 371, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [203, 231]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 365, 420, 430, 416, 480, 297, 380, 486, 409, 416, 453, 313, 480, 401, 459, 463, 318, 329, 425, 439, 332, 303, 421, 377, 420, 479, 304, 388, 453, 408, 480, 390, 295, 450, 449, 479, 444, 318, 400, 493, 291, 285, 340, 395, 448, 369, 371, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [233, 279]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 365, 420, 369, 416, 395, 297, 380, 340, 409, 416, 285, 313, 291, 401, 400, 318, 318, 329, 295, 390, 332, 303, 371, 377, 420, 408, 304, 388, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [233, 260]");
            expectedResult.add("\n\tLPA : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 365, 420, 369, 416, 395, 297, 380, 340, 409, 416, 285, 313, 291, 401, 400, 318, 318, 329, 295, 390, 332, 303, 371, 377, 420, 408, 304, 388, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [262, 279]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 365, 420, 369, 416, 395, 297, 380, 340, 409, 416, 285, 313, 291, 401, 400, 318, 318, 329, 295, 390, 332, 303, 371, 377, 420, 408, 304, 388, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [233, 260]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 365, 420, 369, 416, 395, 297, 380, 340, 409, 416, 285, 313, 291, 401, 400, 318, 318, 329, 295, 390, 332, 303, 371, 377, 420, 408, 304, 388, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [233, 260]");
            expectedResult.add("\nQS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 285, 291, 295, 297, 303, 304, 313, 318, 318, 329, 332, 340, 365, 369, 371, 377, 380, 388, 390, 395, 400, 401, 408, 409, 416, 416, 420, 420, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [262, 279]");
            expectedResult.add("\nSS : [106, 58, -128, 418, -205, 496, 169, 226, 200, -313, 427, 126, 321, 384, 203, -22, -406, 411, -411, 98, 43, -446, 57, 245, 131, -26, -258, -264, -168, -171, 494, -293, -306, -99, -131, 353, 50, -301, 6, 97, 41, 452, 12, -498, -492, -491, -489, -476, -475, -470, -468, -465, -461, -456, -456, -454, -450, -445, -445, -438, -435, -433, -422, -418, -405, -402, -402, -392, -390, -390, -385, -384, -381, -377, -377, -374, -362, -348, -345, -343, -342, -340, -334, -327, -327, -326, -324, -322, -321, -312, -311, -310, -308, -305, -299, -295, -291, -281, -264, -262, -257, -253, -250, -243, -243, -240, -238, -237, -233, -231, -227, -221, -219, -219, -217, -215, -214, -213, -208, -207, -197, -190, -187, -179, -176, -171, -169, -169, -169, -167, -165, -156, -151, -141, -141, -135, -126, -124, -121, -119, -115, -113, -109, -101, -101, -99, -99, -96, -87, -79, -79, -76, -65, -58, -57, -54, -48, -40, -38, -33, -32, -17, -8, 4, 5, 6, 7, 12, 13, 14, 21, 25, 27, 32, 34, 37, 38, 51, 53, 56, 60, 63, 66, 68, 73, 74, 75, 81, 82, 89, 94, 96, 98, 103, 111, 118, 120, 121, 125, 133, 136, 139, 144, 148, 155, 173, 177, 180, 183, 185, 185, 187, 194, 196, 198, 213, 227, 238, 238, 242, 246, 251, 251, 259, 261, 262, 263, 266, 269, 269, 271, 276, 284, 285, 291, 295, 297, 303, 304, 313, 318, 318, 329, 332, 340, 365, 369, 371, 377, 380, 388, 390, 395, 400, 401, 408, 409, 416, 416, 420, 420, 421, 479, 480, 439, 425, 450, 449, 479, 444, 463, 459, 493, 480, 453, 486, 480, 448, 430, 453, -42, 375, -437, 169, 311, -22, -152, 477, -465, 170, -296, -308, -309, 12, 292, -171, 257, -498, -193, -129, 71] in [262, 279]");
        }
        quicksort.sort(array, fastLoggingResult, 43, 279);
        assertArrayEquals(sortedArray, array);
        assertEquals(expectedResult, fastLoggingResult.getOutputs());

    }

}
